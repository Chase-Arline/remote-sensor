

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Jul 15 17:14:07 2021

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1615
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.05
    46                           ; Generated 20/12/2018 GMT
    47                           ; 
    48                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F1615 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000E                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  008C                     	;# 
   113  008E                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010E                     	;# 
   132  0111                     	;# 
   133  0112                     	;# 
   134  0113                     	;# 
   135  0114                     	;# 
   136  0115                     	;# 
   137  0116                     	;# 
   138  0117                     	;# 
   139  0118                     	;# 
   140  0119                     	;# 
   141  011C                     	;# 
   142  018C                     	;# 
   143  018E                     	;# 
   144  0191                     	;# 
   145  0191                     	;# 
   146  0192                     	;# 
   147  0193                     	;# 
   148  0193                     	;# 
   149  0194                     	;# 
   150  0195                     	;# 
   151  0196                     	;# 
   152  0197                     	;# 
   153  0199                     	;# 
   154  0199                     	;# 
   155  0199                     	;# 
   156  019A                     	;# 
   157  019A                     	;# 
   158  019A                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019B                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019C                     	;# 
   165  019C                     	;# 
   166  019C                     	;# 
   167  019D                     	;# 
   168  019D                     	;# 
   169  019D                     	;# 
   170  019E                     	;# 
   171  019E                     	;# 
   172  019E                     	;# 
   173  019F                     	;# 
   174  019F                     	;# 
   175  019F                     	;# 
   176  019F                     	;# 
   177  019F                     	;# 
   178  020C                     	;# 
   179  020E                     	;# 
   180  0211                     	;# 
   181  0211                     	;# 
   182  0212                     	;# 
   183  0212                     	;# 
   184  0213                     	;# 
   185  0213                     	;# 
   186  0214                     	;# 
   187  0214                     	;# 
   188  0215                     	;# 
   189  0215                     	;# 
   190  0215                     	;# 
   191  0215                     	;# 
   192  0216                     	;# 
   193  0216                     	;# 
   194  0217                     	;# 
   195  0217                     	;# 
   196  028C                     	;# 
   197  028E                     	;# 
   198  0291                     	;# 
   199  0291                     	;# 
   200  0292                     	;# 
   201  0293                     	;# 
   202  0294                     	;# 
   203  0298                     	;# 
   204  0298                     	;# 
   205  0299                     	;# 
   206  029A                     	;# 
   207  029B                     	;# 
   208  029E                     	;# 
   209  030C                     	;# 
   210  030E                     	;# 
   211  038C                     	;# 
   212  038E                     	;# 
   213  0391                     	;# 
   214  0392                     	;# 
   215  0393                     	;# 
   216  0397                     	;# 
   217  0398                     	;# 
   218  0399                     	;# 
   219  040E                     	;# 
   220  0413                     	;# 
   221  0413                     	;# 
   222  0414                     	;# 
   223  0414                     	;# 
   224  0415                     	;# 
   225  0416                     	;# 
   226  0417                     	;# 
   227  0418                     	;# 
   228  041A                     	;# 
   229  041A                     	;# 
   230  041B                     	;# 
   231  041B                     	;# 
   232  041C                     	;# 
   233  041D                     	;# 
   234  041E                     	;# 
   235  041F                     	;# 
   236  0493                     	;# 
   237  0494                     	;# 
   238  0495                     	;# 
   239  0496                     	;# 
   240  049A                     	;# 
   241  049B                     	;# 
   242  049C                     	;# 
   243  049D                     	;# 
   244  058C                     	;# 
   245  058C                     	;# 
   246  058D                     	;# 
   247  058E                     	;# 
   248  058E                     	;# 
   249  058F                     	;# 
   250  0590                     	;# 
   251  0590                     	;# 
   252  0591                     	;# 
   253  0592                     	;# 
   254  0592                     	;# 
   255  0593                     	;# 
   256  0594                     	;# 
   257  0594                     	;# 
   258  0595                     	;# 
   259  0596                     	;# 
   260  0596                     	;# 
   261  0597                     	;# 
   262  0598                     	;# 
   263  0599                     	;# 
   264  059A                     	;# 
   265  059B                     	;# 
   266  059B                     	;# 
   267  059C                     	;# 
   268  059D                     	;# 
   269  060C                     	;# 
   270  060C                     	;# 
   271  060D                     	;# 
   272  060E                     	;# 
   273  060F                     	;# 
   274  060F                     	;# 
   275  0610                     	;# 
   276  0611                     	;# 
   277  0612                     	;# 
   278  0613                     	;# 
   279  0614                     	;# 
   280  0617                     	;# 
   281  0617                     	;# 
   282  0618                     	;# 
   283  0619                     	;# 
   284  061A                     	;# 
   285  061A                     	;# 
   286  061B                     	;# 
   287  061C                     	;# 
   288  0691                     	;# 
   289  0692                     	;# 
   290  0693                     	;# 
   291  0694                     	;# 
   292  0695                     	;# 
   293  0696                     	;# 
   294  0697                     	;# 
   295  0699                     	;# 
   296  069A                     	;# 
   297  0711                     	;# 
   298  0712                     	;# 
   299  0713                     	;# 
   300  0714                     	;# 
   301  0715                     	;# 
   302  0718                     	;# 
   303  0718                     	;# 
   304  0719                     	;# 
   305  071A                     	;# 
   306  071A                     	;# 
   307  071B                     	;# 
   308  071C                     	;# 
   309  071D                     	;# 
   310  0791                     	;# 
   311  0791                     	;# 
   312  0792                     	;# 
   313  0793                     	;# 
   314  0793                     	;# 
   315  0794                     	;# 
   316  0795                     	;# 
   317  0795                     	;# 
   318  0796                     	;# 
   319  0797                     	;# 
   320  0797                     	;# 
   321  0798                     	;# 
   322  0799                     	;# 
   323  079A                     	;# 
   324  080C                     	;# 
   325  080C                     	;# 
   326  080D                     	;# 
   327  080E                     	;# 
   328  080E                     	;# 
   329  080F                     	;# 
   330  0810                     	;# 
   331  0810                     	;# 
   332  0811                     	;# 
   333  0812                     	;# 
   334  0812                     	;# 
   335  0813                     	;# 
   336  0814                     	;# 
   337  0815                     	;# 
   338  0816                     	;# 
   339  0817                     	;# 
   340  0818                     	;# 
   341  0819                     	;# 
   342  081A                     	;# 
   343  081A                     	;# 
   344  081B                     	;# 
   345  081C                     	;# 
   346  081C                     	;# 
   347  081D                     	;# 
   348  088C                     	;# 
   349  088D                     	;# 
   350  088E                     	;# 
   351  088F                     	;# 
   352  088F                     	;# 
   353  0890                     	;# 
   354  0891                     	;# 
   355  0892                     	;# 
   356  0893                     	;# 
   357  0893                     	;# 
   358  0894                     	;# 
   359  0895                     	;# 
   360  0896                     	;# 
   361  0897                     	;# 
   362  0897                     	;# 
   363  0898                     	;# 
   364  0899                     	;# 
   365  0D8C                     	;# 
   366  0D8C                     	;# 
   367  0D8D                     	;# 
   368  0D8E                     	;# 
   369  0D8F                     	;# 
   370  0D8F                     	;# 
   371  0D90                     	;# 
   372  0D91                     	;# 
   373  0D92                     	;# 
   374  0D92                     	;# 
   375  0D93                     	;# 
   376  0D94                     	;# 
   377  0D95                     	;# 
   378  0D95                     	;# 
   379  0D96                     	;# 
   380  0D97                     	;# 
   381  0D98                     	;# 
   382  0D99                     	;# 
   383  0D9A                     	;# 
   384  0D9B                     	;# 
   385  0D9C                     	;# 
   386  0D9D                     	;# 
   387  0D9E                     	;# 
   388  0D9E                     	;# 
   389  0D9F                     	;# 
   390  0DA0                     	;# 
   391  0DA1                     	;# 
   392  0DA1                     	;# 
   393  0DA2                     	;# 
   394  0DA3                     	;# 
   395  0DA4                     	;# 
   396  0DA4                     	;# 
   397  0DA5                     	;# 
   398  0DA6                     	;# 
   399  0DA7                     	;# 
   400  0DA7                     	;# 
   401  0DA8                     	;# 
   402  0DA9                     	;# 
   403  0DAA                     	;# 
   404  0DAB                     	;# 
   405  0DAC                     	;# 
   406  0DAD                     	;# 
   407  0DAE                     	;# 
   408  0DAF                     	;# 
   409  0E0F                     	;# 
   410  0E10                     	;# 
   411  0E11                     	;# 
   412  0E12                     	;# 
   413  0E13                     	;# 
   414  0E14                     	;# 
   415  0E15                     	;# 
   416  0E16                     	;# 
   417  0E17                     	;# 
   418  0E18                     	;# 
   419  0E19                     	;# 
   420  0E1A                     	;# 
   421  0E1B                     	;# 
   422  0E1C                     	;# 
   423  0E1D                     	;# 
   424  0E1E                     	;# 
   425  0E1F                     	;# 
   426  0E20                     	;# 
   427  0E21                     	;# 
   428  0E22                     	;# 
   429  0E23                     	;# 
   430  0E24                     	;# 
   431  0E25                     	;# 
   432  0E26                     	;# 
   433  0E27                     	;# 
   434  0E28                     	;# 
   435  0E29                     	;# 
   436  0E2A                     	;# 
   437  0E2B                     	;# 
   438  0E2C                     	;# 
   439  0E2D                     	;# 
   440  0E2E                     	;# 
   441  0E90                     	;# 
   442  0E91                     	;# 
   443  0E92                     	;# 
   444  0E94                     	;# 
   445  0E95                     	;# 
   446  0EA0                     	;# 
   447  0EA1                     	;# 
   448  0EA2                     	;# 
   449  0EA3                     	;# 
   450  0EA4                     	;# 
   451  0EA5                     	;# 
   452  0F0F                     	;# 
   453  0F10                     	;# 
   454  0F11                     	;# 
   455  0F12                     	;# 
   456  0F13                     	;# 
   457  0F14                     	;# 
   458  0F15                     	;# 
   459  0F16                     	;# 
   460  0F17                     	;# 
   461  0F18                     	;# 
   462  0F19                     	;# 
   463  0F1A                     	;# 
   464  0F1B                     	;# 
   465  0F1C                     	;# 
   466  0F1D                     	;# 
   467  0F1E                     	;# 
   468  0F1F                     	;# 
   469  0F20                     	;# 
   470  0F21                     	;# 
   471  0F22                     	;# 
   472  0F23                     	;# 
   473  0F24                     	;# 
   474  0F25                     	;# 
   475  0F26                     	;# 
   476  0F27                     	;# 
   477  0F28                     	;# 
   478  0F29                     	;# 
   479  0F2A                     	;# 
   480  0F2B                     	;# 
   481  0F2C                     	;# 
   482  0F2D                     	;# 
   483  0F2E                     	;# 
   484  0F2F                     	;# 
   485  0F30                     	;# 
   486  0F31                     	;# 
   487  0F32                     	;# 
   488  0F33                     	;# 
   489  0F34                     	;# 
   490  0F35                     	;# 
   491  0F36                     	;# 
   492  0F37                     	;# 
   493  0FE4                     	;# 
   494  0FE5                     	;# 
   495  0FE6                     	;# 
   496  0FE7                     	;# 
   497  0FE8                     	;# 
   498  0FE9                     	;# 
   499  0FEA                     	;# 
   500  0FEB                     	;# 
   501  0FED                     	;# 
   502  0FEE                     	;# 
   503  0FEF                     	;# 
   504  0000                     	;# 
   505  0001                     	;# 
   506  0002                     	;# 
   507  0003                     	;# 
   508  0004                     	;# 
   509  0005                     	;# 
   510  0006                     	;# 
   511  0007                     	;# 
   512  0008                     	;# 
   513  0009                     	;# 
   514  000A                     	;# 
   515  000B                     	;# 
   516  000C                     	;# 
   517  000E                     	;# 
   518  0010                     	;# 
   519  0011                     	;# 
   520  0012                     	;# 
   521  0013                     	;# 
   522  0014                     	;# 
   523  0015                     	;# 
   524  0016                     	;# 
   525  0016                     	;# 
   526  0017                     	;# 
   527  0018                     	;# 
   528  0019                     	;# 
   529  001A                     	;# 
   530  001A                     	;# 
   531  001B                     	;# 
   532  001B                     	;# 
   533  001C                     	;# 
   534  001D                     	;# 
   535  001E                     	;# 
   536  001F                     	;# 
   537  008C                     	;# 
   538  008E                     	;# 
   539  0090                     	;# 
   540  0091                     	;# 
   541  0092                     	;# 
   542  0093                     	;# 
   543  0094                     	;# 
   544  0095                     	;# 
   545  0096                     	;# 
   546  0098                     	;# 
   547  0099                     	;# 
   548  009A                     	;# 
   549  009B                     	;# 
   550  009B                     	;# 
   551  009C                     	;# 
   552  009D                     	;# 
   553  009E                     	;# 
   554  009F                     	;# 
   555  010C                     	;# 
   556  010E                     	;# 
   557  0111                     	;# 
   558  0112                     	;# 
   559  0113                     	;# 
   560  0114                     	;# 
   561  0115                     	;# 
   562  0116                     	;# 
   563  0117                     	;# 
   564  0118                     	;# 
   565  0119                     	;# 
   566  011C                     	;# 
   567  018C                     	;# 
   568  018E                     	;# 
   569  0191                     	;# 
   570  0191                     	;# 
   571  0192                     	;# 
   572  0193                     	;# 
   573  0193                     	;# 
   574  0194                     	;# 
   575  0195                     	;# 
   576  0196                     	;# 
   577  0197                     	;# 
   578  0199                     	;# 
   579  0199                     	;# 
   580  0199                     	;# 
   581  019A                     	;# 
   582  019A                     	;# 
   583  019A                     	;# 
   584  019B                     	;# 
   585  019B                     	;# 
   586  019B                     	;# 
   587  019B                     	;# 
   588  019B                     	;# 
   589  019C                     	;# 
   590  019C                     	;# 
   591  019C                     	;# 
   592  019D                     	;# 
   593  019D                     	;# 
   594  019D                     	;# 
   595  019E                     	;# 
   596  019E                     	;# 
   597  019E                     	;# 
   598  019F                     	;# 
   599  019F                     	;# 
   600  019F                     	;# 
   601  019F                     	;# 
   602  019F                     	;# 
   603  020C                     	;# 
   604  020E                     	;# 
   605  0211                     	;# 
   606  0211                     	;# 
   607  0212                     	;# 
   608  0212                     	;# 
   609  0213                     	;# 
   610  0213                     	;# 
   611  0214                     	;# 
   612  0214                     	;# 
   613  0215                     	;# 
   614  0215                     	;# 
   615  0215                     	;# 
   616  0215                     	;# 
   617  0216                     	;# 
   618  0216                     	;# 
   619  0217                     	;# 
   620  0217                     	;# 
   621  028C                     	;# 
   622  028E                     	;# 
   623  0291                     	;# 
   624  0291                     	;# 
   625  0292                     	;# 
   626  0293                     	;# 
   627  0294                     	;# 
   628  0298                     	;# 
   629  0298                     	;# 
   630  0299                     	;# 
   631  029A                     	;# 
   632  029B                     	;# 
   633  029E                     	;# 
   634  030C                     	;# 
   635  030E                     	;# 
   636  038C                     	;# 
   637  038E                     	;# 
   638  0391                     	;# 
   639  0392                     	;# 
   640  0393                     	;# 
   641  0397                     	;# 
   642  0398                     	;# 
   643  0399                     	;# 
   644  040E                     	;# 
   645  0413                     	;# 
   646  0413                     	;# 
   647  0414                     	;# 
   648  0414                     	;# 
   649  0415                     	;# 
   650  0416                     	;# 
   651  0417                     	;# 
   652  0418                     	;# 
   653  041A                     	;# 
   654  041A                     	;# 
   655  041B                     	;# 
   656  041B                     	;# 
   657  041C                     	;# 
   658  041D                     	;# 
   659  041E                     	;# 
   660  041F                     	;# 
   661  0493                     	;# 
   662  0494                     	;# 
   663  0495                     	;# 
   664  0496                     	;# 
   665  049A                     	;# 
   666  049B                     	;# 
   667  049C                     	;# 
   668  049D                     	;# 
   669  058C                     	;# 
   670  058C                     	;# 
   671  058D                     	;# 
   672  058E                     	;# 
   673  058E                     	;# 
   674  058F                     	;# 
   675  0590                     	;# 
   676  0590                     	;# 
   677  0591                     	;# 
   678  0592                     	;# 
   679  0592                     	;# 
   680  0593                     	;# 
   681  0594                     	;# 
   682  0594                     	;# 
   683  0595                     	;# 
   684  0596                     	;# 
   685  0596                     	;# 
   686  0597                     	;# 
   687  0598                     	;# 
   688  0599                     	;# 
   689  059A                     	;# 
   690  059B                     	;# 
   691  059B                     	;# 
   692  059C                     	;# 
   693  059D                     	;# 
   694  060C                     	;# 
   695  060C                     	;# 
   696  060D                     	;# 
   697  060E                     	;# 
   698  060F                     	;# 
   699  060F                     	;# 
   700  0610                     	;# 
   701  0611                     	;# 
   702  0612                     	;# 
   703  0613                     	;# 
   704  0614                     	;# 
   705  0617                     	;# 
   706  0617                     	;# 
   707  0618                     	;# 
   708  0619                     	;# 
   709  061A                     	;# 
   710  061A                     	;# 
   711  061B                     	;# 
   712  061C                     	;# 
   713  0691                     	;# 
   714  0692                     	;# 
   715  0693                     	;# 
   716  0694                     	;# 
   717  0695                     	;# 
   718  0696                     	;# 
   719  0697                     	;# 
   720  0699                     	;# 
   721  069A                     	;# 
   722  0711                     	;# 
   723  0712                     	;# 
   724  0713                     	;# 
   725  0714                     	;# 
   726  0715                     	;# 
   727  0718                     	;# 
   728  0718                     	;# 
   729  0719                     	;# 
   730  071A                     	;# 
   731  071A                     	;# 
   732  071B                     	;# 
   733  071C                     	;# 
   734  071D                     	;# 
   735  0791                     	;# 
   736  0791                     	;# 
   737  0792                     	;# 
   738  0793                     	;# 
   739  0793                     	;# 
   740  0794                     	;# 
   741  0795                     	;# 
   742  0795                     	;# 
   743  0796                     	;# 
   744  0797                     	;# 
   745  0797                     	;# 
   746  0798                     	;# 
   747  0799                     	;# 
   748  079A                     	;# 
   749  080C                     	;# 
   750  080C                     	;# 
   751  080D                     	;# 
   752  080E                     	;# 
   753  080E                     	;# 
   754  080F                     	;# 
   755  0810                     	;# 
   756  0810                     	;# 
   757  0811                     	;# 
   758  0812                     	;# 
   759  0812                     	;# 
   760  0813                     	;# 
   761  0814                     	;# 
   762  0815                     	;# 
   763  0816                     	;# 
   764  0817                     	;# 
   765  0818                     	;# 
   766  0819                     	;# 
   767  081A                     	;# 
   768  081A                     	;# 
   769  081B                     	;# 
   770  081C                     	;# 
   771  081C                     	;# 
   772  081D                     	;# 
   773  088C                     	;# 
   774  088D                     	;# 
   775  088E                     	;# 
   776  088F                     	;# 
   777  088F                     	;# 
   778  0890                     	;# 
   779  0891                     	;# 
   780  0892                     	;# 
   781  0893                     	;# 
   782  0893                     	;# 
   783  0894                     	;# 
   784  0895                     	;# 
   785  0896                     	;# 
   786  0897                     	;# 
   787  0897                     	;# 
   788  0898                     	;# 
   789  0899                     	;# 
   790  0D8C                     	;# 
   791  0D8C                     	;# 
   792  0D8D                     	;# 
   793  0D8E                     	;# 
   794  0D8F                     	;# 
   795  0D8F                     	;# 
   796  0D90                     	;# 
   797  0D91                     	;# 
   798  0D92                     	;# 
   799  0D92                     	;# 
   800  0D93                     	;# 
   801  0D94                     	;# 
   802  0D95                     	;# 
   803  0D95                     	;# 
   804  0D96                     	;# 
   805  0D97                     	;# 
   806  0D98                     	;# 
   807  0D99                     	;# 
   808  0D9A                     	;# 
   809  0D9B                     	;# 
   810  0D9C                     	;# 
   811  0D9D                     	;# 
   812  0D9E                     	;# 
   813  0D9E                     	;# 
   814  0D9F                     	;# 
   815  0DA0                     	;# 
   816  0DA1                     	;# 
   817  0DA1                     	;# 
   818  0DA2                     	;# 
   819  0DA3                     	;# 
   820  0DA4                     	;# 
   821  0DA4                     	;# 
   822  0DA5                     	;# 
   823  0DA6                     	;# 
   824  0DA7                     	;# 
   825  0DA7                     	;# 
   826  0DA8                     	;# 
   827  0DA9                     	;# 
   828  0DAA                     	;# 
   829  0DAB                     	;# 
   830  0DAC                     	;# 
   831  0DAD                     	;# 
   832  0DAE                     	;# 
   833  0DAF                     	;# 
   834  0E0F                     	;# 
   835  0E10                     	;# 
   836  0E11                     	;# 
   837  0E12                     	;# 
   838  0E13                     	;# 
   839  0E14                     	;# 
   840  0E15                     	;# 
   841  0E16                     	;# 
   842  0E17                     	;# 
   843  0E18                     	;# 
   844  0E19                     	;# 
   845  0E1A                     	;# 
   846  0E1B                     	;# 
   847  0E1C                     	;# 
   848  0E1D                     	;# 
   849  0E1E                     	;# 
   850  0E1F                     	;# 
   851  0E20                     	;# 
   852  0E21                     	;# 
   853  0E22                     	;# 
   854  0E23                     	;# 
   855  0E24                     	;# 
   856  0E25                     	;# 
   857  0E26                     	;# 
   858  0E27                     	;# 
   859  0E28                     	;# 
   860  0E29                     	;# 
   861  0E2A                     	;# 
   862  0E2B                     	;# 
   863  0E2C                     	;# 
   864  0E2D                     	;# 
   865  0E2E                     	;# 
   866  0E90                     	;# 
   867  0E91                     	;# 
   868  0E92                     	;# 
   869  0E94                     	;# 
   870  0E95                     	;# 
   871  0EA0                     	;# 
   872  0EA1                     	;# 
   873  0EA2                     	;# 
   874  0EA3                     	;# 
   875  0EA4                     	;# 
   876  0EA5                     	;# 
   877  0F0F                     	;# 
   878  0F10                     	;# 
   879  0F11                     	;# 
   880  0F12                     	;# 
   881  0F13                     	;# 
   882  0F14                     	;# 
   883  0F15                     	;# 
   884  0F16                     	;# 
   885  0F17                     	;# 
   886  0F18                     	;# 
   887  0F19                     	;# 
   888  0F1A                     	;# 
   889  0F1B                     	;# 
   890  0F1C                     	;# 
   891  0F1D                     	;# 
   892  0F1E                     	;# 
   893  0F1F                     	;# 
   894  0F20                     	;# 
   895  0F21                     	;# 
   896  0F22                     	;# 
   897  0F23                     	;# 
   898  0F24                     	;# 
   899  0F25                     	;# 
   900  0F26                     	;# 
   901  0F27                     	;# 
   902  0F28                     	;# 
   903  0F29                     	;# 
   904  0F2A                     	;# 
   905  0F2B                     	;# 
   906  0F2C                     	;# 
   907  0F2D                     	;# 
   908  0F2E                     	;# 
   909  0F2F                     	;# 
   910  0F30                     	;# 
   911  0F31                     	;# 
   912  0F32                     	;# 
   913  0F33                     	;# 
   914  0F34                     	;# 
   915  0F35                     	;# 
   916  0F36                     	;# 
   917  0F37                     	;# 
   918  0FE4                     	;# 
   919  0FE5                     	;# 
   920  0FE6                     	;# 
   921  0FE7                     	;# 
   922  0FE8                     	;# 
   923  0FE9                     	;# 
   924  0FEA                     	;# 
   925  0FEB                     	;# 
   926  0FED                     	;# 
   927  0FEE                     	;# 
   928  0FEF                     	;# 
   929                           
   930                           	psect	idataBANK0
   931  057A                     __pidataBANK0:	
   932                           
   933                           ;initializer for _SYNC_WORDS
   934  057A  3467               	retlw	103
   935  057B  3467               	retlw	103
   936  057C  3467               	retlw	103
   937  057D  3467               	retlw	103
   938  057E  3467               	retlw	103
   939  057F  3467               	retlw	103
   940  0580  3467               	retlw	103
   941  0581  3467               	retlw	103
   942                           
   943                           ;initializer for getPowerSettings@F9489
   944  0582  3411               	retlw	17
   945  0583  3400               	retlw	0
   946                           
   947                           ;initializer for restartRx@F9485
   948  0584  34BD               	retlw	189
   949  0585  3406               	retlw	6
   950                           
   951                           ;initializer for startRSSISampling@F9481
   952  0586  34A3               	retlw	163
   953  0587  3401               	retlw	1
   954                           
   955                           ;initializer for checkRSSISampling@F9477
   956  0588  3423               	retlw	35
   957  0589  3400               	retlw	0
   958                           
   959                           ;initializer for getModeFlags@F9473
   960  058A  3427               	retlw	39
   961  058B  3400               	retlw	0
   962                           
   963                           ;initializer for getOperatingMode@F9464
   964  058C  3401               	retlw	1
   965  058D  3400               	retlw	0
   966                           
   967                           ;initializer for getRSSIThreshold@F9460
   968  058E  3429               	retlw	41
   969  058F  3400               	retlw	0
   970                           
   971                           ;initializer for getFifoFlags@F9456
   972  0590  3428               	retlw	40
   973  0591  3400               	retlw	0
   974                           
   975                           ;initializer for getRSSI@F9452
   976  0592  3424               	retlw	36
   977  0593  3400               	retlw	0
   978                           
   979                           ;initializer for setPreambleLength@F9437
   980  0594  34AD               	retlw	173
   981  0595  3403               	retlw	3
   982                           
   983                           ;initializer for checkForPayload@F9430
   984  0596  3428               	retlw	40
   985  0597  3400               	retlw	0
   986                           
   987                           ;initializer for setModulationThreshold@F9426
   988  0598  34BC               	retlw	188
   989  0599  3407               	retlw	7
   990                           
   991                           ;initializer for setPacketFormat@F9415
   992  059A  34B7               	retlw	183
   993  059B  3410               	retlw	16
   994                           
   995                           ;initializer for _recommended_params
   996  059C  3498               	retlw	152
   997  059D  3408               	retlw	8
   998  059E  3499               	retlw	153
   999  059F  3455               	retlw	85
  1000  05A0  349A               	retlw	154
  1001  05A1  348B               	retlw	139
  1002  05A2  34EF               	retlw	239
  1003  05A3  3400               	retlw	0
  1004  05A4  3400               	retlw	0
  1005  05A5  3400               	retlw	0
  1006                           
  1007                           	psect	idataBANK2
  1008  066A                     __pidataBANK2:	
  1009                           
  1010                           ;initializer for main@F9389
  1011  066A  3400               	retlw	0
  1012  066B  3400               	retlw	0
  1013  066C  3400               	retlw	0
  1014  066D  3400               	retlw	0
  1015  066E  3400               	retlw	0
  1016  066F  3400               	retlw	0
  1017  0670  3400               	retlw	0
  1018  0671  3400               	retlw	0
  1019  0672  3400               	retlw	0
  1020  0673  3400               	retlw	0
  1021  0674  3400               	retlw	0
  1022  0675  3400               	retlw	0
  1023  0676  3400               	retlw	0
  1024  0677  3400               	retlw	0
  1025  0678  3400               	retlw	0
  1026  0679  3400               	retlw	0
  1027  067A  3400               	retlw	0
  1028  067B  3400               	retlw	0
  1029  067C  3400               	retlw	0
  1030  067D  3400               	retlw	0
  1031  067E  3400               	retlw	0
  1032  067F  3400               	retlw	0
  1033  0680  3400               	retlw	0
  1034  0681  3400               	retlw	0
  1035  0682  3400               	retlw	0
  1036  0683  3400               	retlw	0
  1037  0684  3400               	retlw	0
  1038  0685  3400               	retlw	0
  1039  0686  3400               	retlw	0
  1040  0687  3400               	retlw	0
  1041  0688  3400               	retlw	0
  1042  0689  3400               	retlw	0
  1043  068A  3400               	retlw	0
  1044  068B  3400               	retlw	0
  1045  068C  3400               	retlw	0
  1046  068D  3400               	retlw	0
  1047  068E  3400               	retlw	0
  1048  068F  3400               	retlw	0
  1049  0690  3400               	retlw	0
  1050  0691  3400               	retlw	0
  1051  0692  340C               	retlw	12
  1052  0693  3400               	retlw	0
  1053  0694  3402               	retlw	2
  1054  0695  3408               	retlw	8
  1055  0696  3400               	retlw	0
  1056  0697  3400               	retlw	0
  1057  0698  3400               	retlw	0
  1058  0699  3400               	retlw	0
  1059  069A  3400               	retlw	0
  1060  069B  3400               	retlw	0
  1061  069C  3400               	retlw	0
  1062  069D  3400               	retlw	0
  1063  069E  3400               	retlw	0
  1064  069F  3400               	retlw	0
  1065  06A0  3400               	retlw	0
  1066  06A1  3400               	retlw	0
  1067  06A2  3400               	retlw	0
  1068  06A3  3400               	retlw	0
  1069  06A4  3400               	retlw	0
  1070  06A5  3400               	retlw	0
  1071  06A6  3400               	retlw	0
  1072  06A7  3400               	retlw	0
  1073  06A8  3400               	retlw	0
  1074  06A9  3400               	retlw	0
  1075  06AA  3420               	retlw	32
  1076  06AB  34E4               	retlw	228
  1077  06AC  3467               	retlw	103
  1078  06AD  3467               	retlw	103
  1079  06AE  3467               	retlw	103
  1080  06AF  3467               	retlw	103
  1081  06B0  3467               	retlw	103
  1082  06B1  3467               	retlw	103
  1083  06B2  3467               	retlw	103
  1084  06B3  3467               	retlw	103
  1085  06B4  3400               	retlw	0
  1086  000E                     _PORTCbits	set	14
  1087  000C                     _PORTA	set	12
  1088  008C                     _TRISAbits	set	140
  1089  0099                     _OSCCONbits	set	153
  1090  008E                     _TRISCbits	set	142
  1091  018E                     _ANSELC	set	398
  1092  018C                     _ANSELA	set	396
  1093  0215                     _SSP1CONbits	set	533
  1094  0215                     _SSP1CON1bits	set	533
  1095  0214                     _SSP1STATbits	set	532
  1096  0211                     _SSP1BUF	set	529
  1097  0E21                     _SSPDATPPS	set	3617
  1098  0EA3                     _RC3PPS	set	3747
  1099  0EA0                     _RC0PPS	set	3744
  1100                           
  1101                           ; #config settings
  1102  0000                     
  1103                           	psect	cinit
  1104  07D9                     start_initialization:	
  1105  07D9                     __initialization:	
  1106                           
  1107                           ; Initialize objects allocated to BANK0
  1108  07D9  307A               	movlw	low __pidataBANK0
  1109  07DA  0084               	movwf	4
  1110  07DB  3085               	movlw	(high __pidataBANK0)| (0+128)
  1111  07DC  0085               	movwf	5
  1112  07DD  3020               	movlw	low __pdataBANK0
  1113  07DE  0086               	movwf	6
  1114  07DF  3000               	movlw	high __pdataBANK0
  1115  07E0  0087               	movwf	7
  1116  07E1  302C               	movlw	44
  1117  07E2  3183  2391  3187   	fcall	init_ram
  1118                           
  1119                           ; Initialize objects allocated to BANK2
  1120  07E5  306A               	movlw	low __pidataBANK2
  1121  07E6  0084               	movwf	4
  1122  07E7  3086               	movlw	(high __pidataBANK2)| (0+128)
  1123  07E8  0085               	movwf	5
  1124  07E9  3020               	movlw	low __pdataBANK2
  1125  07EA  0086               	movwf	6
  1126  07EB  3001               	movlw	high __pdataBANK2
  1127  07EC  0087               	movwf	7
  1128  07ED  304B               	movlw	75
  1129  07EE  3183  2391  3187   	fcall	init_ram
  1130                           
  1131                           ; Clear objects allocated to BANK0
  1132  07F1  305F               	movlw	low __pbssBANK0
  1133  07F2  0084               	movwf	4
  1134  07F3  3000               	movlw	high __pbssBANK0
  1135  07F4  0085               	movwf	5
  1136  07F5  3011               	movlw	17
  1137  07F6  3183  238B         	fcall	clear_ram0
  1138                           
  1139                           ; Clear objects allocated to BANK1
  1140  07F8  0021               	movlb	1	; select bank1
  1141  07F9  01EB               	clrf	__pbssBANK1& (0+127)
  1142  07FA  01EC               	clrf	(__pbssBANK1+1)& (0+127)
  1143  07FB  01ED               	clrf	(__pbssBANK1+2)& (0+127)
  1144  07FC  01EE               	clrf	(__pbssBANK1+3)& (0+127)
  1145  07FD                     end_of_initialization:	
  1146                           ;End of C runtime variable initialization code
  1147                           
  1148  07FD                     __end_of__initialization:	
  1149  07FD  0020               	movlb	0
  1150  07FE  3187  2F63         	ljmp	_main	;jump to C main() function
  1151                           
  1152                           	psect	bssBANK0
  1153  005F                     __pbssBANK0:	
  1154  005F                     setAutoMode@F9494:	
  1155  005F                     	ds	2
  1156  0061                     setDiodeMapping@F9469:	
  1157  0061                     	ds	2
  1158  0063                     setPowerOutput@F9444:	
  1159  0063                     	ds	2
  1160  0065                     setOperatingMode@F9420:	
  1161  0065                     	ds	2
  1162  0067                     setRSSIThreshold@F9411:	
  1163  0067                     	ds	2
  1164  0069                     setNodeAddress@F9407:	
  1165  0069                     	ds	2
  1166  006B                     setPacketLength@F9403:	
  1167  006B                     	ds	2
  1168  006D                     sendPairs@F9382:	
  1169  006D                     	ds	2
  1170  006F                     _RSSISampling:	
  1171  006F                     	ds	1
  1172                           
  1173                           	psect	dataBANK0
  1174  0020                     __pdataBANK0:	
  1175  0020                     _SYNC_WORDS:	
  1176  0020                     	ds	8
  1177  0028                     getPowerSettings@F9489:	
  1178  0028                     	ds	2
  1179  002A                     restartRx@F9485:	
  1180  002A                     	ds	2
  1181  002C                     startRSSISampling@F9481:	
  1182  002C                     	ds	2
  1183  002E                     checkRSSISampling@F9477:	
  1184  002E                     	ds	2
  1185  0030                     getModeFlags@F9473:	
  1186  0030                     	ds	2
  1187  0032                     getOperatingMode@F9464:	
  1188  0032                     	ds	2
  1189  0034                     getRSSIThreshold@F9460:	
  1190  0034                     	ds	2
  1191  0036                     getFifoFlags@F9456:	
  1192  0036                     	ds	2
  1193  0038                     getRSSI@F9452:	
  1194  0038                     	ds	2
  1195  003A                     setPreambleLength@F9437:	
  1196  003A                     	ds	2
  1197  003C                     checkForPayload@F9430:	
  1198  003C                     	ds	2
  1199  003E                     setModulationThreshold@F9426:	
  1200  003E                     	ds	2
  1201  0040                     setPacketFormat@F9415:	
  1202  0040                     	ds	2
  1203  0042                     _recommended_params:	
  1204  0042                     	ds	10
  1205                           
  1206                           	psect	bssBANK1
  1207  00EB                     __pbssBANK1:	
  1208  00EB                     _modeFlags:	
  1209  00EB                     	ds	1
  1210  00EC                     _fifoFlags:	
  1211  00EC                     	ds	1
  1212  00ED                     _RSSI:	
  1213  00ED                     	ds	1
  1214  00EE                     _operatingMode:	
  1215  00EE                     	ds	1
  1216                           
  1217                           	psect	dataBANK2
  1218  0120                     __pdataBANK2:	
  1219  0120                     main@F9389:	
  1220  0120                     	ds	75
  1221                           
  1222                           	psect	inittext
  1223  0391                     init_ram:	
  1224  0391  00FE               	movwf	126
  1225  0392                     initloop:	
  1226  0392  0012               	moviw fsr0++
  1227  0393  001E               	movwi fsr1++
  1228  0394  0BFE               	decfsz	126,f
  1229  0395  2B92               	goto	initloop
  1230  0396  3400               	retlw	0
  1231                           
  1232                           	psect	clrtext
  1233  038B                     clear_ram0:	
  1234                           ;	Called with FSR0 containing the base address, and
  1235                           ;	WREG with the size to clear
  1236                           
  1237  038B  0064               	clrwdt	;clear the watchdog before getting into this loop
  1238  038C                     clrloop0:	
  1239  038C  0180               	clrf	0	;clear RAM location pointed to by FSR
  1240  038D  3101               	addfsr 0,1
  1241  038E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1242  038F  2B8C               	goto	clrloop0	;have we reached the end yet?
  1243  0390  3400               	retlw	0	;all done for this memory range, return
  1244                           
  1245                           	psect	cstackBANK1
  1246  00A0                     __pcstackBANK1:	
  1247  00A0                     main@radio:	
  1248                           
  1249                           ; 75 bytes @ 0x0
  1250  00A0                     	ds	75
  1251                           
  1252                           	psect	cstackCOMMON
  1253  0070                     __pcstackCOMMON:	
  1254  0070                     ?_rfmSetup:	
  1255  0070                     ?_spi_init_master:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258  0070                     ??_spi_init_master:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261  0070                     ?_initRadio:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264  0070                     ?_getRSSI:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267  0070                     ?_getFifoFlags:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270  0070                     ?_getModeFlags:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273  0070                     ?_getOperatingMode:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276  0070                     ?_receivePayload:	
  1277                           ; 1 bytes @ 0x0
  1278                           
  1279  0070                     ?_setPinWithMask:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282  0070                     ?_send:	
  1283                           ; 1 bytes @ 0x0
  1284                           
  1285  0070                     ?_resetRadio:	
  1286                           ; 1 bytes @ 0x0
  1287                           
  1288  0070                     ??_resetRadio:	
  1289                           ; 1 bytes @ 0x0
  1290                           
  1291  0070                     ?_setSyncWords:	
  1292                           ; 1 bytes @ 0x0
  1293                           
  1294  0070                     ?_setPacketLength:	
  1295                           ; 1 bytes @ 0x0
  1296                           
  1297  0070                     ?_setNodeAddress:	
  1298                           ; 1 bytes @ 0x0
  1299                           
  1300  0070                     ?_setRSSIThreshold:	
  1301                           ; 1 bytes @ 0x0
  1302                           
  1303  0070                     ?_setPacketFormat:	
  1304                           ; 1 bytes @ 0x0
  1305                           
  1306  0070                     ?_setRecommendedParams:	
  1307                           ; 1 bytes @ 0x0
  1308                           
  1309  0070                     ?_setModulationThreshold:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312  0070                     ?_setPreambleLength:	
  1313                           ; 1 bytes @ 0x0
  1314                           
  1315  0070                     ?_init:	
  1316                           ; 1 bytes @ 0x0
  1317                           
  1318  0070                     ?_main:	
  1319                           ; 2 bytes @ 0x0
  1320                           
  1321  0070                     send@msg:	
  1322                           ; 2 bytes @ 0x0
  1323                           
  1324  0070                     setPinWithMask@pPort:	
  1325                           ; 1 bytes @ 0x0
  1326                           
  1327                           
  1328                           ; 2 bytes @ 0x0
  1329  0070                     	ds	1
  1330  0071                     ??_rfmSetup:	
  1331  0071                     ??_send:	
  1332                           ; 1 bytes @ 0x1
  1333                           
  1334                           
  1335                           ; 1 bytes @ 0x1
  1336  0071                     	ds	1
  1337  0072                     ??_init:	
  1338  0072                     setPinWithMask@iPin:	
  1339                           ; 1 bytes @ 0x2
  1340                           
  1341                           
  1342                           ; 1 bytes @ 0x2
  1343  0072                     	ds	1
  1344  0073                     send@radio:	
  1345  0073                     setPinWithMask@value:	
  1346                           ; 1 bytes @ 0x3
  1347                           
  1348                           
  1349                           ; 1 bytes @ 0x3
  1350  0073                     	ds	1
  1351  0074                     ??_setPinWithMask:	
  1352                           
  1353                           ; 1 bytes @ 0x4
  1354  0074                     	ds	2
  1355  0076                     ??_receivePayload:	
  1356  0076                     ?_sendBulk:	
  1357                           ; 1 bytes @ 0x6
  1358                           
  1359  0076                     sendBulk@msgs:	
  1360                           ; 1 bytes @ 0x6
  1361                           
  1362                           
  1363                           ; 1 bytes @ 0x6
  1364  0076                     	ds	1
  1365  0077                     sendBulk@len:	
  1366                           
  1367                           ; 1 bytes @ 0x7
  1368  0077                     	ds	1
  1369  0078                     ??_sendBulk:	
  1370  0078                     receivePayload@i:	
  1371                           ; 1 bytes @ 0x8
  1372                           
  1373                           
  1374                           ; 2 bytes @ 0x8
  1375  0078                     	ds	2
  1376  007A                     receivePayload@radio:	
  1377                           
  1378                           ; 1 bytes @ 0xA
  1379  007A                     	ds	2
  1380  007C                     ?_setPowerOutput:	
  1381  007C                     ?_setDiodeMapping:	
  1382                           ; 1 bytes @ 0xC
  1383                           
  1384  007C                     ?_setAutoMode:	
  1385                           ; 1 bytes @ 0xC
  1386                           
  1387  007C                     ?_setOperatingMode:	
  1388                           ; 1 bytes @ 0xC
  1389                           
  1390  007C                     ??_getRSSI:	
  1391                           ; 1 bytes @ 0xC
  1392                           
  1393  007C                     ??_getFifoFlags:	
  1394                           ; 1 bytes @ 0xC
  1395                           
  1396  007C                     ??_getModeFlags:	
  1397                           ; 1 bytes @ 0xC
  1398                           
  1399  007C                     ??_getOperatingMode:	
  1400                           ; 1 bytes @ 0xC
  1401                           
  1402  007C                     ??_sendPairs:	
  1403                           ; 1 bytes @ 0xC
  1404                           
  1405  007C                     ??_setSyncWords:	
  1406                           ; 1 bytes @ 0xC
  1407                           
  1408  007C                     ??_setPacketLength:	
  1409                           ; 1 bytes @ 0xC
  1410                           
  1411  007C                     ??_setNodeAddress:	
  1412                           ; 1 bytes @ 0xC
  1413                           
  1414  007C                     ??_setRSSIThreshold:	
  1415                           ; 1 bytes @ 0xC
  1416                           
  1417  007C                     ??_setPacketFormat:	
  1418                           ; 1 bytes @ 0xC
  1419                           
  1420  007C                     ??_setModulationThreshold:	
  1421                           ; 1 bytes @ 0xC
  1422                           
  1423  007C                     ??_setPreambleLength:	
  1424                           ; 1 bytes @ 0xC
  1425                           
  1426  007C                     setOperatingMode@operatingMode:	
  1427                           ; 1 bytes @ 0xC
  1428                           
  1429  007C                     setPowerOutput@powerSettings:	
  1430                           ; 1 bytes @ 0xC
  1431                           
  1432  007C                     setDiodeMapping@mapping:	
  1433                           ; 1 bytes @ 0xC
  1434                           
  1435  007C                     setAutoMode@autoModes:	
  1436                           ; 1 bytes @ 0xC
  1437                           
  1438                           
  1439                           ; 1 bytes @ 0xC
  1440  007C                     	ds	2
  1441  007E                     ??_initRadio:	
  1442                           
  1443                           	psect	cstackBANK0
  1444  004C                     __pcstackBANK0:	
  1445                           ; 1 bytes @ 0xE
  1446                           
  1447  004C                     sendBulk@i:	
  1448                           
  1449                           ; 2 bytes @ 0x0
  1450  004C                     	ds	2
  1451  004E                     sendBulk@radio:	
  1452                           
  1453                           ; 1 bytes @ 0x2
  1454  004E                     	ds	1
  1455  004F                     ??_setPowerOutput:	
  1456  004F                     ??_setDiodeMapping:	
  1457                           ; 1 bytes @ 0x3
  1458                           
  1459  004F                     ??_setAutoMode:	
  1460                           ; 1 bytes @ 0x3
  1461                           
  1462  004F                     ??_setOperatingMode:	
  1463                           ; 1 bytes @ 0x3
  1464                           
  1465  004F                     ?_sendPairs:	
  1466                           ; 1 bytes @ 0x3
  1467                           
  1468  004F                     sendPairs@msgs:	
  1469                           ; 1 bytes @ 0x3
  1470                           
  1471  004F                     getRSSI@radio:	
  1472                           ; 1 bytes @ 0x3
  1473                           
  1474  004F                     getFifoFlags@radio:	
  1475                           ; 1 bytes @ 0x3
  1476                           
  1477  004F                     getOperatingMode@radio:	
  1478                           ; 1 bytes @ 0x3
  1479                           
  1480  004F                     getModeFlags@radio:	
  1481                           ; 1 bytes @ 0x3
  1482                           
  1483  004F                     setPacketLength@msg:	
  1484                           ; 1 bytes @ 0x3
  1485                           
  1486  004F                     setNodeAddress@msg:	
  1487                           ; 2 bytes @ 0x3
  1488                           
  1489  004F                     setRSSIThreshold@msg:	
  1490                           ; 2 bytes @ 0x3
  1491                           
  1492  004F                     setPacketFormat@msg:	
  1493                           ; 2 bytes @ 0x3
  1494                           
  1495  004F                     setModulationThreshold@msg:	
  1496                           ; 2 bytes @ 0x3
  1497                           
  1498  004F                     setPreambleLength@msg:	
  1499                           ; 2 bytes @ 0x3
  1500                           
  1501  004F                     setSyncWords@msg:	
  1502                           ; 2 bytes @ 0x3
  1503                           
  1504                           
  1505                           ; 10 bytes @ 0x3
  1506  004F                     	ds	1
  1507  0050                     sendPairs@len:	
  1508  0050                     getRSSI@msg:	
  1509                           ; 2 bytes @ 0x4
  1510                           
  1511  0050                     getFifoFlags@msg:	
  1512                           ; 2 bytes @ 0x4
  1513                           
  1514  0050                     getOperatingMode@msg:	
  1515                           ; 2 bytes @ 0x4
  1516                           
  1517  0050                     getModeFlags@msg:	
  1518                           ; 2 bytes @ 0x4
  1519                           
  1520                           
  1521                           ; 2 bytes @ 0x4
  1522  0050                     	ds	1
  1523  0051                     setPacketLength@radio:	
  1524  0051                     setNodeAddress@radio:	
  1525                           ; 1 bytes @ 0x5
  1526                           
  1527  0051                     setRSSIThreshold@radio:	
  1528                           ; 1 bytes @ 0x5
  1529                           
  1530  0051                     setPacketFormat@radio:	
  1531                           ; 1 bytes @ 0x5
  1532                           
  1533  0051                     setOperatingMode@radio:	
  1534                           ; 1 bytes @ 0x5
  1535                           
  1536  0051                     setModulationThreshold@radio:	
  1537                           ; 1 bytes @ 0x5
  1538                           
  1539  0051                     setPreambleLength@radio:	
  1540                           ; 1 bytes @ 0x5
  1541                           
  1542  0051                     setPowerOutput@radio:	
  1543                           ; 1 bytes @ 0x5
  1544                           
  1545  0051                     setDiodeMapping@radio:	
  1546                           ; 1 bytes @ 0x5
  1547                           
  1548  0051                     setAutoMode@radio:	
  1549                           ; 1 bytes @ 0x5
  1550                           
  1551                           
  1552                           ; 1 bytes @ 0x5
  1553  0051                     	ds	1
  1554  0052                     sendPairs@radio:	
  1555  0052                     setOperatingMode@msg:	
  1556                           ; 1 bytes @ 0x6
  1557                           
  1558  0052                     setPowerOutput@msg:	
  1559                           ; 2 bytes @ 0x6
  1560                           
  1561  0052                     setDiodeMapping@msg:	
  1562                           ; 2 bytes @ 0x6
  1563                           
  1564  0052                     setAutoMode@msg:	
  1565                           ; 2 bytes @ 0x6
  1566                           
  1567                           
  1568                           ; 2 bytes @ 0x6
  1569  0052                     	ds	1
  1570  0053                     sendPairs@msg:	
  1571                           
  1572                           ; 2 bytes @ 0x7
  1573  0053                     	ds	2
  1574  0055                     sendPairs@i:	
  1575                           
  1576                           ; 2 bytes @ 0x9
  1577  0055                     	ds	2
  1578  0057                     ??_setRecommendedParams:	
  1579                           
  1580                           ; 1 bytes @ 0xB
  1581  0057                     	ds	1
  1582  0058                     setRecommendedParams@radio:	
  1583                           
  1584                           ; 1 bytes @ 0xC
  1585  0058                     	ds	1
  1586  0059                     setSyncWords@radio:	
  1587                           
  1588                           ; 1 bytes @ 0xD
  1589  0059                     	ds	1
  1590  005A                     setSyncWords@i:	
  1591                           
  1592                           ; 2 bytes @ 0xE
  1593  005A                     	ds	2
  1594  005C                     initRadio@radio:	
  1595                           
  1596                           ; 1 bytes @ 0x10
  1597  005C                     	ds	1
  1598  005D                     ??_main:	
  1599                           
  1600                           ; 1 bytes @ 0x11
  1601  005D                     	ds	2
  1602                           
  1603                           	psect	maintext
  1604  0763                     __pmaintext:	
  1605 ;;
  1606 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1607 ;;
  1608 ;; *************** function _main *****************
  1609 ;; Defined at:
  1610 ;;		line 82 in file "receiver.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  radio          75    0[BANK1 ] struct RFM69HCW
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  2   79[None  ] int 
  1617 ;; Registers used:
  1618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : B1F/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1625 ;;      Locals:         0       0      75       0       0       0       0       0       0       0       0       0       
      +0       0
  1626 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1627 ;;      Totals:         0       2      75       0       0       0       0       0       0       0       0       0       
      +0       0
  1628 ;;Total ram usage:       77 bytes
  1629 ;; Hardware stack levels required when called:    5
  1630 ;; This function calls:
  1631 ;;		_getFifoFlags
  1632 ;;		_getModeFlags
  1633 ;;		_getOperatingMode
  1634 ;;		_getRSSI
  1635 ;;		_init
  1636 ;;		_initRadio
  1637 ;;		_receivePayload
  1638 ;;		_setAutoMode
  1639 ;;		_setDiodeMapping
  1640 ;;		_setOperatingMode
  1641 ;;		_setPowerOutput
  1642 ;; This function is called by:
  1643 ;;		Startup code after reset
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           
  1648                           ;psect for function _main
  1649  0763                     _main:	
  1650                           
  1651                           ;receiver.c: 83:     TRISAbits.TRISA4=1;
  1652                           
  1653                           ;incstack = 0
  1654                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1655  0763  0021               	movlb	1	; select bank1
  1656  0764  160C               	bsf	12,4	;volatile
  1657                           
  1658                           ;receiver.c: 84:     TRISAbits.TRISA5=1;
  1659  0765  168C               	bsf	12,5	;volatile
  1660                           
  1661                           ;receiver.c: 85:     init();
  1662  0766  3183  2388  3187   	fcall	_init
  1663                           
  1664                           ;receiver.c: 86:     RFM69 radio = {.SSport=&PORTA, .SSbit=2, .node_address=0x20,.packet
      +                          _length=0x08,
  1665  0769  3020               	movlw	low main@F9389
  1666  076A  0086               	movwf	6
  1667  076B  3001               	movlw	high main@F9389
  1668  076C  0087               	movwf	7
  1669  076D  30A0               	movlw	low main@radio
  1670  076E  0084               	movwf	4
  1671  076F  3000               	movlw	high main@radio
  1672  0770  0085               	movwf	5
  1673  0771  304B               	movlw	75
  1674  0772  0020               	movlb	0	; select bank0
  1675  0773  00DD               	movwf	??_main
  1676  0774                     u280:	
  1677  0774  0016               	moviw fsr1++
  1678  0775  001A               	movwi fsr0++
  1679  0776  0BDD               	decfsz	??_main,f
  1680  0777  2F74               	goto	u280
  1681                           
  1682                           ;receiver.c: 88:     initRadio(&radio);
  1683  0778  30A0               	movlw	(low (main@radio| 0))& (0+255)
  1684  0779  3185  2551  3187   	fcall	_initRadio
  1685                           
  1686                           ;receiver.c: 89:     setPowerOutput(&radio, 0x5F);
  1687  077C  305F               	movlw	95
  1688  077D  0020               	movlb	0	; select bank0
  1689  077E  00DD               	movwf	??_main
  1690  077F  085D               	movf	??_main,w
  1691  0780  00FC               	movwf	setPowerOutput@powerSettings
  1692  0781  30A0               	movlw	(low (main@radio| 0))& (0+255)
  1693  0782  3184  2488  3187   	fcall	_setPowerOutput
  1694                           
  1695                           ;receiver.c: 90:     setDiodeMapping(&radio, 0x40);
  1696  0785  3040               	movlw	64
  1697  0786  0020               	movlb	0	; select bank0
  1698  0787  00DD               	movwf	??_main
  1699  0788  085D               	movf	??_main,w
  1700  0789  00FC               	movwf	setDiodeMapping@mapping
  1701  078A  30A0               	movlw	(low (main@radio| 0))& (0+255)
  1702  078B  3184  2458  3187   	fcall	_setDiodeMapping
  1703                           
  1704                           ;receiver.c: 92:     setAutoMode(&radio, 0b01100100);
  1705  078E  3064               	movlw	100
  1706  078F  0020               	movlb	0	; select bank0
  1707  0790  00DD               	movwf	??_main
  1708  0791  085D               	movf	??_main,w
  1709  0792  00FC               	movwf	setAutoMode@autoModes
  1710  0793  30A0               	movlw	(low (main@radio| 0))& (0+255)
  1711  0794  3184  2440  3187   	fcall	_setAutoMode
  1712                           
  1713                           ;receiver.c: 93:     setOperatingMode(&radio, 0xB0);
  1714  0797  30B0               	movlw	176
  1715  0798  0020               	movlb	0	; select bank0
  1716  0799  00DD               	movwf	??_main
  1717  079A  085D               	movf	??_main,w
  1718  079B  00FC               	movwf	setOperatingMode@operatingMode
  1719  079C  30A0               	movlw	(low (main@radio| 0))& (0+255)
  1720  079D  3184  2470  3187   	fcall	_setOperatingMode
  1721  07A0                     l1339:	
  1722                           
  1723                           ;receiver.c: 95:         RSSI = getRSSI(&radio);
  1724  07A0  30A0               	movlw	(low (main@radio| 0))& (0+255)
  1725  07A1  3184  2417  3187   	fcall	_getRSSI
  1726  07A4  0020               	movlb	0	; select bank0
  1727  07A5  00DD               	movwf	??_main
  1728  07A6  085D               	movf	??_main,w
  1729  07A7  0021               	movlb	1	; select bank1
  1730  07A8  00ED               	movwf	_RSSI^(0+128)
  1731                           
  1732                           ;receiver.c: 96:         fifoFlags = getFifoFlags(&radio);
  1733  07A9  30A0               	movlw	(low (main@radio| 0))& (0+255)
  1734  07AA  3183  23DB  3187   	fcall	_getFifoFlags
  1735  07AD  0020               	movlb	0	; select bank0
  1736  07AE  00DD               	movwf	??_main
  1737  07AF  085D               	movf	??_main,w
  1738  07B0  0021               	movlb	1	; select bank1
  1739  07B1  00EC               	movwf	_fifoFlags^(0+128)
  1740                           
  1741                           ;receiver.c: 97:         modeFlags = getModeFlags(&radio);
  1742  07B2  30A0               	movlw	(low (main@radio| 0))& (0+255)
  1743  07B3  3183  23EF  3187   	fcall	_getModeFlags
  1744  07B6  0020               	movlb	0	; select bank0
  1745  07B7  00DD               	movwf	??_main
  1746  07B8  085D               	movf	??_main,w
  1747  07B9  0021               	movlb	1	; select bank1
  1748  07BA  00EB               	movwf	_modeFlags^(0+128)
  1749                           
  1750                           ;receiver.c: 98:         operatingMode = getOperatingMode(&radio);
  1751  07BB  30A0               	movlw	(low (main@radio| 0))& (0+255)
  1752  07BC  3184  2403  3187   	fcall	_getOperatingMode
  1753  07BF  0020               	movlb	0	; select bank0
  1754  07C0  00DD               	movwf	??_main
  1755  07C1  085D               	movf	??_main,w
  1756  07C2  0021               	movlb	1	; select bank1
  1757  07C3  00EE               	movwf	_operatingMode^(0+128)
  1758                           
  1759                           ;receiver.c: 99:         if((((operatingMode & 0x7F) == 0))){
  1760  07C4  086E               	movf	_operatingMode^(0+128),w
  1761  07C5  397F               	andlw	127
  1762  07C6  1D03               	btfss	3,2
  1763  07C7  2FA0               	goto	l1339
  1764                           
  1765                           ;receiver.c: 100:             _delay((unsigned long)((100)*(16000000/4000.0)));
  1766  07C8  3003               	movlw	3
  1767  07C9  0020               	movlb	0	; select bank0
  1768  07CA  00DE               	movwf	??_main+1
  1769  07CB  3008               	movlw	8
  1770  07CC  00DD               	movwf	??_main
  1771  07CD  3077               	movlw	119
  1772  07CE                     u317:	
  1773  07CE  0B89               	decfsz	9,f
  1774  07CF  2FCE               	goto	u317
  1775  07D0  0BDD               	decfsz	??_main,f
  1776  07D1  2FCE               	goto	u317
  1777  07D2  0BDE               	decfsz	??_main+1,f
  1778  07D3  2FCE               	goto	u317
  1779                           
  1780                           ;receiver.c: 101:             receivePayload(&radio);
  1781  07D4  30A0               	movlw	(low (main@radio| 0))& (0+255)
  1782  07D5  3186  26B5  3187   	fcall	_receivePayload
  1783  07D8  2FA0               	goto	l1339
  1784  07D9                     __end_of_main:	
  1785                           
  1786                           	psect	text1
  1787  0488                     __ptext1:	
  1788 ;; *************** function _setPowerOutput *****************
  1789 ;; Defined at:
  1790 ;;		line 122 in file "RFM69HCW.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  radio           1    wreg     PTR struct RFM69HCW
  1793 ;;		 -> main@radio(75), 
  1794 ;;  powerSetting    1   12[COMMON] unsigned char 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;  radio           1    5[BANK0 ] PTR struct RFM69HCW
  1797 ;;		 -> main@radio(75), 
  1798 ;;  msg             2    6[BANK0 ] unsigned char [2]
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1808 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1809 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1810 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1811 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1812 ;;Total ram usage:        6 bytes
  1813 ;; Hardware stack levels used:    1
  1814 ;; Hardware stack levels required when called:    2
  1815 ;; This function calls:
  1816 ;;		_sendBulk
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           
  1823                           ;psect for function _setPowerOutput
  1824  0488                     _setPowerOutput:	
  1825                           
  1826                           ;incstack = 0
  1827                           ; Regs used in _setPowerOutput: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1828                           ;setPowerOutput@radio stored from wreg
  1829  0488  0020               	movlb	0	; select bank0
  1830  0489  00D1               	movwf	setPowerOutput@radio
  1831                           
  1832                           ;RFM69HCW.c: 123:     byte msg[] = {0x11|0x80, powerSettings};
  1833  048A  01D2               	clrf	setPowerOutput@msg
  1834  048B  01D3               	clrf	setPowerOutput@msg+1
  1835  048C  3091               	movlw	145
  1836  048D  00CF               	movwf	??_setPowerOutput
  1837  048E  084F               	movf	??_setPowerOutput,w
  1838  048F  00D2               	movwf	setPowerOutput@msg
  1839  0490  087C               	movf	setPowerOutput@powerSettings,w
  1840  0491  00CF               	movwf	??_setPowerOutput
  1841  0492  084F               	movf	??_setPowerOutput,w
  1842  0493  00D3               	movwf	setPowerOutput@msg+1
  1843                           
  1844                           ;RFM69HCW.c: 124:     sendBulk(radio,msg,2);
  1845  0494  3052               	movlw	(low (setPowerOutput@msg| 0))& (0+255)
  1846  0495  00CF               	movwf	??_setPowerOutput
  1847  0496  084F               	movf	??_setPowerOutput,w
  1848  0497  00F6               	movwf	sendBulk@msgs
  1849  0498  3002               	movlw	2
  1850  0499  00D0               	movwf	??_setPowerOutput+1
  1851  049A  0850               	movf	??_setPowerOutput+1,w
  1852  049B  00F7               	movwf	sendBulk@len
  1853  049C  0851               	movf	setPowerOutput@radio,w
  1854  049D  3187  2709         	fcall	_sendBulk
  1855  049F  0008               	return
  1856  04A0                     __end_of_setPowerOutput:	
  1857                           
  1858                           	psect	text2
  1859  0470                     __ptext2:	
  1860 ;; *************** function _setOperatingMode *****************
  1861 ;; Defined at:
  1862 ;;		line 77 in file "RFM69HCW.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  radio           1    wreg     PTR struct RFM69HCW
  1865 ;;		 -> main@radio(75), 
  1866 ;;  operatingMod    1   12[COMMON] unsigned char 
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;  radio           1    5[BANK0 ] PTR struct RFM69HCW
  1869 ;;		 -> main@radio(75), 
  1870 ;;  msg             2    6[BANK0 ] unsigned char [2]
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  1    wreg      void 
  1873 ;; Registers used:
  1874 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1880 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1881 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1882 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1883 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1884 ;;Total ram usage:        6 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:    2
  1887 ;; This function calls:
  1888 ;;		_sendBulk
  1889 ;; This function is called by:
  1890 ;;		_main
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           
  1895                           ;psect for function _setOperatingMode
  1896  0470                     _setOperatingMode:	
  1897                           
  1898                           ;incstack = 0
  1899                           ; Regs used in _setOperatingMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1900                           ;setOperatingMode@radio stored from wreg
  1901  0470  0020               	movlb	0	; select bank0
  1902  0471  00D1               	movwf	setOperatingMode@radio
  1903                           
  1904                           ;RFM69HCW.c: 78:     byte msg[] = {0x01|0x80, operatingMode};
  1905  0472  01D2               	clrf	setOperatingMode@msg
  1906  0473  01D3               	clrf	setOperatingMode@msg+1
  1907  0474  3081               	movlw	129
  1908  0475  00CF               	movwf	??_setOperatingMode
  1909  0476  084F               	movf	??_setOperatingMode,w
  1910  0477  00D2               	movwf	setOperatingMode@msg
  1911  0478  087C               	movf	setOperatingMode@operatingMode,w
  1912  0479  00CF               	movwf	??_setOperatingMode
  1913  047A  084F               	movf	??_setOperatingMode,w
  1914  047B  00D3               	movwf	setOperatingMode@msg+1
  1915                           
  1916                           ;RFM69HCW.c: 79:     sendBulk(radio, msg, 2);
  1917  047C  3052               	movlw	(low (setOperatingMode@msg| 0))& (0+255)
  1918  047D  00CF               	movwf	??_setOperatingMode
  1919  047E  084F               	movf	??_setOperatingMode,w
  1920  047F  00F6               	movwf	sendBulk@msgs
  1921  0480  3002               	movlw	2
  1922  0481  00D0               	movwf	??_setOperatingMode+1
  1923  0482  0850               	movf	??_setOperatingMode+1,w
  1924  0483  00F7               	movwf	sendBulk@len
  1925  0484  0851               	movf	setOperatingMode@radio,w
  1926  0485  3187  2709         	fcall	_sendBulk
  1927  0487  0008               	return
  1928  0488                     __end_of_setOperatingMode:	
  1929                           
  1930                           	psect	text3
  1931  0458                     __ptext3:	
  1932 ;; *************** function _setDiodeMapping *****************
  1933 ;; Defined at:
  1934 ;;		line 160 in file "RFM69HCW.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  radio           1    wreg     PTR struct RFM69HCW
  1937 ;;		 -> main@radio(75), 
  1938 ;;  mapping         1   12[COMMON] unsigned char 
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;  radio           1    5[BANK0 ] PTR struct RFM69HCW
  1941 ;;		 -> main@radio(75), 
  1942 ;;  msg             2    6[BANK0 ] unsigned char [2]
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1952 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1953 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1954 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1955 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1956 ;;Total ram usage:        6 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; Hardware stack levels required when called:    2
  1959 ;; This function calls:
  1960 ;;		_sendBulk
  1961 ;; This function is called by:
  1962 ;;		_main
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           
  1967                           ;psect for function _setDiodeMapping
  1968  0458                     _setDiodeMapping:	
  1969                           
  1970                           ;incstack = 0
  1971                           ; Regs used in _setDiodeMapping: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1972                           ;setDiodeMapping@radio stored from wreg
  1973  0458  0020               	movlb	0	; select bank0
  1974  0459  00D1               	movwf	setDiodeMapping@radio
  1975                           
  1976                           ;RFM69HCW.c: 161:     byte msg[]={0x25, mapping};
  1977  045A  01D2               	clrf	setDiodeMapping@msg
  1978  045B  01D3               	clrf	setDiodeMapping@msg+1
  1979  045C  3025               	movlw	37
  1980  045D  00CF               	movwf	??_setDiodeMapping
  1981  045E  084F               	movf	??_setDiodeMapping,w
  1982  045F  00D2               	movwf	setDiodeMapping@msg
  1983  0460  087C               	movf	setDiodeMapping@mapping,w
  1984  0461  00CF               	movwf	??_setDiodeMapping
  1985  0462  084F               	movf	??_setDiodeMapping,w
  1986  0463  00D3               	movwf	setDiodeMapping@msg+1
  1987                           
  1988                           ;RFM69HCW.c: 162:     sendBulk(radio, msg, 2);
  1989  0464  3052               	movlw	(low (setDiodeMapping@msg| 0))& (0+255)
  1990  0465  00CF               	movwf	??_setDiodeMapping
  1991  0466  084F               	movf	??_setDiodeMapping,w
  1992  0467  00F6               	movwf	sendBulk@msgs
  1993  0468  3002               	movlw	2
  1994  0469  00D0               	movwf	??_setDiodeMapping+1
  1995  046A  0850               	movf	??_setDiodeMapping+1,w
  1996  046B  00F7               	movwf	sendBulk@len
  1997  046C  0851               	movf	setDiodeMapping@radio,w
  1998  046D  3187  2709         	fcall	_sendBulk
  1999  046F  0008               	return
  2000  0470                     __end_of_setDiodeMapping:	
  2001                           
  2002                           	psect	text4
  2003  0440                     __ptext4:	
  2004 ;; *************** function _setAutoMode *****************
  2005 ;; Defined at:
  2006 ;;		line 196 in file "RFM69HCW.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  radio           1    wreg     PTR struct RFM69HCW
  2009 ;;		 -> main@radio(75), 
  2010 ;;  autoModes       1   12[COMMON] unsigned char 
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;  radio           1    5[BANK0 ] PTR struct RFM69HCW
  2013 ;;		 -> main@radio(75), 
  2014 ;;  msg             2    6[BANK0 ] unsigned char [2]
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2024 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2025 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2026 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2027 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2028 ;;Total ram usage:        6 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; Hardware stack levels required when called:    2
  2031 ;; This function calls:
  2032 ;;		_sendBulk
  2033 ;; This function is called by:
  2034 ;;		_main
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           
  2039                           ;psect for function _setAutoMode
  2040  0440                     _setAutoMode:	
  2041                           
  2042                           ;incstack = 0
  2043                           ; Regs used in _setAutoMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2044                           ;setAutoMode@radio stored from wreg
  2045  0440  0020               	movlb	0	; select bank0
  2046  0441  00D1               	movwf	setAutoMode@radio
  2047                           
  2048                           ;RFM69HCW.c: 197:     byte msg[]={0x3B|0x80, autoModes};
  2049  0442  01D2               	clrf	setAutoMode@msg
  2050  0443  01D3               	clrf	setAutoMode@msg+1
  2051  0444  30BB               	movlw	187
  2052  0445  00CF               	movwf	??_setAutoMode
  2053  0446  084F               	movf	??_setAutoMode,w
  2054  0447  00D2               	movwf	setAutoMode@msg
  2055  0448  087C               	movf	setAutoMode@autoModes,w
  2056  0449  00CF               	movwf	??_setAutoMode
  2057  044A  084F               	movf	??_setAutoMode,w
  2058  044B  00D3               	movwf	setAutoMode@msg+1
  2059                           
  2060                           ;RFM69HCW.c: 198:     sendBulk(radio, msg, 2);
  2061  044C  3052               	movlw	(low (setAutoMode@msg| 0))& (0+255)
  2062  044D  00CF               	movwf	??_setAutoMode
  2063  044E  084F               	movf	??_setAutoMode,w
  2064  044F  00F6               	movwf	sendBulk@msgs
  2065  0450  3002               	movlw	2
  2066  0451  00D0               	movwf	??_setAutoMode+1
  2067  0452  0850               	movf	??_setAutoMode+1,w
  2068  0453  00F7               	movwf	sendBulk@len
  2069  0454  0851               	movf	setAutoMode@radio,w
  2070  0455  3187  2709         	fcall	_sendBulk
  2071  0457  0008               	return
  2072  0458                     __end_of_setAutoMode:	
  2073                           
  2074                           	psect	text5
  2075  06B5                     __ptext5:	
  2076 ;; *************** function _receivePayload *****************
  2077 ;; Defined at:
  2078 ;;		line 97 in file "RFM69HCW.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;  radio           1    wreg     PTR struct RFM69HCW
  2081 ;;		 -> main@radio(75), 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  radio           1   10[COMMON] PTR struct RFM69HCW
  2084 ;;		 -> main@radio(75), 
  2085 ;;  i               2    8[COMMON] int 
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      void 
  2088 ;; Registers used:
  2089 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2096 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2097 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2098 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2099 ;;Total ram usage:        5 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; Hardware stack levels required when called:    1
  2102 ;; This function calls:
  2103 ;;		_send
  2104 ;;		_setPinWithMask
  2105 ;; This function is called by:
  2106 ;;		_main
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           
  2111                           ;psect for function _receivePayload
  2112  06B5                     _receivePayload:	
  2113                           
  2114                           ;incstack = 0
  2115                           ; Regs used in _receivePayload: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2116                           ;receivePayload@radio stored from wreg
  2117  06B5  00FA               	movwf	receivePayload@radio
  2118                           
  2119                           ;RFM69HCW.c: 98:     setPinWithMask(radio->SSport, radio->SSbit,0);
  2120  06B6  087A               	movf	receivePayload@radio,w
  2121  06B7  3E28               	addlw	40
  2122  06B8  0086               	movwf	6
  2123  06B9  0187               	clrf	7
  2124  06BA  3F40               	moviw [0]fsr1
  2125  06BB  00F0               	movwf	setPinWithMask@pPort
  2126  06BC  3F41               	moviw [1]fsr1
  2127  06BD  00F1               	movwf	setPinWithMask@pPort+1
  2128  06BE  087A               	movf	receivePayload@radio,w
  2129  06BF  3E2A               	addlw	42
  2130  06C0  0086               	movwf	6
  2131  06C1  0187               	clrf	7
  2132  06C2  0801               	movf	1,w
  2133  06C3  00F6               	movwf	??_receivePayload
  2134  06C4  0876               	movf	??_receivePayload,w
  2135  06C5  00F2               	movwf	setPinWithMask@iPin
  2136  06C6  01F3               	clrf	setPinWithMask@value
  2137  06C7  3185  252D  3186   	fcall	_setPinWithMask
  2138                           
  2139                           ;RFM69HCW.c: 99:     send(radio, 0x00);
  2140  06CA  01F0               	clrf	send@msg
  2141  06CB  087A               	movf	receivePayload@radio,w
  2142  06CC  3186  2622  3186   	fcall	_send
  2143                           
  2144                           ;RFM69HCW.c: 100:     for(int i=0;i<(*radio).packet_length;i++){
  2145  06CF  01F8               	clrf	receivePayload@i
  2146  06D0  01F9               	clrf	receivePayload@i+1
  2147  06D1                     l1319:	
  2148  06D1  087A               	movf	receivePayload@radio,w
  2149  06D2  3E2B               	addlw	43
  2150  06D3  0086               	movwf	6
  2151  06D4  0187               	clrf	7
  2152  06D5  0879               	movf	receivePayload@i+1,w
  2153  06D6  3A80               	xorlw	128
  2154  06D7  00F6               	movwf	??_receivePayload
  2155  06D8  3080               	movlw	128
  2156  06D9  0276               	subwf	??_receivePayload,w
  2157  06DA  1D03               	skipz
  2158  06DB  2EDE               	goto	u275
  2159  06DC  0801               	movf	1,w
  2160  06DD  0278               	subwf	receivePayload@i,w
  2161  06DE                     u275:	
  2162  06DE  1803               	btfsc	3,0
  2163  06DF  2EF4               	goto	l1321
  2164                           
  2165                           ;RFM69HCW.c: 101:         radio->payload[i]=send(radio,0x00);
  2166  06E0  01F0               	clrf	send@msg
  2167  06E1  087A               	movf	receivePayload@radio,w
  2168  06E2  3186  2622  3186   	fcall	_send
  2169  06E5  00F6               	movwf	??_receivePayload
  2170  06E6  0878               	movf	receivePayload@i,w
  2171  06E7  077A               	addwf	receivePayload@radio,w
  2172  06E8  00F7               	movwf	??_receivePayload+1
  2173  06E9  0877               	movf	??_receivePayload+1,w
  2174  06EA  3E2C               	addlw	44
  2175  06EB  0086               	movwf	6
  2176  06EC  0187               	clrf	7
  2177  06ED  0876               	movf	??_receivePayload,w
  2178  06EE  0081               	movwf	1
  2179                           
  2180                           ;RFM69HCW.c: 102:     }
  2181  06EF  3001               	movlw	1
  2182  06F0  07F8               	addwf	receivePayload@i,f
  2183  06F1  3000               	movlw	0
  2184  06F2  3DF9               	addwfc	receivePayload@i+1,f
  2185  06F3  2ED1               	goto	l1319
  2186  06F4                     l1321:	
  2187                           
  2188                           ;RFM69HCW.c: 103:     setPinWithMask(radio->SSport, radio->SSbit,1);
  2189  06F4  087A               	movf	receivePayload@radio,w
  2190  06F5  3E28               	addlw	40
  2191  06F6  0086               	movwf	6
  2192  06F7  0187               	clrf	7
  2193  06F8  3F40               	moviw [0]fsr1
  2194  06F9  00F0               	movwf	setPinWithMask@pPort
  2195  06FA  3F41               	moviw [1]fsr1
  2196  06FB  00F1               	movwf	setPinWithMask@pPort+1
  2197  06FC  087A               	movf	receivePayload@radio,w
  2198  06FD  3E2A               	addlw	42
  2199  06FE  0086               	movwf	6
  2200  06FF  0187               	clrf	7
  2201  0700  0801               	movf	1,w
  2202  0701  00F6               	movwf	??_receivePayload
  2203  0702  0876               	movf	??_receivePayload,w
  2204  0703  00F2               	movwf	setPinWithMask@iPin
  2205  0704  01F3               	clrf	setPinWithMask@value
  2206  0705  0AF3               	incf	setPinWithMask@value,f
  2207  0706  3185  252D         	fcall	_setPinWithMask
  2208  0708  0008               	return
  2209  0709                     __end_of_receivePayload:	
  2210                           
  2211                           	psect	text6
  2212  0551                     __ptext6:	
  2213 ;; *************** function _initRadio *****************
  2214 ;; Defined at:
  2215 ;;		line 111 in file "RFM69HCW.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  radio           1    wreg     PTR struct RFM69HCW
  2218 ;;		 -> main@radio(75), 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  radio           1   16[BANK0 ] PTR struct RFM69HCW
  2221 ;;		 -> main@radio(75), 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2232 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2234 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2235 ;;Total ram usage:        1 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    4
  2238 ;; This function calls:
  2239 ;;		_setModulationThreshold
  2240 ;;		_setNodeAddress
  2241 ;;		_setPacketFormat
  2242 ;;		_setPacketLength
  2243 ;;		_setPreambleLength
  2244 ;;		_setRSSIThreshold
  2245 ;;		_setRecommendedParams
  2246 ;;		_setSyncWords
  2247 ;; This function is called by:
  2248 ;;		_main
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function _initRadio
  2254  0551                     _initRadio:	
  2255                           
  2256                           ;incstack = 0
  2257                           ; Regs used in _initRadio: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2258                           ;initRadio@radio stored from wreg
  2259  0551  0020               	movlb	0	; select bank0
  2260  0552  00DC               	movwf	initRadio@radio
  2261                           
  2262                           ;RFM69HCW.c: 112:     setSyncWords(radio);
  2263  0553  085C               	movf	initRadio@radio,w
  2264  0554  3185  25A6  3185   	fcall	_setSyncWords
  2265                           
  2266                           ;RFM69HCW.c: 113:     setPacketLength(radio);
  2267  0557  0020               	movlb	0	; select bank0
  2268  0558  085C               	movf	initRadio@radio,w
  2269  0559  3184  24D8  3185   	fcall	_setPacketLength
  2270                           
  2271                           ;RFM69HCW.c: 114:     setNodeAddress(radio);
  2272  055C  0020               	movlb	0	; select bank0
  2273  055D  085C               	movf	initRadio@radio,w
  2274  055E  3184  24BC  3185   	fcall	_setNodeAddress
  2275                           
  2276                           ;RFM69HCW.c: 115:     setRSSIThreshold(radio);
  2277  0561  0020               	movlb	0	; select bank0
  2278  0562  085C               	movf	initRadio@radio,w
  2279  0563  3184  24F4  3185   	fcall	_setRSSIThreshold
  2280                           
  2281                           ;RFM69HCW.c: 116:     setPacketFormat(radio);
  2282  0566  0020               	movlb	0	; select bank0
  2283  0567  085C               	movf	initRadio@radio,w
  2284  0568  3183  23B7  3185   	fcall	_setPacketFormat
  2285                           
  2286                           ;RFM69HCW.c: 117:     setRecommendedParams(radio);
  2287  056B  0020               	movlb	0	; select bank0
  2288  056C  085C               	movf	initRadio@radio,w
  2289  056D  3183  2397  3185   	fcall	_setRecommendedParams
  2290                           
  2291                           ;RFM69HCW.c: 118:     setModulationThreshold(radio);
  2292  0570  0020               	movlb	0	; select bank0
  2293  0571  085C               	movf	initRadio@radio,w
  2294  0572  3183  23A5  3185   	fcall	_setModulationThreshold
  2295                           
  2296                           ;RFM69HCW.c: 119:     setPreambleLength(radio);
  2297  0575  0020               	movlb	0	; select bank0
  2298  0576  085C               	movf	initRadio@radio,w
  2299  0577  3183  23C9         	fcall	_setPreambleLength
  2300  0579  0008               	return
  2301  057A                     __end_of_initRadio:	
  2302                           
  2303                           	psect	text7
  2304  05A6                     __ptext7:	
  2305 ;; *************** function _setSyncWords *****************
  2306 ;; Defined at:
  2307 ;;		line 48 in file "RFM69HCW.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  radio           1    wreg     PTR struct RFM69HCW
  2310 ;;		 -> main@radio(75), 
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;  radio           1   13[BANK0 ] PTR struct RFM69HCW
  2313 ;;		 -> main@radio(75), 
  2314 ;;  i               2   14[BANK0 ] int 
  2315 ;;  msg            10    3[BANK0 ] unsigned char [10]
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      void 
  2318 ;; Registers used:
  2319 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2326 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2327 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2328 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2329 ;;Total ram usage:       15 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; Hardware stack levels required when called:    2
  2332 ;; This function calls:
  2333 ;;		_sendBulk
  2334 ;; This function is called by:
  2335 ;;		_initRadio
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           
  2340                           ;psect for function _setSyncWords
  2341  05A6                     _setSyncWords:	
  2342                           
  2343                           ;incstack = 0
  2344                           ; Regs used in _setSyncWords: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2345                           ;setSyncWords@radio stored from wreg
  2346  05A6  0020               	movlb	0	; select bank0
  2347  05A7  00D9               	movwf	setSyncWords@radio
  2348                           
  2349                           ;RFM69HCW.c: 49:     unsigned char msg[10];;RFM69HCW.c: 50:     msg[0]=0x2e|0x80; msg[1]
      +                          =0b10011000;
  2350  05A8  30AE               	movlw	174
  2351  05A9  00FC               	movwf	??_setSyncWords
  2352  05AA  087C               	movf	??_setSyncWords,w
  2353  05AB  00CF               	movwf	setSyncWords@msg
  2354  05AC  3098               	movlw	152
  2355  05AD  00FC               	movwf	??_setSyncWords
  2356  05AE  087C               	movf	??_setSyncWords,w
  2357  05AF  00D0               	movwf	setSyncWords@msg+1
  2358                           
  2359                           ;RFM69HCW.c: 51:     for(int i=2;i<10;i++){
  2360  05B0  3002               	movlw	2
  2361  05B1  00DA               	movwf	setSyncWords@i
  2362  05B2  3000               	movlw	0
  2363  05B3  00DB               	movwf	setSyncWords@i+1
  2364  05B4                     l1191:	
  2365                           
  2366                           ;RFM69HCW.c: 52:         msg[i]=(radio->sync_words[i]);
  2367  05B4  0020               	movlb	0	; select bank0
  2368  05B5  085A               	movf	setSyncWords@i,w
  2369  05B6  0759               	addwf	setSyncWords@radio,w
  2370  05B7  00FC               	movwf	??_setSyncWords
  2371  05B8  087C               	movf	??_setSyncWords,w
  2372  05B9  3E42               	addlw	66
  2373  05BA  0086               	movwf	6
  2374  05BB  0187               	clrf	7
  2375  05BC  0801               	movf	1,w
  2376  05BD  00FD               	movwf	??_setSyncWords+1
  2377  05BE  085A               	movf	setSyncWords@i,w
  2378  05BF  3E4F               	addlw	(low (setSyncWords@msg| 0))& (0+255)
  2379  05C0  0086               	movwf	6
  2380  05C1  0187               	clrf	7
  2381  05C2  087D               	movf	??_setSyncWords+1,w
  2382  05C3  0081               	movwf	1
  2383                           
  2384                           ;RFM69HCW.c: 53:     }
  2385  05C4  3001               	movlw	1
  2386  05C5  07DA               	addwf	setSyncWords@i,f
  2387  05C6  3000               	movlw	0
  2388  05C7  3DDB               	addwfc	setSyncWords@i+1,f
  2389  05C8  085B               	movf	setSyncWords@i+1,w
  2390  05C9  3A80               	xorlw	128
  2391  05CA  00FC               	movwf	??_setSyncWords
  2392  05CB  3080               	movlw	128
  2393  05CC  027C               	subwf	??_setSyncWords,w
  2394  05CD  1D03               	skipz
  2395  05CE  2DD1               	goto	u265
  2396  05CF  300A               	movlw	10
  2397  05D0  025A               	subwf	setSyncWords@i,w
  2398  05D1                     u265:	
  2399  05D1  1C03               	skipc
  2400  05D2  2DB4               	goto	l1191
  2401                           
  2402                           ;RFM69HCW.c: 54:     sendBulk(radio,msg,10);
  2403  05D3  304F               	movlw	(low (setSyncWords@msg| 0))& (0+255)
  2404  05D4  00FC               	movwf	??_setSyncWords
  2405  05D5  087C               	movf	??_setSyncWords,w
  2406  05D6  00F6               	movwf	sendBulk@msgs
  2407  05D7  300A               	movlw	10
  2408  05D8  00FD               	movwf	??_setSyncWords+1
  2409  05D9  087D               	movf	??_setSyncWords+1,w
  2410  05DA  00F7               	movwf	sendBulk@len
  2411  05DB  0020               	movlb	0	; select bank0
  2412  05DC  0859               	movf	setSyncWords@radio,w
  2413  05DD  3187  2709         	fcall	_sendBulk
  2414  05DF  0008               	return
  2415  05E0                     __end_of_setSyncWords:	
  2416                           
  2417                           	psect	text8
  2418  0397                     __ptext8:	
  2419 ;; *************** function _setRecommendedParams *****************
  2420 ;; Defined at:
  2421 ;;		line 82 in file "RFM69HCW.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  radio           1    wreg     PTR struct RFM69HCW
  2424 ;;		 -> main@radio(75), 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  radio           1   12[BANK0 ] PTR struct RFM69HCW
  2427 ;;		 -> main@radio(75), 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      void 
  2430 ;; Registers used:
  2431 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2438 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2439 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2440 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2441 ;;Total ram usage:        2 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:    3
  2444 ;; This function calls:
  2445 ;;		_sendPairs
  2446 ;; This function is called by:
  2447 ;;		_initRadio
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           
  2452                           ;psect for function _setRecommendedParams
  2453  0397                     _setRecommendedParams:	
  2454                           
  2455                           ;incstack = 0
  2456                           ; Regs used in _setRecommendedParams: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2457                           ;setRecommendedParams@radio stored from wreg
  2458  0397  0020               	movlb	0	; select bank0
  2459  0398  00D8               	movwf	setRecommendedParams@radio
  2460                           
  2461                           ;RFM69HCW.c: 83:     sendPairs(radio, recommended_params, 8);
  2462  0399  3042               	movlw	(low (_recommended_params| 0))& (0+255)
  2463  039A  00D7               	movwf	??_setRecommendedParams
  2464  039B  0857               	movf	??_setRecommendedParams,w
  2465  039C  00CF               	movwf	sendPairs@msgs
  2466  039D  3008               	movlw	8
  2467  039E  00D0               	movwf	sendPairs@len
  2468  039F  3000               	movlw	0
  2469  03A0  00D1               	movwf	sendPairs@len+1
  2470  03A1  0858               	movf	setRecommendedParams@radio,w
  2471  03A2  3185  25E0         	fcall	_sendPairs
  2472  03A4  0008               	return
  2473  03A5                     __end_of_setRecommendedParams:	
  2474                           
  2475                           	psect	text9
  2476  05E0                     __ptext9:	
  2477 ;; *************** function _sendPairs *****************
  2478 ;; Defined at:
  2479 ;;		line 7 in file "RFM69HCW.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  radio           1    wreg     PTR struct RFM69HCW
  2482 ;;		 -> main@radio(75), 
  2483 ;;  msgs            1    3[BANK0 ] PTR unsigned char 
  2484 ;;		 -> recommended_params(10), 
  2485 ;;  len             2    4[BANK0 ] const int 
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;  radio           1    6[BANK0 ] PTR struct RFM69HCW
  2488 ;;		 -> main@radio(75), 
  2489 ;;  i               2    9[BANK0 ] int 
  2490 ;;  msg             2    7[BANK0 ] unsigned char [2]
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  1    wreg      void 
  2493 ;; Registers used:
  2494 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2500 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2501 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2502 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2503 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2504 ;;Total ram usage:       10 bytes
  2505 ;; Hardware stack levels used:    1
  2506 ;; Hardware stack levels required when called:    2
  2507 ;; This function calls:
  2508 ;;		_sendBulk
  2509 ;; This function is called by:
  2510 ;;		_setRecommendedParams
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           
  2515                           ;psect for function _sendPairs
  2516  05E0                     _sendPairs:	
  2517                           
  2518                           ;incstack = 0
  2519                           ; Regs used in _sendPairs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2520                           ;sendPairs@radio stored from wreg
  2521  05E0  0020               	movlb	0	; select bank0
  2522  05E1  00D2               	movwf	sendPairs@radio
  2523                           
  2524                           ;RFM69HCW.c: 8:     byte msg[2] ={0};
  2525  05E2  01D3               	clrf	sendPairs@msg
  2526  05E3  01D4               	clrf	sendPairs@msg+1
  2527                           
  2528                           ;RFM69HCW.c: 9:     for(int i=0;i<len;i+=2){
  2529  05E4  01D5               	clrf	sendPairs@i
  2530  05E5  01D6               	clrf	sendPairs@i+1
  2531  05E6  0851               	movf	sendPairs@len+1,w
  2532  05E7  3A80               	xorlw	128
  2533  05E8  00FC               	movwf	??_sendPairs
  2534  05E9  3080               	movlw	128
  2535  05EA  027C               	subwf	??_sendPairs,w
  2536  05EB  1D03               	skipz
  2537  05EC  2DEF               	goto	u245
  2538  05ED  3001               	movlw	1
  2539  05EE  0250               	subwf	sendPairs@len,w
  2540  05EF                     u245:	
  2541  05EF  1C03               	btfss	3,0
  2542  05F0  0008               	return
  2543  05F1                     l1161:	
  2544                           
  2545                           ;RFM69HCW.c: 10:         msg[0]=msgs[i];msg[1]=msgs[i+1];
  2546  05F1  0020               	movlb	0	; select bank0
  2547  05F2  0855               	movf	sendPairs@i,w
  2548  05F3  074F               	addwf	sendPairs@msgs,w
  2549  05F4  00FC               	movwf	??_sendPairs
  2550  05F5  087C               	movf	??_sendPairs,w
  2551  05F6  0086               	movwf	6
  2552  05F7  0187               	clrf	7
  2553  05F8  0801               	movf	1,w
  2554  05F9  00FD               	movwf	??_sendPairs+1
  2555  05FA  087D               	movf	??_sendPairs+1,w
  2556  05FB  00D3               	movwf	sendPairs@msg
  2557  05FC  0855               	movf	sendPairs@i,w
  2558  05FD  074F               	addwf	sendPairs@msgs,w
  2559  05FE  00FC               	movwf	??_sendPairs
  2560  05FF  087C               	movf	??_sendPairs,w
  2561  0600  0086               	movwf	6
  2562  0601  0187               	clrf	7
  2563  0602  3F41               	moviw [1]fsr1
  2564  0603  00D4               	movwf	sendPairs@msg+1
  2565                           
  2566                           ;RFM69HCW.c: 11:         sendBulk(radio, msg,2);
  2567  0604  3053               	movlw	(low (sendPairs@msg| 0))& (0+255)
  2568  0605  00FC               	movwf	??_sendPairs
  2569  0606  087C               	movf	??_sendPairs,w
  2570  0607  00F6               	movwf	sendBulk@msgs
  2571  0608  3002               	movlw	2
  2572  0609  00FD               	movwf	??_sendPairs+1
  2573  060A  087D               	movf	??_sendPairs+1,w
  2574  060B  00F7               	movwf	sendBulk@len
  2575  060C  0852               	movf	sendPairs@radio,w
  2576  060D  3187  2709  3185   	fcall	_sendBulk
  2577                           
  2578                           ;RFM69HCW.c: 12:     }
  2579  0610  3002               	movlw	2
  2580  0611  0020               	movlb	0	; select bank0
  2581  0612  07D5               	addwf	sendPairs@i,f
  2582  0613  3000               	movlw	0
  2583  0614  3DD6               	addwfc	sendPairs@i+1,f
  2584  0615  0856               	movf	sendPairs@i+1,w
  2585  0616  3A80               	xorlw	128
  2586  0617  00FC               	movwf	??_sendPairs
  2587  0618  0851               	movf	sendPairs@len+1,w
  2588  0619  3A80               	xorlw	128
  2589  061A  027C               	subwf	??_sendPairs,w
  2590  061B  1D03               	skipz
  2591  061C  2E1F               	goto	u255
  2592  061D  0850               	movf	sendPairs@len,w
  2593  061E  0255               	subwf	sendPairs@i,w
  2594  061F                     u255:	
  2595  061F  1803               	btfsc	3,0
  2596  0620  0008               	return
  2597  0621  2DF1               	goto	l1161
  2598  0622                     __end_of_sendPairs:	
  2599                           
  2600                           	psect	text10
  2601  04F4                     __ptext10:	
  2602 ;; *************** function _setRSSIThreshold *****************
  2603 ;; Defined at:
  2604 ;;		line 67 in file "RFM69HCW.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  radio           1    wreg     PTR struct RFM69HCW
  2607 ;;		 -> main@radio(75), 
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;  radio           1    5[BANK0 ] PTR struct RFM69HCW
  2610 ;;		 -> main@radio(75), 
  2611 ;;  msg             2    3[BANK0 ] unsigned char [2]
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      void 
  2614 ;; Registers used:
  2615 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2622 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2623 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2624 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2625 ;;Total ram usage:        5 bytes
  2626 ;; Hardware stack levels used:    1
  2627 ;; Hardware stack levels required when called:    2
  2628 ;; This function calls:
  2629 ;;		_sendBulk
  2630 ;; This function is called by:
  2631 ;;		_initRadio
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           
  2636                           ;psect for function _setRSSIThreshold
  2637  04F4                     _setRSSIThreshold:	
  2638                           
  2639                           ;incstack = 0
  2640                           ; Regs used in _setRSSIThreshold: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2641                           ;setRSSIThreshold@radio stored from wreg
  2642  04F4  0020               	movlb	0	; select bank0
  2643  04F5  00D1               	movwf	setRSSIThreshold@radio
  2644                           
  2645                           ;RFM69HCW.c: 68:     byte msg[] = {0x29|0x80, radio->RSSI_threshold};
  2646  04F6  01CF               	clrf	setRSSIThreshold@msg
  2647  04F7  01D0               	clrf	setRSSIThreshold@msg+1
  2648  04F8  30A9               	movlw	169
  2649  04F9  00FC               	movwf	??_setRSSIThreshold
  2650  04FA  087C               	movf	??_setRSSIThreshold,w
  2651  04FB  00CF               	movwf	setRSSIThreshold@msg
  2652  04FC  0851               	movf	setRSSIThreshold@radio,w
  2653  04FD  3E41               	addlw	65
  2654  04FE  0086               	movwf	6
  2655  04FF  0187               	clrf	7
  2656  0500  0801               	movf	1,w
  2657  0501  00FC               	movwf	??_setRSSIThreshold
  2658  0502  087C               	movf	??_setRSSIThreshold,w
  2659  0503  00D0               	movwf	setRSSIThreshold@msg+1
  2660                           
  2661                           ;RFM69HCW.c: 69:     sendBulk(radio, msg, 2);
  2662  0504  304F               	movlw	(low (setRSSIThreshold@msg| 0))& (0+255)
  2663  0505  00FC               	movwf	??_setRSSIThreshold
  2664  0506  087C               	movf	??_setRSSIThreshold,w
  2665  0507  00F6               	movwf	sendBulk@msgs
  2666  0508  3002               	movlw	2
  2667  0509  00FD               	movwf	??_setRSSIThreshold+1
  2668  050A  087D               	movf	??_setRSSIThreshold+1,w
  2669  050B  00F7               	movwf	sendBulk@len
  2670  050C  0851               	movf	setRSSIThreshold@radio,w
  2671  050D  3187  2709         	fcall	_sendBulk
  2672  050F  0008               	return
  2673  0510                     __end_of_setRSSIThreshold:	
  2674                           
  2675                           	psect	text11
  2676  03C9                     __ptext11:	
  2677 ;; *************** function _setPreambleLength *****************
  2678 ;; Defined at:
  2679 ;;		line 106 in file "RFM69HCW.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;  radio           1    wreg     PTR struct RFM69HCW
  2682 ;;		 -> main@radio(75), 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  radio           1    5[BANK0 ] PTR struct RFM69HCW
  2685 ;;		 -> main@radio(75), 
  2686 ;;  msg             2    3[BANK0 ] unsigned char [2]
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2697 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2698 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2699 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2700 ;;Total ram usage:        5 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    2
  2703 ;; This function calls:
  2704 ;;		_sendBulk
  2705 ;; This function is called by:
  2706 ;;		_initRadio
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           
  2711                           ;psect for function _setPreambleLength
  2712  03C9                     _setPreambleLength:	
  2713                           
  2714                           ;incstack = 0
  2715                           ; Regs used in _setPreambleLength: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2716                           ;setPreambleLength@radio stored from wreg
  2717  03C9  0020               	movlb	0	; select bank0
  2718  03CA  00D1               	movwf	setPreambleLength@radio
  2719                           
  2720                           ;RFM69HCW.c: 107:     byte msg[] = {0x2d|0x80, 0x03};
  2721  03CB  083B               	movf	setPreambleLength@F9437+1,w
  2722  03CC  00D0               	movwf	setPreambleLength@msg+1
  2723  03CD  083A               	movf	setPreambleLength@F9437,w
  2724  03CE  00CF               	movwf	setPreambleLength@msg
  2725                           
  2726                           ;RFM69HCW.c: 108:     sendBulk(radio, msg, 2);
  2727  03CF  304F               	movlw	(low (setPreambleLength@msg| 0))& (0+255)
  2728  03D0  00FC               	movwf	??_setPreambleLength
  2729  03D1  087C               	movf	??_setPreambleLength,w
  2730  03D2  00F6               	movwf	sendBulk@msgs
  2731  03D3  3002               	movlw	2
  2732  03D4  00FD               	movwf	??_setPreambleLength+1
  2733  03D5  087D               	movf	??_setPreambleLength+1,w
  2734  03D6  00F7               	movwf	sendBulk@len
  2735  03D7  0851               	movf	setPreambleLength@radio,w
  2736  03D8  3187  2709         	fcall	_sendBulk
  2737  03DA  0008               	return
  2738  03DB                     __end_of_setPreambleLength:	
  2739                           
  2740                           	psect	text12
  2741  04D8                     __ptext12:	
  2742 ;; *************** function _setPacketLength *****************
  2743 ;; Defined at:
  2744 ;;		line 57 in file "RFM69HCW.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  radio           1    wreg     PTR struct RFM69HCW
  2747 ;;		 -> main@radio(75), 
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;  radio           1    5[BANK0 ] PTR struct RFM69HCW
  2750 ;;		 -> main@radio(75), 
  2751 ;;  msg             2    3[BANK0 ] unsigned char [2]
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  1    wreg      void 
  2754 ;; Registers used:
  2755 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2762 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2763 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2764 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2765 ;;Total ram usage:        5 bytes
  2766 ;; Hardware stack levels used:    1
  2767 ;; Hardware stack levels required when called:    2
  2768 ;; This function calls:
  2769 ;;		_sendBulk
  2770 ;; This function is called by:
  2771 ;;		_initRadio
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           
  2776                           ;psect for function _setPacketLength
  2777  04D8                     _setPacketLength:	
  2778                           
  2779                           ;incstack = 0
  2780                           ; Regs used in _setPacketLength: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2781                           ;setPacketLength@radio stored from wreg
  2782  04D8  0020               	movlb	0	; select bank0
  2783  04D9  00D1               	movwf	setPacketLength@radio
  2784                           
  2785                           ;RFM69HCW.c: 58:     byte msg[] = {0x38|0x80, radio->packet_length};
  2786  04DA  01CF               	clrf	setPacketLength@msg
  2787  04DB  01D0               	clrf	setPacketLength@msg+1
  2788  04DC  30B8               	movlw	184
  2789  04DD  00FC               	movwf	??_setPacketLength
  2790  04DE  087C               	movf	??_setPacketLength,w
  2791  04DF  00CF               	movwf	setPacketLength@msg
  2792  04E0  0851               	movf	setPacketLength@radio,w
  2793  04E1  3E2B               	addlw	43
  2794  04E2  0086               	movwf	6
  2795  04E3  0187               	clrf	7
  2796  04E4  0801               	movf	1,w
  2797  04E5  00FC               	movwf	??_setPacketLength
  2798  04E6  087C               	movf	??_setPacketLength,w
  2799  04E7  00D0               	movwf	setPacketLength@msg+1
  2800                           
  2801                           ;RFM69HCW.c: 59:     sendBulk(radio, msg, 2);
  2802  04E8  304F               	movlw	(low (setPacketLength@msg| 0))& (0+255)
  2803  04E9  00FC               	movwf	??_setPacketLength
  2804  04EA  087C               	movf	??_setPacketLength,w
  2805  04EB  00F6               	movwf	sendBulk@msgs
  2806  04EC  3002               	movlw	2
  2807  04ED  00FD               	movwf	??_setPacketLength+1
  2808  04EE  087D               	movf	??_setPacketLength+1,w
  2809  04EF  00F7               	movwf	sendBulk@len
  2810  04F0  0851               	movf	setPacketLength@radio,w
  2811  04F1  3187  2709         	fcall	_sendBulk
  2812  04F3  0008               	return
  2813  04F4                     __end_of_setPacketLength:	
  2814                           
  2815                           	psect	text13
  2816  03B7                     __ptext13:	
  2817 ;; *************** function _setPacketFormat *****************
  2818 ;; Defined at:
  2819 ;;		line 72 in file "RFM69HCW.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;  radio           1    wreg     PTR struct RFM69HCW
  2822 ;;		 -> main@radio(75), 
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;  radio           1    5[BANK0 ] PTR struct RFM69HCW
  2825 ;;		 -> main@radio(75), 
  2826 ;;  msg             2    3[BANK0 ] unsigned char [2]
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2837 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2838 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2839 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2840 ;;Total ram usage:        5 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:    2
  2843 ;; This function calls:
  2844 ;;		_sendBulk
  2845 ;; This function is called by:
  2846 ;;		_initRadio
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           
  2851                           ;psect for function _setPacketFormat
  2852  03B7                     _setPacketFormat:	
  2853                           
  2854                           ;incstack = 0
  2855                           ; Regs used in _setPacketFormat: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2856                           ;setPacketFormat@radio stored from wreg
  2857  03B7  0020               	movlb	0	; select bank0
  2858  03B8  00D1               	movwf	setPacketFormat@radio
  2859                           
  2860                           ;RFM69HCW.c: 73:     byte msg[] = {0x37|0x80, 0b00010000};
  2861  03B9  0841               	movf	setPacketFormat@F9415+1,w
  2862  03BA  00D0               	movwf	setPacketFormat@msg+1
  2863  03BB  0840               	movf	setPacketFormat@F9415,w
  2864  03BC  00CF               	movwf	setPacketFormat@msg
  2865                           
  2866                           ;RFM69HCW.c: 74:     sendBulk(radio, msg, 2);
  2867  03BD  304F               	movlw	(low (setPacketFormat@msg| 0))& (0+255)
  2868  03BE  00FC               	movwf	??_setPacketFormat
  2869  03BF  087C               	movf	??_setPacketFormat,w
  2870  03C0  00F6               	movwf	sendBulk@msgs
  2871  03C1  3002               	movlw	2
  2872  03C2  00FD               	movwf	??_setPacketFormat+1
  2873  03C3  087D               	movf	??_setPacketFormat+1,w
  2874  03C4  00F7               	movwf	sendBulk@len
  2875  03C5  0851               	movf	setPacketFormat@radio,w
  2876  03C6  3187  2709         	fcall	_sendBulk
  2877  03C8  0008               	return
  2878  03C9                     __end_of_setPacketFormat:	
  2879                           
  2880                           	psect	text14
  2881  04BC                     __ptext14:	
  2882 ;; *************** function _setNodeAddress *****************
  2883 ;; Defined at:
  2884 ;;		line 62 in file "RFM69HCW.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  radio           1    wreg     PTR struct RFM69HCW
  2887 ;;		 -> main@radio(75), 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  radio           1    5[BANK0 ] PTR struct RFM69HCW
  2890 ;;		 -> main@radio(75), 
  2891 ;;  msg             2    3[BANK0 ] unsigned char [2]
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  1    wreg      void 
  2894 ;; Registers used:
  2895 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2902 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2903 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2904 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2905 ;;Total ram usage:        5 bytes
  2906 ;; Hardware stack levels used:    1
  2907 ;; Hardware stack levels required when called:    2
  2908 ;; This function calls:
  2909 ;;		_sendBulk
  2910 ;; This function is called by:
  2911 ;;		_initRadio
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           
  2916                           ;psect for function _setNodeAddress
  2917  04BC                     _setNodeAddress:	
  2918                           
  2919                           ;incstack = 0
  2920                           ; Regs used in _setNodeAddress: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2921                           ;setNodeAddress@radio stored from wreg
  2922  04BC  0020               	movlb	0	; select bank0
  2923  04BD  00D1               	movwf	setNodeAddress@radio
  2924                           
  2925                           ;RFM69HCW.c: 63:     byte msg[] = {0x39|0x80, radio->node_address};
  2926  04BE  01CF               	clrf	setNodeAddress@msg
  2927  04BF  01D0               	clrf	setNodeAddress@msg+1
  2928  04C0  30B9               	movlw	185
  2929  04C1  00FC               	movwf	??_setNodeAddress
  2930  04C2  087C               	movf	??_setNodeAddress,w
  2931  04C3  00CF               	movwf	setNodeAddress@msg
  2932  04C4  0851               	movf	setNodeAddress@radio,w
  2933  04C5  3E40               	addlw	64
  2934  04C6  0086               	movwf	6
  2935  04C7  0187               	clrf	7
  2936  04C8  0801               	movf	1,w
  2937  04C9  00FC               	movwf	??_setNodeAddress
  2938  04CA  087C               	movf	??_setNodeAddress,w
  2939  04CB  00D0               	movwf	setNodeAddress@msg+1
  2940                           
  2941                           ;RFM69HCW.c: 64:     sendBulk(radio, msg, 2);
  2942  04CC  304F               	movlw	(low (setNodeAddress@msg| 0))& (0+255)
  2943  04CD  00FC               	movwf	??_setNodeAddress
  2944  04CE  087C               	movf	??_setNodeAddress,w
  2945  04CF  00F6               	movwf	sendBulk@msgs
  2946  04D0  3002               	movlw	2
  2947  04D1  00FD               	movwf	??_setNodeAddress+1
  2948  04D2  087D               	movf	??_setNodeAddress+1,w
  2949  04D3  00F7               	movwf	sendBulk@len
  2950  04D4  0851               	movf	setNodeAddress@radio,w
  2951  04D5  3187  2709         	fcall	_sendBulk
  2952  04D7  0008               	return
  2953  04D8                     __end_of_setNodeAddress:	
  2954                           
  2955                           	psect	text15
  2956  03A5                     __ptext15:	
  2957 ;; *************** function _setModulationThreshold *****************
  2958 ;; Defined at:
  2959 ;;		line 86 in file "RFM69HCW.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  radio           1    wreg     PTR struct RFM69HCW
  2962 ;;		 -> main@radio(75), 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  radio           1    5[BANK0 ] PTR struct RFM69HCW
  2965 ;;		 -> main@radio(75), 
  2966 ;;  msg             2    3[BANK0 ] unsigned char [2]
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  1    wreg      void 
  2969 ;; Registers used:
  2970 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2977 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2978 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2979 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2980 ;;Total ram usage:        5 bytes
  2981 ;; Hardware stack levels used:    1
  2982 ;; Hardware stack levels required when called:    2
  2983 ;; This function calls:
  2984 ;;		_sendBulk
  2985 ;; This function is called by:
  2986 ;;		_initRadio
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           
  2991                           ;psect for function _setModulationThreshold
  2992  03A5                     _setModulationThreshold:	
  2993                           
  2994                           ;incstack = 0
  2995                           ; Regs used in _setModulationThreshold: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  2996                           ;setModulationThreshold@radio stored from wreg
  2997  03A5  0020               	movlb	0	; select bank0
  2998  03A6  00D1               	movwf	setModulationThreshold@radio
  2999                           
  3000                           ;RFM69HCW.c: 87:     byte msg[] = {0x3C|0x80, 0x07};
  3001  03A7  083F               	movf	setModulationThreshold@F9426+1,w
  3002  03A8  00D0               	movwf	setModulationThreshold@msg+1
  3003  03A9  083E               	movf	setModulationThreshold@F9426,w
  3004  03AA  00CF               	movwf	setModulationThreshold@msg
  3005                           
  3006                           ;RFM69HCW.c: 88:     sendBulk(radio, msg, 2);
  3007  03AB  304F               	movlw	(low (setModulationThreshold@msg| 0))& (0+255)
  3008  03AC  00FC               	movwf	??_setModulationThreshold
  3009  03AD  087C               	movf	??_setModulationThreshold,w
  3010  03AE  00F6               	movwf	sendBulk@msgs
  3011  03AF  3002               	movlw	2
  3012  03B0  00FD               	movwf	??_setModulationThreshold+1
  3013  03B1  087D               	movf	??_setModulationThreshold+1,w
  3014  03B2  00F7               	movwf	sendBulk@len
  3015  03B3  0851               	movf	setModulationThreshold@radio,w
  3016  03B4  3187  2709         	fcall	_sendBulk
  3017  03B6  0008               	return
  3018  03B7                     __end_of_setModulationThreshold:	
  3019                           
  3020                           	psect	text16
  3021  0388                     __ptext16:	
  3022 ;; *************** function _init *****************
  3023 ;; Defined at:
  3024 ;;		line 60 in file "receiver.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;		None
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;		None
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  2   71[None  ] int 
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0, pclath, cstack
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3042 ;;Total ram usage:        0 bytes
  3043 ;; Hardware stack levels used:    1
  3044 ;; Hardware stack levels required when called:    2
  3045 ;; This function calls:
  3046 ;;		_rfmSetup
  3047 ;; This function is called by:
  3048 ;;		_main
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           
  3053                           ;psect for function _init
  3054  0388                     _init:	
  3055                           
  3056                           ;receiver.c: 61:     rfmSetup();
  3057                           
  3058                           ;incstack = 0
  3059                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  3060  0388  3185  2510         	fcall	_rfmSetup
  3061  038A  0008               	return
  3062  038B                     __end_of_init:	
  3063                           
  3064                           	psect	text17
  3065  0510                     __ptext17:	
  3066 ;; *************** function _rfmSetup *****************
  3067 ;; Defined at:
  3068 ;;		line 66 in file "receiver.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, status,2, status,0, pclath, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3084 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3085 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3086 ;;Total ram usage:        1 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; Hardware stack levels required when called:    1
  3089 ;; This function calls:
  3090 ;;		_resetRadio
  3091 ;;		_spi_init_master
  3092 ;; This function is called by:
  3093 ;;		_init
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           
  3098                           ;psect for function _rfmSetup
  3099  0510                     _rfmSetup:	
  3100                           
  3101                           ;receiver.c: 67:     TRISCbits.TRISC2=0;
  3102                           
  3103                           ;incstack = 0
  3104                           ; Regs used in _rfmSetup: [wreg+status,2+status,0+pclath+cstack]
  3105  0510  0021               	movlb	1	; select bank1
  3106  0511  110E               	bcf	14,2	;volatile
  3107                           
  3108                           ;receiver.c: 68:     TRISCbits.TRISC3=0;
  3109  0512  118E               	bcf	14,3	;volatile
  3110                           
  3111                           ;receiver.c: 69:     TRISCbits.TRISC5=0;
  3112  0513  128E               	bcf	14,5	;volatile
  3113                           
  3114                           ;receiver.c: 70:     SSP1BUF;
  3115  0514  0024               	movlb	4	; select bank4
  3116  0515  0811               	movf	17,w	;volatile
  3117                           
  3118                           ;receiver.c: 71:     SSP1STATbits.BF=0;
  3119  0516  1014               	bcf	20,0	;volatile
  3120                           
  3121                           ;receiver.c: 72:     OSCCONbits.IRCF=0b1111;
  3122  0517  3078               	movlw	120
  3123  0518  0021               	movlb	1	; select bank1
  3124  0519  0499               	iorwf	25,f	;volatile
  3125                           
  3126                           ;receiver.c: 73:     spi_init_master();
  3127  051A  3184  24A0  3185   	fcall	_spi_init_master
  3128                           
  3129                           ;receiver.c: 74:     TRISCbits.TRISC5=0;
  3130  051D  0021               	movlb	1	; select bank1
  3131  051E  128E               	bcf	14,5	;volatile
  3132                           
  3133                           ;receiver.c: 75:     resetRadio();
  3134  051F  3184  242B  3185   	fcall	_resetRadio
  3135                           
  3136                           ;receiver.c: 76:     TRISAbits.TRISA2=0;
  3137  0522  0021               	movlb	1	; select bank1
  3138  0523  110C               	bcf	12,2	;volatile
  3139                           
  3140                           ;receiver.c: 77:     _delay((unsigned long)((20)*(16000000/4000.0)));
  3141  0524  3068               	movlw	104
  3142  0525  00F1               	movwf	??_rfmSetup
  3143  0526  30E4               	movlw	228
  3144  0527                     u327:	
  3145  0527  0B89               	decfsz	9,f
  3146  0528  2D27               	goto	u327
  3147  0529  0BF1               	decfsz	??_rfmSetup,f
  3148  052A  2D27               	goto	u327
  3149  052B  3200               	nop2
  3150  052C  0008               	return
  3151  052D                     __end_of_rfmSetup:	
  3152                           
  3153                           	psect	text18
  3154  04A0                     __ptext18:	
  3155 ;; *************** function _spi_init_master *****************
  3156 ;; Defined at:
  3157 ;;		line 107 in file "receiver.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg, status,2, status,0
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3175 ;;Total ram usage:        0 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_rfmSetup
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           
  3185                           ;psect for function _spi_init_master
  3186  04A0                     _spi_init_master:	
  3187                           
  3188                           ;receiver.c: 108:     ANSELA=0;
  3189                           
  3190                           ;incstack = 0
  3191                           ; Regs used in _spi_init_master: [wreg+status,2+status,0]
  3192  04A0  0023               	movlb	3	; select bank3
  3193  04A1  018C               	clrf	12	;volatile
  3194                           
  3195                           ;receiver.c: 109:     ANSELC=0;
  3196  04A2  018E               	clrf	14	;volatile
  3197                           
  3198                           ;receiver.c: 110:     SSP1CON1bits.SSPM=0b0001;
  3199  04A3  0024               	movlb	4	; select bank4
  3200  04A4  0815               	movf	21,w	;volatile
  3201  04A5  39F0               	andlw	-16
  3202  04A6  3801               	iorlw	1
  3203  04A7  0095               	movwf	21	;volatile
  3204                           
  3205                           ;receiver.c: 111:     SSP1CONbits.SSPEN=1;
  3206  04A8  1695               	bsf	21,5	;volatile
  3207                           
  3208                           ;receiver.c: 112:     SSP1CONbits.CKP=0;
  3209  04A9  1215               	bcf	21,4	;volatile
  3210                           
  3211                           ;receiver.c: 113:     SSP1STATbits.CKE=1;
  3212  04AA  1714               	bsf	20,6	;volatile
  3213                           
  3214                           ;receiver.c: 114:     SSP1STATbits.SMP=0;
  3215  04AB  1394               	bcf	20,7	;volatile
  3216                           
  3217                           ;receiver.c: 116:     RC0PPS=0b10000;
  3218  04AC  3010               	movlw	16
  3219  04AD  003D               	movlb	29	; select bank29
  3220  04AE  00A0               	movwf	32	;volatile
  3221                           
  3222                           ;receiver.c: 117:     TRISCbits.TRISC0=0;
  3223  04AF  0021               	movlb	1	; select bank1
  3224  04B0  100E               	bcf	14,0	;volatile
  3225                           
  3226                           ;receiver.c: 120:     SSPDATPPS=0b10001;
  3227  04B1  3011               	movlw	17
  3228  04B2  003C               	movlb	28	; select bank28
  3229  04B3  00A1               	movwf	33	;volatile
  3230                           
  3231                           ;receiver.c: 121:     TRISCbits.TRISC1=1;
  3232  04B4  0021               	movlb	1	; select bank1
  3233  04B5  148E               	bsf	14,1	;volatile
  3234                           
  3235                           ;receiver.c: 124:     RC3PPS=0b10001;
  3236  04B6  3011               	movlw	17
  3237  04B7  003D               	movlb	29	; select bank29
  3238  04B8  00A3               	movwf	35	;volatile
  3239                           
  3240                           ;receiver.c: 125:     TRISCbits.TRISC3=0;
  3241  04B9  0021               	movlb	1	; select bank1
  3242  04BA  118E               	bcf	14,3	;volatile
  3243  04BB  0008               	return
  3244  04BC                     __end_of_spi_init_master:	
  3245                           
  3246                           	psect	text19
  3247  042B                     __ptext19:	
  3248 ;; *************** function _resetRadio *****************
  3249 ;; Defined at:
  3250 ;;		line 53 in file "receiver.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;		None
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;		None
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  1    wreg      void 
  3257 ;; Registers used:
  3258 ;;		wreg
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3266 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3267 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3268 ;;Total ram usage:        1 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; This function calls:
  3271 ;;		Nothing
  3272 ;; This function is called by:
  3273 ;;		_rfmSetup
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           
  3278                           ;psect for function _resetRadio
  3279  042B                     _resetRadio:	
  3280                           
  3281                           ;receiver.c: 54:     PORTCbits.RC2 = 1;
  3282                           
  3283                           ;incstack = 0
  3284                           ; Regs used in _resetRadio: [wreg]
  3285  042B  0020               	movlb	0	; select bank0
  3286  042C  150E               	bsf	14,2	;volatile
  3287                           
  3288                           ;receiver.c: 55:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3289  042D  3006               	movlw	6
  3290  042E  00F0               	movwf	??_resetRadio
  3291  042F  3030               	movlw	48
  3292  0430                     u337:	
  3293  0430  0B89               	decfsz	9,f
  3294  0431  2C30               	goto	u337
  3295  0432  0BF0               	decfsz	??_resetRadio,f
  3296  0433  2C30               	goto	u337
  3297  0434  3200               	nop2
  3298                           
  3299                           ;receiver.c: 56:     PORTCbits.RC2 = 0;
  3300  0435  0020               	movlb	0	; select bank0
  3301  0436  110E               	bcf	14,2	;volatile
  3302                           
  3303                           ;receiver.c: 57:     _delay((unsigned long)((20)*(16000000/4000.0)));
  3304  0437  3068               	movlw	104
  3305  0438  00F0               	movwf	??_resetRadio
  3306  0439  30E4               	movlw	228
  3307  043A                     u347:	
  3308  043A  0B89               	decfsz	9,f
  3309  043B  2C3A               	goto	u347
  3310  043C  0BF0               	decfsz	??_resetRadio,f
  3311  043D  2C3A               	goto	u347
  3312  043E  3200               	nop2
  3313  043F  0008               	return
  3314  0440                     __end_of_resetRadio:	
  3315                           
  3316                           	psect	text20
  3317  0417                     __ptext20:	
  3318 ;; *************** function _getRSSI *****************
  3319 ;; Defined at:
  3320 ;;		line 136 in file "RFM69HCW.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  radio           1    wreg     PTR struct RFM69HCW
  3323 ;;		 -> main@radio(75), 
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  radio           1    3[BANK0 ] PTR struct RFM69HCW
  3326 ;;		 -> main@radio(75), 
  3327 ;;  msg             2    4[BANK0 ] unsigned char [2]
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      unsigned char 
  3330 ;; Registers used:
  3331 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3338 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3339 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3340 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3341 ;;Total ram usage:        5 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    2
  3344 ;; This function calls:
  3345 ;;		_sendBulk
  3346 ;; This function is called by:
  3347 ;;		_main
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           
  3352                           ;psect for function _getRSSI
  3353  0417                     _getRSSI:	
  3354                           
  3355                           ;incstack = 0
  3356                           ; Regs used in _getRSSI: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3357                           ;getRSSI@radio stored from wreg
  3358  0417  0020               	movlb	0	; select bank0
  3359  0418  00CF               	movwf	getRSSI@radio
  3360                           
  3361                           ;RFM69HCW.c: 137:     byte msg[]={0x24, 0x0};
  3362  0419  0839               	movf	getRSSI@F9452+1,w
  3363  041A  00D1               	movwf	getRSSI@msg+1
  3364  041B  0838               	movf	getRSSI@F9452,w
  3365  041C  00D0               	movwf	getRSSI@msg
  3366                           
  3367                           ;RFM69HCW.c: 138:     sendBulk(radio, msg, 2);
  3368  041D  3050               	movlw	(low (getRSSI@msg| 0))& (0+255)
  3369  041E  00FC               	movwf	??_getRSSI
  3370  041F  087C               	movf	??_getRSSI,w
  3371  0420  00F6               	movwf	sendBulk@msgs
  3372  0421  3002               	movlw	2
  3373  0422  00FD               	movwf	??_getRSSI+1
  3374  0423  087D               	movf	??_getRSSI+1,w
  3375  0424  00F7               	movwf	sendBulk@len
  3376  0425  084F               	movf	getRSSI@radio,w
  3377  0426  3187  2709         	fcall	_sendBulk
  3378                           
  3379                           ;RFM69HCW.c: 139:     return msg[1];
  3380  0428  0020               	movlb	0	; select bank0
  3381  0429  0851               	movf	getRSSI@msg+1,w
  3382  042A  0008               	return
  3383  042B                     __end_of_getRSSI:	
  3384                           
  3385                           	psect	text21
  3386  0403                     __ptext21:	
  3387 ;; *************** function _getOperatingMode *****************
  3388 ;; Defined at:
  3389 ;;		line 154 in file "RFM69HCW.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  radio           1    wreg     PTR struct RFM69HCW
  3392 ;;		 -> main@radio(75), 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  radio           1    3[BANK0 ] PTR struct RFM69HCW
  3395 ;;		 -> main@radio(75), 
  3396 ;;  msg             2    4[BANK0 ] unsigned char [2]
  3397 ;; Return value:  Size  Location     Type
  3398 ;;                  1    wreg      unsigned char 
  3399 ;; Registers used:
  3400 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3407 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3408 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3409 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3410 ;;Total ram usage:        5 bytes
  3411 ;; Hardware stack levels used:    1
  3412 ;; Hardware stack levels required when called:    2
  3413 ;; This function calls:
  3414 ;;		_sendBulk
  3415 ;; This function is called by:
  3416 ;;		_main
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           
  3421                           ;psect for function _getOperatingMode
  3422  0403                     _getOperatingMode:	
  3423                           
  3424                           ;incstack = 0
  3425                           ; Regs used in _getOperatingMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3426                           ;getOperatingMode@radio stored from wreg
  3427  0403  0020               	movlb	0	; select bank0
  3428  0404  00CF               	movwf	getOperatingMode@radio
  3429                           
  3430                           ;RFM69HCW.c: 155:     byte msg[]={0x01, 0x0};
  3431  0405  0833               	movf	getOperatingMode@F9464+1,w
  3432  0406  00D1               	movwf	getOperatingMode@msg+1
  3433  0407  0832               	movf	getOperatingMode@F9464,w
  3434  0408  00D0               	movwf	getOperatingMode@msg
  3435                           
  3436                           ;RFM69HCW.c: 156:     sendBulk(radio, msg, 2);
  3437  0409  3050               	movlw	(low (getOperatingMode@msg| 0))& (0+255)
  3438  040A  00FC               	movwf	??_getOperatingMode
  3439  040B  087C               	movf	??_getOperatingMode,w
  3440  040C  00F6               	movwf	sendBulk@msgs
  3441  040D  3002               	movlw	2
  3442  040E  00FD               	movwf	??_getOperatingMode+1
  3443  040F  087D               	movf	??_getOperatingMode+1,w
  3444  0410  00F7               	movwf	sendBulk@len
  3445  0411  084F               	movf	getOperatingMode@radio,w
  3446  0412  3187  2709         	fcall	_sendBulk
  3447                           
  3448                           ;RFM69HCW.c: 157:     return msg[1];
  3449  0414  0020               	movlb	0	; select bank0
  3450  0415  0851               	movf	getOperatingMode@msg+1,w
  3451  0416  0008               	return
  3452  0417                     __end_of_getOperatingMode:	
  3453                           
  3454                           	psect	text22
  3455  03EF                     __ptext22:	
  3456 ;; *************** function _getModeFlags *****************
  3457 ;; Defined at:
  3458 ;;		line 166 in file "RFM69HCW.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;  radio           1    wreg     PTR struct RFM69HCW
  3461 ;;		 -> main@radio(75), 
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;  radio           1    3[BANK0 ] PTR struct RFM69HCW
  3464 ;;		 -> main@radio(75), 
  3465 ;;  msg             2    4[BANK0 ] unsigned char [2]
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      unsigned char 
  3468 ;; Registers used:
  3469 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3476 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3477 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3478 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3479 ;;Total ram usage:        5 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:    2
  3482 ;; This function calls:
  3483 ;;		_sendBulk
  3484 ;; This function is called by:
  3485 ;;		_main
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           
  3490                           ;psect for function _getModeFlags
  3491  03EF                     _getModeFlags:	
  3492                           
  3493                           ;incstack = 0
  3494                           ; Regs used in _getModeFlags: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3495                           ;getModeFlags@radio stored from wreg
  3496  03EF  0020               	movlb	0	; select bank0
  3497  03F0  00CF               	movwf	getModeFlags@radio
  3498                           
  3499                           ;RFM69HCW.c: 167:     byte msg[]={0x27, 0x0};
  3500  03F1  0831               	movf	getModeFlags@F9473+1,w
  3501  03F2  00D1               	movwf	getModeFlags@msg+1
  3502  03F3  0830               	movf	getModeFlags@F9473,w
  3503  03F4  00D0               	movwf	getModeFlags@msg
  3504                           
  3505                           ;RFM69HCW.c: 168:     sendBulk(radio, msg, 2);
  3506  03F5  3050               	movlw	(low (getModeFlags@msg| 0))& (0+255)
  3507  03F6  00FC               	movwf	??_getModeFlags
  3508  03F7  087C               	movf	??_getModeFlags,w
  3509  03F8  00F6               	movwf	sendBulk@msgs
  3510  03F9  3002               	movlw	2
  3511  03FA  00FD               	movwf	??_getModeFlags+1
  3512  03FB  087D               	movf	??_getModeFlags+1,w
  3513  03FC  00F7               	movwf	sendBulk@len
  3514  03FD  084F               	movf	getModeFlags@radio,w
  3515  03FE  3187  2709         	fcall	_sendBulk
  3516                           
  3517                           ;RFM69HCW.c: 169:     return msg[1];
  3518  0400  0020               	movlb	0	; select bank0
  3519  0401  0851               	movf	getModeFlags@msg+1,w
  3520  0402  0008               	return
  3521  0403                     __end_of_getModeFlags:	
  3522                           
  3523                           	psect	text23
  3524  03DB                     __ptext23:	
  3525 ;; *************** function _getFifoFlags *****************
  3526 ;; Defined at:
  3527 ;;		line 142 in file "RFM69HCW.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;  radio           1    wreg     PTR struct RFM69HCW
  3530 ;;		 -> main@radio(75), 
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;  radio           1    3[BANK0 ] PTR struct RFM69HCW
  3533 ;;		 -> main@radio(75), 
  3534 ;;  msg             2    4[BANK0 ] unsigned char [2]
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1    wreg      unsigned char 
  3537 ;; Registers used:
  3538 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3545 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3546 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3547 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3548 ;;Total ram usage:        5 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:    2
  3551 ;; This function calls:
  3552 ;;		_sendBulk
  3553 ;; This function is called by:
  3554 ;;		_main
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           
  3559                           ;psect for function _getFifoFlags
  3560  03DB                     _getFifoFlags:	
  3561                           
  3562                           ;incstack = 0
  3563                           ; Regs used in _getFifoFlags: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3564                           ;getFifoFlags@radio stored from wreg
  3565  03DB  0020               	movlb	0	; select bank0
  3566  03DC  00CF               	movwf	getFifoFlags@radio
  3567                           
  3568                           ;RFM69HCW.c: 143:     byte msg[]={0x28, 0x0};
  3569  03DD  0837               	movf	getFifoFlags@F9456+1,w
  3570  03DE  00D1               	movwf	getFifoFlags@msg+1
  3571  03DF  0836               	movf	getFifoFlags@F9456,w
  3572  03E0  00D0               	movwf	getFifoFlags@msg
  3573                           
  3574                           ;RFM69HCW.c: 144:     sendBulk(radio, msg, 2);
  3575  03E1  3050               	movlw	(low (getFifoFlags@msg| 0))& (0+255)
  3576  03E2  00FC               	movwf	??_getFifoFlags
  3577  03E3  087C               	movf	??_getFifoFlags,w
  3578  03E4  00F6               	movwf	sendBulk@msgs
  3579  03E5  3002               	movlw	2
  3580  03E6  00FD               	movwf	??_getFifoFlags+1
  3581  03E7  087D               	movf	??_getFifoFlags+1,w
  3582  03E8  00F7               	movwf	sendBulk@len
  3583  03E9  084F               	movf	getFifoFlags@radio,w
  3584  03EA  3187  2709         	fcall	_sendBulk
  3585                           
  3586                           ;RFM69HCW.c: 145:     return msg[1];
  3587  03EC  0020               	movlb	0	; select bank0
  3588  03ED  0851               	movf	getFifoFlags@msg+1,w
  3589  03EE  0008               	return
  3590  03EF                     __end_of_getFifoFlags:	
  3591                           
  3592                           	psect	text24
  3593  0709                     __ptext24:	
  3594 ;; *************** function _sendBulk *****************
  3595 ;; Defined at:
  3596 ;;		line 15 in file "RFM69HCW.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;  radio           1    wreg     PTR struct RFM69HCW
  3599 ;;		 -> main@radio(75), 
  3600 ;;  msgs            1    6[COMMON] PTR unsigned char 
  3601 ;;		 -> setAutoMode@msg(2), getPowerSettings@msg(2), restartRx@msg(2), startRSSISampling@msg(2), 
  3602 ;;		 -> checkRSSISampling@msg(2), getModeFlags@msg(2), setDiodeMapping@msg(2), getOperatingMode@msg(2), 
  3603 ;;		 -> getRSSIThreshold@msg(2), getFifoFlags@msg(2), getRSSI@msg(2), setPowerOutput@msg(2), 
  3604 ;;		 -> setPreambleLength@msg(2), checkForPayload@flags(2), setModulationThreshold@msg(2), setOperatingMode@msg(2), 
  3605 ;;		 -> setPacketFormat@msg(2), setRSSIThreshold@msg(2), setNodeAddress@msg(2), setPacketLength@msg(2), 
  3606 ;;		 -> setSyncWords@msg(10), sendPairs@msg(2), 
  3607 ;;  len             1    7[COMMON] const unsigned char 
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;  radio           1    2[BANK0 ] PTR struct RFM69HCW
  3610 ;;		 -> main@radio(75), 
  3611 ;;  i               2    0[BANK0 ] int 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      void 
  3614 ;; Registers used:
  3615 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3621 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3622 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3623 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3624 ;;      Totals:         6       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3625 ;;Total ram usage:        9 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; Hardware stack levels required when called:    1
  3628 ;; This function calls:
  3629 ;;		_send
  3630 ;;		_setPinWithMask
  3631 ;; This function is called by:
  3632 ;;		_sendPairs
  3633 ;;		_setSyncWords
  3634 ;;		_setPacketLength
  3635 ;;		_setNodeAddress
  3636 ;;		_setRSSIThreshold
  3637 ;;		_setPacketFormat
  3638 ;;		_setOperatingMode
  3639 ;;		_setModulationThreshold
  3640 ;;		_setPreambleLength
  3641 ;;		_setPowerOutput
  3642 ;;		_getRSSI
  3643 ;;		_getFifoFlags
  3644 ;;		_getOperatingMode
  3645 ;;		_setDiodeMapping
  3646 ;;		_getModeFlags
  3647 ;;		_setAutoMode
  3648 ;;		_checkForPayload
  3649 ;;		_getRSSIThreshold
  3650 ;;		_checkRSSISampling
  3651 ;;		_startRSSISampling
  3652 ;;		_restartRx
  3653 ;;		_getPowerSettings
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           
  3658                           ;psect for function _sendBulk
  3659  0709                     _sendBulk:	
  3660                           
  3661                           ;incstack = 0
  3662                           ; Regs used in _sendBulk: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3663                           ;sendBulk@radio stored from wreg
  3664  0709  0020               	movlb	0	; select bank0
  3665  070A  00CE               	movwf	sendBulk@radio
  3666                           
  3667                           ;RFM69HCW.c: 16:     setPinWithMask(radio->SSport, radio->SSbit, 0);
  3668  070B  084E               	movf	sendBulk@radio,w
  3669  070C  3E28               	addlw	40
  3670  070D  0086               	movwf	6
  3671  070E  0187               	clrf	7
  3672  070F  3F40               	moviw [0]fsr1
  3673  0710  00F0               	movwf	setPinWithMask@pPort
  3674  0711  3F41               	moviw [1]fsr1
  3675  0712  00F1               	movwf	setPinWithMask@pPort+1
  3676  0713  084E               	movf	sendBulk@radio,w
  3677  0714  3E2A               	addlw	42
  3678  0715  0086               	movwf	6
  3679  0716  0187               	clrf	7
  3680  0717  0801               	movf	1,w
  3681  0718  00F8               	movwf	??_sendBulk
  3682  0719  0878               	movf	??_sendBulk,w
  3683  071A  00F2               	movwf	setPinWithMask@iPin
  3684  071B  01F3               	clrf	setPinWithMask@value
  3685  071C  3185  252D  3187   	fcall	_setPinWithMask
  3686                           
  3687                           ;RFM69HCW.c: 17:     for(int i=0; i<len; i++){
  3688  071F  0020               	movlb	0	; select bank0
  3689  0720  01CC               	clrf	sendBulk@i
  3690  0721  01CD               	clrf	sendBulk@i+1
  3691  0722  0877               	movf	sendBulk@len,w
  3692  0723  1903               	btfsc	3,2
  3693  0724  2F4D               	goto	l1123
  3694  0725                     l1117:	
  3695                           
  3696                           ;RFM69HCW.c: 18:         msgs[i]=send(radio, msgs[i]);
  3697  0725  0020               	movlb	0	; select bank0
  3698  0726  084C               	movf	sendBulk@i,w
  3699  0727  0776               	addwf	sendBulk@msgs,w
  3700  0728  00F8               	movwf	??_sendBulk
  3701  0729  0878               	movf	??_sendBulk,w
  3702  072A  0086               	movwf	6
  3703  072B  0187               	clrf	7
  3704  072C  0801               	movf	1,w
  3705  072D  00F9               	movwf	??_sendBulk+1
  3706  072E  0879               	movf	??_sendBulk+1,w
  3707  072F  00F0               	movwf	send@msg
  3708  0730  084E               	movf	sendBulk@radio,w
  3709  0731  3186  2622  3187   	fcall	_send
  3710  0734  00FA               	movwf	??_sendBulk+2
  3711  0735  0020               	movlb	0	; select bank0
  3712  0736  084C               	movf	sendBulk@i,w
  3713  0737  0776               	addwf	sendBulk@msgs,w
  3714  0738  00FB               	movwf	??_sendBulk+3
  3715  0739  087B               	movf	??_sendBulk+3,w
  3716  073A  0086               	movwf	6
  3717  073B  0187               	clrf	7
  3718  073C  087A               	movf	??_sendBulk+2,w
  3719  073D  0081               	movwf	1
  3720                           
  3721                           ;RFM69HCW.c: 19:     }
  3722  073E  3001               	movlw	1
  3723  073F  07CC               	addwf	sendBulk@i,f
  3724  0740  3000               	movlw	0
  3725  0741  3DCD               	addwfc	sendBulk@i+1,f
  3726  0742  084D               	movf	sendBulk@i+1,w
  3727  0743  3A80               	xorlw	128
  3728  0744  00F8               	movwf	??_sendBulk
  3729  0745  3080               	movlw	128
  3730  0746  0278               	subwf	??_sendBulk,w
  3731  0747  1D03               	skipz
  3732  0748  2F4B               	goto	u235
  3733  0749  0877               	movf	sendBulk@len,w
  3734  074A  024C               	subwf	sendBulk@i,w
  3735  074B                     u235:	
  3736  074B  1C03               	skipc
  3737  074C  2F25               	goto	l1117
  3738  074D                     l1123:	
  3739                           
  3740                           ;RFM69HCW.c: 20:     setPinWithMask(radio->SSport, radio->SSbit,1);
  3741  074D  0020               	movlb	0	; select bank0
  3742  074E  084E               	movf	sendBulk@radio,w
  3743  074F  3E28               	addlw	40
  3744  0750  0086               	movwf	6
  3745  0751  0187               	clrf	7
  3746  0752  3F40               	moviw [0]fsr1
  3747  0753  00F0               	movwf	setPinWithMask@pPort
  3748  0754  3F41               	moviw [1]fsr1
  3749  0755  00F1               	movwf	setPinWithMask@pPort+1
  3750  0756  084E               	movf	sendBulk@radio,w
  3751  0757  3E2A               	addlw	42
  3752  0758  0086               	movwf	6
  3753  0759  0187               	clrf	7
  3754  075A  0801               	movf	1,w
  3755  075B  00F8               	movwf	??_sendBulk
  3756  075C  0878               	movf	??_sendBulk,w
  3757  075D  00F2               	movwf	setPinWithMask@iPin
  3758  075E  01F3               	clrf	setPinWithMask@value
  3759  075F  0AF3               	incf	setPinWithMask@value,f
  3760  0760  3185  252D         	fcall	_setPinWithMask
  3761  0762  0008               	return
  3762  0763                     __end_of_sendBulk:	
  3763                           
  3764                           	psect	text25
  3765  052D                     __ptext25:	
  3766 ;; *************** function _setPinWithMask *****************
  3767 ;; Defined at:
  3768 ;;		line 40 in file "RFM69HCW.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  pPort           2    0[COMMON] PTR unsigned char 
  3771 ;;		 -> PORTA(1), 
  3772 ;;  iPin            1    2[COMMON] unsigned char 
  3773 ;;  value           1    3[COMMON] unsigned char 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;		None
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      void 
  3778 ;; Registers used:
  3779 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3785 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3787 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3788 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3789 ;;Total ram usage:        6 bytes
  3790 ;; Hardware stack levels used:    1
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_sendBulk
  3795 ;;		_receivePayload
  3796 ;;		_sendPayload
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           
  3801                           ;psect for function _setPinWithMask
  3802  052D                     _setPinWithMask:	
  3803                           
  3804                           ;RFM69HCW.c: 41:     if(value==0){
  3805                           
  3806                           ;incstack = 0
  3807                           ; Regs used in _setPinWithMask: [wreg+fsr1l+fsr1h+status,2+status,0]
  3808  052D  0873               	movf	setPinWithMask@value,w
  3809  052E  1D03               	btfss	3,2
  3810  052F  2D41               	goto	l1095
  3811                           
  3812                           ;RFM69HCW.c: 42:        *pPort &= ~(1<<iPin);
  3813  0530  3001               	movlw	1
  3814  0531  00F4               	movwf	??_setPinWithMask
  3815  0532  0A72               	incf	setPinWithMask@iPin,w
  3816  0533  2D35               	goto	u174
  3817  0534                     u175:	
  3818  0534  35F4               	lslf	??_setPinWithMask,f
  3819  0535                     u174:	
  3820  0535  0B89               	decfsz	9,f
  3821  0536  2D34               	goto	u175
  3822  0537  0874               	movf	??_setPinWithMask,w
  3823  0538  3AFF               	xorlw	255
  3824  0539  00F5               	movwf	??_setPinWithMask+1
  3825  053A  0870               	movf	setPinWithMask@pPort,w
  3826  053B  0086               	movwf	6
  3827  053C  0871               	movf	setPinWithMask@pPort+1,w
  3828  053D  0087               	movwf	7
  3829  053E  0875               	movf	??_setPinWithMask+1,w
  3830  053F  0581               	andwf	1,f
  3831                           
  3832                           ;RFM69HCW.c: 43:     }else{
  3833  0540  0008               	return
  3834  0541                     l1095:	
  3835                           
  3836                           ;RFM69HCW.c: 44:        *pPort |= 1 << iPin;
  3837  0541  3001               	movlw	1
  3838  0542  00F4               	movwf	??_setPinWithMask
  3839  0543  0A72               	incf	setPinWithMask@iPin,w
  3840  0544  2D46               	goto	u184
  3841  0545                     u185:	
  3842  0545  35F4               	lslf	??_setPinWithMask,f
  3843  0546                     u184:	
  3844  0546  0B89               	decfsz	9,f
  3845  0547  2D45               	goto	u185
  3846  0548  0874               	movf	??_setPinWithMask,w
  3847  0549  00F5               	movwf	??_setPinWithMask+1
  3848  054A  0870               	movf	setPinWithMask@pPort,w
  3849  054B  0086               	movwf	6
  3850  054C  0871               	movf	setPinWithMask@pPort+1,w
  3851  054D  0087               	movwf	7
  3852  054E  0875               	movf	??_setPinWithMask+1,w
  3853  054F  0481               	iorwf	1,f
  3854  0550  0008               	return
  3855  0551                     __end_of_setPinWithMask:	
  3856                           
  3857                           	psect	text26
  3858  0622                     __ptext26:	
  3859 ;; *************** function _send *****************
  3860 ;; Defined at:
  3861 ;;		line 24 in file "RFM69HCW.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;  radio           1    wreg     PTR struct RFM69HCW
  3864 ;;		 -> main@radio(75), 
  3865 ;;  msg             1    0[COMMON] unsigned char 
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;  radio           1    3[COMMON] PTR struct RFM69HCW
  3868 ;;		 -> main@radio(75), 
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      unsigned char 
  3871 ;; Registers used:
  3872 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3878 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3880 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3881 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3882 ;;Total ram usage:        4 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; This function calls:
  3885 ;;		Nothing
  3886 ;; This function is called by:
  3887 ;;		_sendBulk
  3888 ;;		_receivePayload
  3889 ;;		_sendPayload
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           
  3894                           ;psect for function _send
  3895  0622                     _send:	
  3896                           
  3897                           ;incstack = 0
  3898                           ; Regs used in _send: [wreg+fsr1l+fsr1h+status,2+status,0]
  3899                           ;send@radio stored from wreg
  3900  0622  00F3               	movwf	send@radio
  3901  0623                     l1097:	
  3902                           ;RFM69HCW.c: 26:     while(SSP1CONbits.WCOL){
  3903                           
  3904                           
  3905                           ;RFM69HCW.c: 25:     SSP1BUF=msg;
  3906  0623  0870               	movf	send@msg,w
  3907  0624  0024               	movlb	4	; select bank4
  3908  0625  0091               	movwf	17	;volatile
  3909                           
  3910                           ;RFM69HCW.c: 26:     while(SSP1CONbits.WCOL){
  3911  0626  1F95               	btfss	21,7	;volatile
  3912  0627  2E2A               	goto	l123
  3913                           
  3914                           ;RFM69HCW.c: 27:             SSP1CONbits.WCOL=0;
  3915  0628  1395               	bcf	21,7	;volatile
  3916  0629  2E23               	goto	l1097
  3917  062A                     l123:	
  3918  062A  1C14               	btfss	20,0	;volatile
  3919  062B  2E2A               	goto	l123
  3920                           
  3921                           ;RFM69HCW.c: 31:     radio->sent[radio->sendReceiveIndex]=msg;
  3922  062C  0870               	movf	send@msg,w
  3923  062D  00F1               	movwf	??_send
  3924  062E  0873               	movf	send@radio,w
  3925  062F  3E4A               	addlw	74
  3926  0630  0086               	movwf	6
  3927  0631  0187               	clrf	7
  3928  0632  0801               	movf	1,w
  3929  0633  0773               	addwf	send@radio,w
  3930  0634  00F2               	movwf	??_send+1
  3931  0635  0872               	movf	??_send+1,w
  3932  0636  3E14               	addlw	20
  3933  0637  0086               	movwf	6
  3934  0638  0187               	clrf	7
  3935  0639  0871               	movf	??_send,w
  3936  063A  0081               	movwf	1
  3937                           
  3938                           ;RFM69HCW.c: 32:     radio->sendReceiveIndex++;
  3939  063B  3001               	movlw	1
  3940  063C  00F1               	movwf	??_send
  3941  063D  0873               	movf	send@radio,w
  3942  063E  3E4A               	addlw	74
  3943  063F  0086               	movwf	6
  3944  0640  0187               	clrf	7
  3945  0641  0871               	movf	??_send,w
  3946  0642  0781               	addwf	1,f
  3947                           
  3948                           ;RFM69HCW.c: 33:     if(radio->sendReceiveIndex>(20 -1)){
  3949  0643  0873               	movf	send@radio,w
  3950  0644  3E4A               	addlw	74
  3951  0645  0086               	movwf	6
  3952  0646  0187               	clrf	7
  3953  0647  3014               	movlw	20
  3954  0648  0201               	subwf	1,w
  3955  0649  1C03               	skipc
  3956  064A  2E50               	goto	l126
  3957                           
  3958                           ;RFM69HCW.c: 34:         radio->sendReceiveIndex=0;
  3959  064B  0873               	movf	send@radio,w
  3960  064C  3E4A               	addlw	74
  3961  064D  0086               	movwf	6
  3962  064E  0187               	clrf	7
  3963  064F  0181               	clrf	1
  3964  0650                     l126:	
  3965                           ;RFM69HCW.c: 35:     }
  3966                           
  3967                           
  3968                           ;RFM69HCW.c: 36:     radio->received[radio->sendReceiveIndex]=SSP1BUF;
  3969  0650  0811               	movf	17,w	;volatile
  3970  0651  00F1               	movwf	??_send
  3971  0652  0873               	movf	send@radio,w
  3972  0653  3E4A               	addlw	74
  3973  0654  0086               	movwf	6
  3974  0655  0187               	clrf	7
  3975  0656  0801               	movf	1,w
  3976  0657  0773               	addwf	send@radio,w
  3977  0658  00F2               	movwf	??_send+1
  3978  0659  0872               	movf	??_send+1,w
  3979  065A  0086               	movwf	6
  3980  065B  0187               	clrf	7
  3981  065C  0871               	movf	??_send,w
  3982  065D  0081               	movwf	1
  3983                           
  3984                           ;RFM69HCW.c: 37:     return radio->received[radio->sendReceiveIndex];
  3985  065E  0873               	movf	send@radio,w
  3986  065F  3E4A               	addlw	74
  3987  0660  0086               	movwf	6
  3988  0661  0187               	clrf	7
  3989  0662  0801               	movf	1,w
  3990  0663  0773               	addwf	send@radio,w
  3991  0664  00F1               	movwf	??_send
  3992  0665  0871               	movf	??_send,w
  3993  0666  0086               	movwf	6
  3994  0667  0187               	clrf	7
  3995  0668  0801               	movf	1,w
  3996  0669  0008               	return
  3997  066A                     __end_of_send:	
  3998  007E                     btemp	set	126	;btemp
  3999  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        119
    BSS         21
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     19      80
    BANK1            80     75      79
    BANK2            80      0      75
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    getPowerSettings@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    restartRx@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    startRSSISampling@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    checkRSSISampling@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    getRSSIThreshold@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    checkForPayload@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    getOperatingMode@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    getModeFlags@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    getFifoFlags@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    getRSSI@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setOperatingMode@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setAutoMode@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setDiodeMapping@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setPowerOutput@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    initRadio@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setPreambleLength@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setModulationThreshold@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setRecommendedParams@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setPacketFormat@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    sendPairs@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setAutoMode@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    getModeFlags@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    setDiodeMapping@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    getOperatingMode@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    getFifoFlags@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    getRSSI@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    sendPayload@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setPowerOutput@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    initRadio@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    setPreambleLength@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    receivePayload@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    receivePayload@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    setModulationThreshold@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    setRecommendedParams@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    setOperatingMode@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    setPacketFormat@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    setRSSIThreshold@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setRSSIThreshold@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    setNodeAddress@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setNodeAddress@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    setPacketLength@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setPacketLength@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    setSyncWords@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setSyncWords@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    setPinWithMask@pPort	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    send@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    send@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    sendBulk@msgs	PTR unsigned char  size(1) Largest target is 10
		 -> setAutoMode@msg(BANK0[2]), getPowerSettings@msg(COMMON[2]), restartRx@msg(COMMON[2]), startRSSISampling@msg(COMMON[2]), 
		 -> checkRSSISampling@msg(COMMON[2]), getModeFlags@msg(BANK0[2]), setDiodeMapping@msg(BANK0[2]), getOperatingMode@msg(BANK0[2]), 
		 -> getRSSIThreshold@msg(COMMON[2]), getFifoFlags@msg(BANK0[2]), getRSSI@msg(BANK0[2]), setPowerOutput@msg(BANK0[2]), 
		 -> setPreambleLength@msg(BANK0[2]), checkForPayload@flags(COMMON[2]), setModulationThreshold@msg(BANK0[2]), setOperatingMode@msg(BANK0[2]), 
		 -> setPacketFormat@msg(BANK0[2]), setRSSIThreshold@msg(BANK0[2]), setNodeAddress@msg(BANK0[2]), setPacketLength@msg(BANK0[2]), 
		 -> setSyncWords@msg(BANK0[10]), sendPairs@msg(BANK0[2]), 

    sendBulk@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    sendBulk@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    sendPairs@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    sendPairs@msgs	PTR unsigned char  size(1) Largest target is 10
		 -> recommended_params(BANK0[10]), 

    radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    S139RFM69HCW$SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    F9389.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_getFifoFlags
    _main->_getModeFlags
    _main->_getOperatingMode
    _main->_getRSSI
    _setPowerOutput->_sendBulk
    _setOperatingMode->_sendBulk
    _setDiodeMapping->_sendBulk
    _setAutoMode->_sendBulk
    _receivePayload->_setPinWithMask
    _initRadio->_setModulationThreshold
    _initRadio->_setNodeAddress
    _initRadio->_setPacketFormat
    _initRadio->_setPacketLength
    _initRadio->_setPreambleLength
    _initRadio->_setRSSIThreshold
    _initRadio->_setSyncWords
    _setSyncWords->_sendBulk
    _setRecommendedParams->_sendPairs
    _sendPairs->_sendBulk
    _setRSSIThreshold->_sendBulk
    _setPreambleLength->_sendBulk
    _setPacketLength->_sendBulk
    _setPacketFormat->_sendBulk
    _setNodeAddress->_sendBulk
    _setModulationThreshold->_sendBulk
    _init->_rfmSetup
    _rfmSetup->_resetRadio
    _getRSSI->_sendBulk
    _getOperatingMode->_sendBulk
    _getModeFlags->_sendBulk
    _getFifoFlags->_sendBulk
    _sendBulk->_setPinWithMask

Critical Paths under _main in BANK0

    _main->_initRadio
    _setPowerOutput->_sendBulk
    _setOperatingMode->_sendBulk
    _setDiodeMapping->_sendBulk
    _setAutoMode->_sendBulk
    _initRadio->_setSyncWords
    _setSyncWords->_sendBulk
    _setRecommendedParams->_sendPairs
    _sendPairs->_sendBulk
    _setRSSIThreshold->_sendBulk
    _setPreambleLength->_sendBulk
    _setPacketLength->_sendBulk
    _setPacketFormat->_sendBulk
    _setNodeAddress->_sendBulk
    _setModulationThreshold->_sendBulk
    _getRSSI->_sendBulk
    _getOperatingMode->_sendBulk
    _getModeFlags->_sendBulk
    _getFifoFlags->_sendBulk

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                77    77      0  111916
                                             17 BANK0      2     2      0
                                              0 BANK1     75    75      0
                       _getFifoFlags
                       _getModeFlags
                   _getOperatingMode
                            _getRSSI
                               _init
                          _initRadio
                     _receivePayload
                        _setAutoMode
                    _setDiodeMapping
                   _setOperatingMode
                     _setPowerOutput
 ---------------------------------------------------------------------------------
 (1) _setPowerOutput                                       6     5      1    6849
                                             12 COMMON     1     0      1
                                              3 BANK0      5     5      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (1) _setOperatingMode                                     6     5      1    6849
                                             12 COMMON     1     0      1
                                              3 BANK0      5     5      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (1) _setDiodeMapping                                      6     5      1    6849
                                             12 COMMON     1     0      1
                                              3 BANK0      5     5      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (1) _setAutoMode                                          6     5      1    6849
                                             12 COMMON     1     0      1
                                              3 BANK0      5     5      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (1) _receivePayload                                       5     5      0    2542
                                              6 COMMON     5     5      0
                               _send
                     _setPinWithMask
 ---------------------------------------------------------------------------------
 (1) _initRadio                                            1     1      0   54728
                                             16 BANK0      1     1      0
             _setModulationThreshold
                     _setNodeAddress
                    _setPacketFormat
                    _setPacketLength
                  _setPreambleLength
                   _setRSSIThreshold
               _setRecommendedParams
                       _setSyncWords
 ---------------------------------------------------------------------------------
 (2) _setSyncWords                                        15    15      0    6886
                                             12 COMMON     2     2      0
                                              3 BANK0     13    13      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _setRecommendedParams                                 2     2      0    7136
                                             11 BANK0      2     2      0
                          _sendPairs
 ---------------------------------------------------------------------------------
 (3) _sendPairs                                           10     7      3    7081
                                             12 COMMON     2     2      0
                                              3 BANK0      8     5      3
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _setRSSIThreshold                                     5     5      0    6773
                                             12 COMMON     2     2      0
                                              3 BANK0      3     3      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _setPreambleLength                                    5     5      0    6726
                                             12 COMMON     2     2      0
                                              3 BANK0      3     3      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _setPacketLength                                      5     5      0    6773
                                             12 COMMON     2     2      0
                                              3 BANK0      3     3      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _setPacketFormat                                      5     5      0    6726
                                             12 COMMON     2     2      0
                                              3 BANK0      3     3      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _setNodeAddress                                       5     5      0    6773
                                             12 COMMON     2     2      0
                                              3 BANK0      3     3      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _setModulationThreshold                               5     5      0    6726
                                             12 COMMON     2     2      0
                                              3 BANK0      3     3      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                           _rfmSetup
 ---------------------------------------------------------------------------------
 (2) _rfmSetup                                             1     1      0       0
                                              1 COMMON     1     1      0
                         _resetRadio
                    _spi_init_master
 ---------------------------------------------------------------------------------
 (3) _spi_init_master                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _resetRadio                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _getRSSI                                              5     5      0    6750
                                             12 COMMON     2     2      0
                                              3 BANK0      3     3      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (1) _getOperatingMode                                     5     5      0    6750
                                             12 COMMON     2     2      0
                                              3 BANK0      3     3      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (1) _getModeFlags                                         5     5      0    6750
                                             12 COMMON     2     2      0
                                              3 BANK0      3     3      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (1) _getFifoFlags                                         5     5      0    6750
                                             12 COMMON     2     2      0
                                              3 BANK0      3     3      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _sendBulk                                             9     7      2    6645
                                              6 COMMON     6     4      2
                                              0 BANK0      3     3      0
                               _send
                     _setPinWithMask
 ---------------------------------------------------------------------------------
 (3) _setPinWithMask                                       6     2      4    1478
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _send                                                 4     3      1     809
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getFifoFlags
     _sendBulk
       _send
       _setPinWithMask
   _getModeFlags
     _sendBulk
       _send
       _setPinWithMask
   _getOperatingMode
     _sendBulk
       _send
       _setPinWithMask
   _getRSSI
     _sendBulk
       _send
       _setPinWithMask
   _init
     _rfmSetup
       _resetRadio
       _spi_init_master
   _initRadio
     _setModulationThreshold
       _sendBulk
         _send
         _setPinWithMask
     _setNodeAddress
       _sendBulk
         _send
         _setPinWithMask
     _setPacketFormat
       _sendBulk
         _send
         _setPinWithMask
     _setPacketLength
       _sendBulk
         _send
         _setPinWithMask
     _setPreambleLength
       _sendBulk
         _send
         _setPinWithMask
     _setRSSIThreshold
       _sendBulk
         _send
         _setPinWithMask
     _setRecommendedParams
       _sendPairs
         _sendBulk
           _send
           _setPinWithMask
     _setSyncWords
       _sendBulk
         _send
         _setPinWithMask
   _receivePayload
     _send
     _setPinWithMask
   _setAutoMode
     _sendBulk
       _send
       _setPinWithMask
   _setDiodeMapping
     _sendBulk
       _send
       _setPinWithMask
   _setOperatingMode
     _sendBulk
       _send
       _setPinWithMask
   _setPowerOutput
     _sendBulk
       _send
       _setPinWithMask

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4B      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4B       9       93.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      F8      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F8      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Jul 15 17:14:07 2021

                    __CFG_CP$OFF 0000                       _SYNC_WORDS 0020                     _RSSISampling 006F  
                            l123 062A                              l126 0650               setPacketFormat@msg 004F  
             setPacketLength@msg 004F                              u235 074B                              u245 05EF  
                            u317 07CE                              u174 0535                              u175 0534  
                            u327 0527                              u255 061F                              u184 0546  
                            u280 0774                              u185 0545                              u337 0430  
                            u265 05D1                              u347 043A                              u275 06DE  
                   __CFG_BORV$LO 0000                              wreg 0009                     __CFG_IESO$ON 0000  
         _setModulationThreshold 03A5                     __CFG_LVP$OFF 0000                     __CFG_ZCD$OFF 0000  
                           l1123 074D                             l1117 0725                             l1161 05F1  
                           l1321 06F4                             l1095 0541                             l1191 05B4  
                           l1319 06D1                             l1097 0623                             l1339 07A0  
                           _RSSI 00ED                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
                           _main 0763                             _init 0388                             _send 0622  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                    __CFG_BOREN$ON 0000                             start 0002  
           setPacketFormat@F9415 0040                    __CFG_MCLRE$ON 0000             setPacketLength@F9403 006B  
                          ?_main 0070                            ?_init 0070                            ?_send 0070  
                  __CFG_WDTE$OFF 0000             setPacketFormat@radio 0051             setPacketLength@radio 0051  
                          _PORTA 000C                  __end_of_getRSSI 042B          __end_of_setDiodeMapping 0470  
          getOperatingMode@F9464 0032          __size_of_setPowerOutput 0018             __end_of_getFifoFlags 03EF  
                getModeFlags@msg 0050            setOperatingMode@F9420 0065                            status 0003  
                          wtemp0 007E       __size_of_setPreambleLength 0012            getOperatingMode@radio 004F  
                __initialization 07D9                     __end_of_main 07D9                     __end_of_init 038B  
                   __end_of_send 066A            setOperatingMode@radio 0051              setPinWithMask@pPort 0070  
           __end_of_getModeFlags 0403                   _setNodeAddress 04BC              setPinWithMask@value 0073  
         setPreambleLength@F9437 003A                   __CFG_LPBOR$OFF 0000                     ?_setAutoMode 007C  
                         ??_main 005D                           ??_init 0072                           ??_send 0071  
                 __CFG_PLLEN$OFF 0000           setPreambleLength@radio 0051            getRSSIThreshold@F9460 0034  
                         _ANSELA 018C                           _ANSELC 018E                setPowerOutput@msg 0052  
                         _RC0PPS 0EA0                           _RC3PPS 0EA3            setRSSIThreshold@F9411 0067  
                 _setPinWithMask 052D                getFifoFlags@F9456 0036                   __CFG_PWRTE$OFF 0000  
   __end_of_setRecommendedParams 03A5           __end_of_setNodeAddress 04D8            setRSSIThreshold@radio 0051  
       __end_of_setOperatingMode 0488                   __CFG_STVREN$ON 0000                getFifoFlags@radio 004F  
                _setPacketFormat 03B7                  _setPacketLength 04D8                        ??_getRSSI 007C  
               __end_of_rfmSetup 052D                 __end_of_sendBulk 0763                 ?_setDiodeMapping 007C  
               ??_receivePayload 0076           __end_of_setPinWithMask 0551          __end_of__initialization 07FD  
                 __pcstackCOMMON 0070                  ?_setNodeAddress 0070        __size_of_getOperatingMode 0014  
      __size_of_setRSSIThreshold 001C                     __pidataBANK0 057A                     __pidataBANK2 066A  
          getPowerSettings@F9489 0028          ?_setModulationThreshold 0070            __size_of_getFifoFlags 0014  
  setOperatingMode@operatingMode 007C                   _setPowerOutput 0488                  ?_setPinWithMask 0070  
                     __pbssBANK0 005F                       __pbssBANK1 00EB                    sendBulk@radio 004E  
       __size_of_spi_init_master 001C               __size_of_initRadio 0029            __size_of_getModeFlags 0014  
                    sendBulk@len 0077          __end_of_setPacketFormat 03C9          __end_of_setPacketLength 04F4  
                     __pmaintext 0763                  __CFG_PPS1WAY$ON 0000               __size_of_sendPairs 0042  
                   _getFifoFlags 03DB   __end_of_setModulationThreshold 03B7             __size_of_setAutoMode 0018  
                __CFG_WDTCCS$SWC 0000           __end_of_setPowerOutput 04A0                    sendPairs@msgs 004F  
                        _SSP1BUF 0211             _setRecommendedParams 0397                    ?_setSyncWords 0070  
                   _getModeFlags 03EF        setModulationThreshold@msg 004F             setAutoMode@autoModes 007C  
                      ?_rfmSetup 0070                        ?_sendBulk 0076               setDiodeMapping@msg 0052  
            setNodeAddress@F9407 0069                setSyncWords@radio 0059                          _getRSSI 0417  
                        __ptext1 0488                          __ptext2 0470                          __ptext3 0458  
                        __ptext4 0440                          __ptext5 06B5                          __ptext6 0551  
                        __ptext7 05A6                          __ptext8 0397                          __ptext9 05E0  
              getModeFlags@F9473 0030                __end_of_initRadio 057A                  ?_setPowerOutput 007C  
                 initRadio@radio 005C              setNodeAddress@radio 0051            ?_setRecommendedParams 0070  
                     getRSSI@msg 0050                   ??_setSyncWords 007C                          clrloop0 038C  
              __end_of_sendPairs 0622             end_of_initialization 07FD                getModeFlags@radio 004F  
           checkForPayload@F9430 003C                          init_ram 0391                          initloop 0392  
                        send@msg 0070                       ??_rfmSetup 0071                       ??_sendBulk 0078  
                     _resetRadio 042B                 ?_setPacketFormat 0070                 ?_setPacketLength 0070  
              ??_spi_init_master 0070                 _getOperatingMode 0403                 _setRSSIThreshold 04F4  
              ?_setOperatingMode 007C               ??_setOperatingMode 004F                        _PORTCbits 000E  
                      _SSPDATPPS 0E21                 __CFG_FOSC$INTOSC 0000                        _TRISAbits 008C  
                      _TRISCbits 008E           setDiodeMapping@mapping 007C                 ??_setNodeAddress 007C  
           setPreambleLength@msg 004F                  receivePayload@i 0078           checkRSSISampling@F9477 002E  
                getFifoFlags@msg 0050              start_initialization 07D9                 ??_setPinWithMask 0074  
         ??_setRecommendedParams 0057               setPinWithMask@iPin 0072         __size_of_setDiodeMapping 0018  
                    ?_resetRadio 0070           startRSSISampling@F9481 002C                  setSyncWords@msg 004F  
           setDiodeMapping@F9469 0061                setNodeAddress@msg 004F             __end_of_setSyncWords 05E0  
                    __pdataBANK0 0020                      __pdataBANK2 0120             setDiodeMapping@radio 0051  
                      ___latbits 0002                    __pcstackBANK0 004C                    __pcstackBANK1 00A0  
                  setSyncWords@i 005A        setRecommendedParams@radio 0058                     sendBulk@msgs 0076  
        __size_of_receivePayload 0054                __size_of_rfmSetup 001D      setModulationThreshold@F9426 003E  
              __size_of_sendBulk 005A                       sendPairs@i 0055                        _fifoFlags 00EC  
               ??_setPowerOutput 004F                    ??_setAutoMode 004F              receivePayload@radio 007A  
                   sendPairs@len 0050                         ?_getRSSI 0070                     sendPairs@msg 0053  
            setPowerOutput@F9444 0063      setModulationThreshold@radio 0051                   setAutoMode@msg 0052  
            __size_of_resetRadio 0015                        _initRadio 0551         __end_of_getOperatingMode 0417  
       __end_of_setRSSIThreshold 0510                        _modeFlags 00EB                   sendPairs@F9382 006D  
            setPowerOutput@radio 0051                  _spi_init_master 04A0                        _sendPairs 05E0  
                   getRSSI@F9452 0038                    _operatingMode 00EE                        clear_ram0 038B  
                 sendPairs@radio 0052                   restartRx@F9485 002A                        main@F9389 0120  
           __CFG_WDTCPS$WDTCPS1F 0000                ??_setDiodeMapping 004F                     getRSSI@radio 004F  
               setAutoMode@F9494 005F                        main@radio 00A0              __end_of_setAutoMode 0458  
                     ?_initRadio 0070        __size_of_setOperatingMode 0018                 setAutoMode@radio 0051  
            getOperatingMode@msg 0050              setOperatingMode@msg 0052                       ?_sendPairs 004F  
          __size_of_setSyncWords 003A         ??_setModulationThreshold 007C              setRSSIThreshold@msg 004F  
       __size_of_setPacketFormat 0012         __size_of_setPacketLength 001C                 __size_of_getRSSI 0014  
        __end_of_spi_init_master 04BC                        send@radio 0073                        sendBulk@i 004C  
                       __ptext10 04F4                         __ptext11 03C9                         __ptext20 0417  
                       __ptext12 04D8                         __ptext21 0403                         __ptext13 03B7  
                       __ptext22 03EF                         __ptext14 04BC                         __ptext23 03DB  
                       __ptext15 03A5                         __ptext24 0709                         __ptext16 0388  
                       __ptext25 052D                         __ptext17 0510                         __ptext26 0622  
                       __ptext18 04A0                         __ptext19 042B                     _SSP1CON1bits 0215  
                   _setSyncWords 05A6                    __size_of_main 0076                    __size_of_init 0003  
                  __size_of_send 0048                     ??_resetRadio 0070                         _rfmSetup 0510  
           __CFG_WDTCWS$WDTCWSSW 0000                         _sendBulk 0709                   _receivePayload 06B5  
                  ?_getFifoFlags 0070                     _SSP1STATbits 0214                      _setAutoMode 0440  
                    ??_initRadio 007E               __end_of_resetRadio 0440    __size_of_setRecommendedParams 000E  
                  ?_getModeFlags 0070               _recommended_params 0042                      ??_sendPairs 007C  
              __CFG_CLKOUTEN$OFF 0000           __end_of_receivePayload 0709                      _SSP1CONbits 0215  
                     _OSCCONbits 0099      setPowerOutput@powerSettings 007C                _setPreambleLength 03C9  
__size_of_setModulationThreshold 0012                   ??_getFifoFlags 007C               ?_setPreambleLength 0070  
        __size_of_setNodeAddress 001C              ??_setPreambleLength 007C                 ?_spi_init_master 0070  
              ??_setPacketFormat 007C                ??_setPacketLength 007C                 _setOperatingMode 0470  
                 ??_getModeFlags 007C                ?_getOperatingMode 0070                ?_setRSSIThreshold 0070  
             ??_getOperatingMode 007C               ??_setRSSIThreshold 007C                  _setDiodeMapping 0458  
        __size_of_setPinWithMask 0024                  ?_receivePayload 0070        __end_of_setPreambleLength 03DB  
