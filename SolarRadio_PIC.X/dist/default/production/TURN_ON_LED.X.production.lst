

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Jan 01 21:50:49 2021

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1615
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.05
    42                           ; Generated 20/12/2018 GMT
    43                           ; 
    44                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F1615 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000E                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  008C                     	;# 
   109  008E                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010E                     	;# 
   128  0111                     	;# 
   129  0112                     	;# 
   130  0113                     	;# 
   131  0114                     	;# 
   132  0115                     	;# 
   133  0116                     	;# 
   134  0117                     	;# 
   135  0118                     	;# 
   136  0119                     	;# 
   137  011C                     	;# 
   138  018C                     	;# 
   139  018E                     	;# 
   140  0191                     	;# 
   141  0191                     	;# 
   142  0192                     	;# 
   143  0193                     	;# 
   144  0193                     	;# 
   145  0194                     	;# 
   146  0195                     	;# 
   147  0196                     	;# 
   148  0197                     	;# 
   149  0199                     	;# 
   150  0199                     	;# 
   151  0199                     	;# 
   152  019A                     	;# 
   153  019A                     	;# 
   154  019A                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019C                     	;# 
   161  019C                     	;# 
   162  019C                     	;# 
   163  019D                     	;# 
   164  019D                     	;# 
   165  019D                     	;# 
   166  019E                     	;# 
   167  019E                     	;# 
   168  019E                     	;# 
   169  019F                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  019F                     	;# 
   174  020C                     	;# 
   175  020E                     	;# 
   176  0211                     	;# 
   177  0211                     	;# 
   178  0212                     	;# 
   179  0212                     	;# 
   180  0213                     	;# 
   181  0213                     	;# 
   182  0214                     	;# 
   183  0214                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0216                     	;# 
   189  0216                     	;# 
   190  0217                     	;# 
   191  0217                     	;# 
   192  028C                     	;# 
   193  028E                     	;# 
   194  0291                     	;# 
   195  0291                     	;# 
   196  0292                     	;# 
   197  0293                     	;# 
   198  0294                     	;# 
   199  0298                     	;# 
   200  0298                     	;# 
   201  0299                     	;# 
   202  029A                     	;# 
   203  029B                     	;# 
   204  029E                     	;# 
   205  030C                     	;# 
   206  030E                     	;# 
   207  038C                     	;# 
   208  038E                     	;# 
   209  0391                     	;# 
   210  0392                     	;# 
   211  0393                     	;# 
   212  0397                     	;# 
   213  0398                     	;# 
   214  0399                     	;# 
   215  040E                     	;# 
   216  0413                     	;# 
   217  0413                     	;# 
   218  0414                     	;# 
   219  0414                     	;# 
   220  0415                     	;# 
   221  0416                     	;# 
   222  0417                     	;# 
   223  0418                     	;# 
   224  041A                     	;# 
   225  041A                     	;# 
   226  041B                     	;# 
   227  041B                     	;# 
   228  041C                     	;# 
   229  041D                     	;# 
   230  041E                     	;# 
   231  041F                     	;# 
   232  0493                     	;# 
   233  0494                     	;# 
   234  0495                     	;# 
   235  0496                     	;# 
   236  049A                     	;# 
   237  049B                     	;# 
   238  049C                     	;# 
   239  049D                     	;# 
   240  058C                     	;# 
   241  058C                     	;# 
   242  058D                     	;# 
   243  058E                     	;# 
   244  058E                     	;# 
   245  058F                     	;# 
   246  0590                     	;# 
   247  0590                     	;# 
   248  0591                     	;# 
   249  0592                     	;# 
   250  0592                     	;# 
   251  0593                     	;# 
   252  0594                     	;# 
   253  0594                     	;# 
   254  0595                     	;# 
   255  0596                     	;# 
   256  0596                     	;# 
   257  0597                     	;# 
   258  0598                     	;# 
   259  0599                     	;# 
   260  059A                     	;# 
   261  059B                     	;# 
   262  059B                     	;# 
   263  059C                     	;# 
   264  059D                     	;# 
   265  060C                     	;# 
   266  060C                     	;# 
   267  060D                     	;# 
   268  060E                     	;# 
   269  060F                     	;# 
   270  060F                     	;# 
   271  0610                     	;# 
   272  0611                     	;# 
   273  0612                     	;# 
   274  0613                     	;# 
   275  0614                     	;# 
   276  0617                     	;# 
   277  0617                     	;# 
   278  0618                     	;# 
   279  0619                     	;# 
   280  061A                     	;# 
   281  061A                     	;# 
   282  061B                     	;# 
   283  061C                     	;# 
   284  0691                     	;# 
   285  0692                     	;# 
   286  0693                     	;# 
   287  0694                     	;# 
   288  0695                     	;# 
   289  0696                     	;# 
   290  0697                     	;# 
   291  0699                     	;# 
   292  069A                     	;# 
   293  0711                     	;# 
   294  0712                     	;# 
   295  0713                     	;# 
   296  0714                     	;# 
   297  0715                     	;# 
   298  0718                     	;# 
   299  0718                     	;# 
   300  0719                     	;# 
   301  071A                     	;# 
   302  071A                     	;# 
   303  071B                     	;# 
   304  071C                     	;# 
   305  071D                     	;# 
   306  0791                     	;# 
   307  0791                     	;# 
   308  0792                     	;# 
   309  0793                     	;# 
   310  0793                     	;# 
   311  0794                     	;# 
   312  0795                     	;# 
   313  0795                     	;# 
   314  0796                     	;# 
   315  0797                     	;# 
   316  0797                     	;# 
   317  0798                     	;# 
   318  0799                     	;# 
   319  079A                     	;# 
   320  080C                     	;# 
   321  080C                     	;# 
   322  080D                     	;# 
   323  080E                     	;# 
   324  080E                     	;# 
   325  080F                     	;# 
   326  0810                     	;# 
   327  0810                     	;# 
   328  0811                     	;# 
   329  0812                     	;# 
   330  0812                     	;# 
   331  0813                     	;# 
   332  0814                     	;# 
   333  0815                     	;# 
   334  0816                     	;# 
   335  0817                     	;# 
   336  0818                     	;# 
   337  0819                     	;# 
   338  081A                     	;# 
   339  081A                     	;# 
   340  081B                     	;# 
   341  081C                     	;# 
   342  081C                     	;# 
   343  081D                     	;# 
   344  088C                     	;# 
   345  088D                     	;# 
   346  088E                     	;# 
   347  088F                     	;# 
   348  088F                     	;# 
   349  0890                     	;# 
   350  0891                     	;# 
   351  0892                     	;# 
   352  0893                     	;# 
   353  0893                     	;# 
   354  0894                     	;# 
   355  0895                     	;# 
   356  0896                     	;# 
   357  0897                     	;# 
   358  0897                     	;# 
   359  0898                     	;# 
   360  0899                     	;# 
   361  0D8C                     	;# 
   362  0D8C                     	;# 
   363  0D8D                     	;# 
   364  0D8E                     	;# 
   365  0D8F                     	;# 
   366  0D8F                     	;# 
   367  0D90                     	;# 
   368  0D91                     	;# 
   369  0D92                     	;# 
   370  0D92                     	;# 
   371  0D93                     	;# 
   372  0D94                     	;# 
   373  0D95                     	;# 
   374  0D95                     	;# 
   375  0D96                     	;# 
   376  0D97                     	;# 
   377  0D98                     	;# 
   378  0D99                     	;# 
   379  0D9A                     	;# 
   380  0D9B                     	;# 
   381  0D9C                     	;# 
   382  0D9D                     	;# 
   383  0D9E                     	;# 
   384  0D9E                     	;# 
   385  0D9F                     	;# 
   386  0DA0                     	;# 
   387  0DA1                     	;# 
   388  0DA1                     	;# 
   389  0DA2                     	;# 
   390  0DA3                     	;# 
   391  0DA4                     	;# 
   392  0DA4                     	;# 
   393  0DA5                     	;# 
   394  0DA6                     	;# 
   395  0DA7                     	;# 
   396  0DA7                     	;# 
   397  0DA8                     	;# 
   398  0DA9                     	;# 
   399  0DAA                     	;# 
   400  0DAB                     	;# 
   401  0DAC                     	;# 
   402  0DAD                     	;# 
   403  0DAE                     	;# 
   404  0DAF                     	;# 
   405  0E0F                     	;# 
   406  0E10                     	;# 
   407  0E11                     	;# 
   408  0E12                     	;# 
   409  0E13                     	;# 
   410  0E14                     	;# 
   411  0E15                     	;# 
   412  0E16                     	;# 
   413  0E17                     	;# 
   414  0E18                     	;# 
   415  0E19                     	;# 
   416  0E1A                     	;# 
   417  0E1B                     	;# 
   418  0E1C                     	;# 
   419  0E1D                     	;# 
   420  0E1E                     	;# 
   421  0E1F                     	;# 
   422  0E20                     	;# 
   423  0E21                     	;# 
   424  0E22                     	;# 
   425  0E23                     	;# 
   426  0E24                     	;# 
   427  0E25                     	;# 
   428  0E26                     	;# 
   429  0E27                     	;# 
   430  0E28                     	;# 
   431  0E29                     	;# 
   432  0E2A                     	;# 
   433  0E2B                     	;# 
   434  0E2C                     	;# 
   435  0E2D                     	;# 
   436  0E2E                     	;# 
   437  0E90                     	;# 
   438  0E91                     	;# 
   439  0E92                     	;# 
   440  0E94                     	;# 
   441  0E95                     	;# 
   442  0EA0                     	;# 
   443  0EA1                     	;# 
   444  0EA2                     	;# 
   445  0EA3                     	;# 
   446  0EA4                     	;# 
   447  0EA5                     	;# 
   448  0F0F                     	;# 
   449  0F10                     	;# 
   450  0F11                     	;# 
   451  0F12                     	;# 
   452  0F13                     	;# 
   453  0F14                     	;# 
   454  0F15                     	;# 
   455  0F16                     	;# 
   456  0F17                     	;# 
   457  0F18                     	;# 
   458  0F19                     	;# 
   459  0F1A                     	;# 
   460  0F1B                     	;# 
   461  0F1C                     	;# 
   462  0F1D                     	;# 
   463  0F1E                     	;# 
   464  0F1F                     	;# 
   465  0F20                     	;# 
   466  0F21                     	;# 
   467  0F22                     	;# 
   468  0F23                     	;# 
   469  0F24                     	;# 
   470  0F25                     	;# 
   471  0F26                     	;# 
   472  0F27                     	;# 
   473  0F28                     	;# 
   474  0F29                     	;# 
   475  0F2A                     	;# 
   476  0F2B                     	;# 
   477  0F2C                     	;# 
   478  0F2D                     	;# 
   479  0F2E                     	;# 
   480  0F2F                     	;# 
   481  0F30                     	;# 
   482  0F31                     	;# 
   483  0F32                     	;# 
   484  0F33                     	;# 
   485  0F34                     	;# 
   486  0F35                     	;# 
   487  0F36                     	;# 
   488  0F37                     	;# 
   489  0FE4                     	;# 
   490  0FE5                     	;# 
   491  0FE6                     	;# 
   492  0FE7                     	;# 
   493  0FE8                     	;# 
   494  0FE9                     	;# 
   495  0FEA                     	;# 
   496  0FEB                     	;# 
   497  0FED                     	;# 
   498  0FEE                     	;# 
   499  0FEF                     	;# 
   500  0000                     	;# 
   501  0001                     	;# 
   502  0002                     	;# 
   503  0003                     	;# 
   504  0004                     	;# 
   505  0005                     	;# 
   506  0006                     	;# 
   507  0007                     	;# 
   508  0008                     	;# 
   509  0009                     	;# 
   510  000A                     	;# 
   511  000B                     	;# 
   512  000C                     	;# 
   513  000E                     	;# 
   514  0010                     	;# 
   515  0011                     	;# 
   516  0012                     	;# 
   517  0013                     	;# 
   518  0014                     	;# 
   519  0015                     	;# 
   520  0016                     	;# 
   521  0016                     	;# 
   522  0017                     	;# 
   523  0018                     	;# 
   524  0019                     	;# 
   525  001A                     	;# 
   526  001A                     	;# 
   527  001B                     	;# 
   528  001B                     	;# 
   529  001C                     	;# 
   530  001D                     	;# 
   531  001E                     	;# 
   532  001F                     	;# 
   533  008C                     	;# 
   534  008E                     	;# 
   535  0090                     	;# 
   536  0091                     	;# 
   537  0092                     	;# 
   538  0093                     	;# 
   539  0094                     	;# 
   540  0095                     	;# 
   541  0096                     	;# 
   542  0098                     	;# 
   543  0099                     	;# 
   544  009A                     	;# 
   545  009B                     	;# 
   546  009B                     	;# 
   547  009C                     	;# 
   548  009D                     	;# 
   549  009E                     	;# 
   550  009F                     	;# 
   551  010C                     	;# 
   552  010E                     	;# 
   553  0111                     	;# 
   554  0112                     	;# 
   555  0113                     	;# 
   556  0114                     	;# 
   557  0115                     	;# 
   558  0116                     	;# 
   559  0117                     	;# 
   560  0118                     	;# 
   561  0119                     	;# 
   562  011C                     	;# 
   563  018C                     	;# 
   564  018E                     	;# 
   565  0191                     	;# 
   566  0191                     	;# 
   567  0192                     	;# 
   568  0193                     	;# 
   569  0193                     	;# 
   570  0194                     	;# 
   571  0195                     	;# 
   572  0196                     	;# 
   573  0197                     	;# 
   574  0199                     	;# 
   575  0199                     	;# 
   576  0199                     	;# 
   577  019A                     	;# 
   578  019A                     	;# 
   579  019A                     	;# 
   580  019B                     	;# 
   581  019B                     	;# 
   582  019B                     	;# 
   583  019B                     	;# 
   584  019B                     	;# 
   585  019C                     	;# 
   586  019C                     	;# 
   587  019C                     	;# 
   588  019D                     	;# 
   589  019D                     	;# 
   590  019D                     	;# 
   591  019E                     	;# 
   592  019E                     	;# 
   593  019E                     	;# 
   594  019F                     	;# 
   595  019F                     	;# 
   596  019F                     	;# 
   597  019F                     	;# 
   598  019F                     	;# 
   599  020C                     	;# 
   600  020E                     	;# 
   601  0211                     	;# 
   602  0211                     	;# 
   603  0212                     	;# 
   604  0212                     	;# 
   605  0213                     	;# 
   606  0213                     	;# 
   607  0214                     	;# 
   608  0214                     	;# 
   609  0215                     	;# 
   610  0215                     	;# 
   611  0215                     	;# 
   612  0215                     	;# 
   613  0216                     	;# 
   614  0216                     	;# 
   615  0217                     	;# 
   616  0217                     	;# 
   617  028C                     	;# 
   618  028E                     	;# 
   619  0291                     	;# 
   620  0291                     	;# 
   621  0292                     	;# 
   622  0293                     	;# 
   623  0294                     	;# 
   624  0298                     	;# 
   625  0298                     	;# 
   626  0299                     	;# 
   627  029A                     	;# 
   628  029B                     	;# 
   629  029E                     	;# 
   630  030C                     	;# 
   631  030E                     	;# 
   632  038C                     	;# 
   633  038E                     	;# 
   634  0391                     	;# 
   635  0392                     	;# 
   636  0393                     	;# 
   637  0397                     	;# 
   638  0398                     	;# 
   639  0399                     	;# 
   640  040E                     	;# 
   641  0413                     	;# 
   642  0413                     	;# 
   643  0414                     	;# 
   644  0414                     	;# 
   645  0415                     	;# 
   646  0416                     	;# 
   647  0417                     	;# 
   648  0418                     	;# 
   649  041A                     	;# 
   650  041A                     	;# 
   651  041B                     	;# 
   652  041B                     	;# 
   653  041C                     	;# 
   654  041D                     	;# 
   655  041E                     	;# 
   656  041F                     	;# 
   657  0493                     	;# 
   658  0494                     	;# 
   659  0495                     	;# 
   660  0496                     	;# 
   661  049A                     	;# 
   662  049B                     	;# 
   663  049C                     	;# 
   664  049D                     	;# 
   665  058C                     	;# 
   666  058C                     	;# 
   667  058D                     	;# 
   668  058E                     	;# 
   669  058E                     	;# 
   670  058F                     	;# 
   671  0590                     	;# 
   672  0590                     	;# 
   673  0591                     	;# 
   674  0592                     	;# 
   675  0592                     	;# 
   676  0593                     	;# 
   677  0594                     	;# 
   678  0594                     	;# 
   679  0595                     	;# 
   680  0596                     	;# 
   681  0596                     	;# 
   682  0597                     	;# 
   683  0598                     	;# 
   684  0599                     	;# 
   685  059A                     	;# 
   686  059B                     	;# 
   687  059B                     	;# 
   688  059C                     	;# 
   689  059D                     	;# 
   690  060C                     	;# 
   691  060C                     	;# 
   692  060D                     	;# 
   693  060E                     	;# 
   694  060F                     	;# 
   695  060F                     	;# 
   696  0610                     	;# 
   697  0611                     	;# 
   698  0612                     	;# 
   699  0613                     	;# 
   700  0614                     	;# 
   701  0617                     	;# 
   702  0617                     	;# 
   703  0618                     	;# 
   704  0619                     	;# 
   705  061A                     	;# 
   706  061A                     	;# 
   707  061B                     	;# 
   708  061C                     	;# 
   709  0691                     	;# 
   710  0692                     	;# 
   711  0693                     	;# 
   712  0694                     	;# 
   713  0695                     	;# 
   714  0696                     	;# 
   715  0697                     	;# 
   716  0699                     	;# 
   717  069A                     	;# 
   718  0711                     	;# 
   719  0712                     	;# 
   720  0713                     	;# 
   721  0714                     	;# 
   722  0715                     	;# 
   723  0718                     	;# 
   724  0718                     	;# 
   725  0719                     	;# 
   726  071A                     	;# 
   727  071A                     	;# 
   728  071B                     	;# 
   729  071C                     	;# 
   730  071D                     	;# 
   731  0791                     	;# 
   732  0791                     	;# 
   733  0792                     	;# 
   734  0793                     	;# 
   735  0793                     	;# 
   736  0794                     	;# 
   737  0795                     	;# 
   738  0795                     	;# 
   739  0796                     	;# 
   740  0797                     	;# 
   741  0797                     	;# 
   742  0798                     	;# 
   743  0799                     	;# 
   744  079A                     	;# 
   745  080C                     	;# 
   746  080C                     	;# 
   747  080D                     	;# 
   748  080E                     	;# 
   749  080E                     	;# 
   750  080F                     	;# 
   751  0810                     	;# 
   752  0810                     	;# 
   753  0811                     	;# 
   754  0812                     	;# 
   755  0812                     	;# 
   756  0813                     	;# 
   757  0814                     	;# 
   758  0815                     	;# 
   759  0816                     	;# 
   760  0817                     	;# 
   761  0818                     	;# 
   762  0819                     	;# 
   763  081A                     	;# 
   764  081A                     	;# 
   765  081B                     	;# 
   766  081C                     	;# 
   767  081C                     	;# 
   768  081D                     	;# 
   769  088C                     	;# 
   770  088D                     	;# 
   771  088E                     	;# 
   772  088F                     	;# 
   773  088F                     	;# 
   774  0890                     	;# 
   775  0891                     	;# 
   776  0892                     	;# 
   777  0893                     	;# 
   778  0893                     	;# 
   779  0894                     	;# 
   780  0895                     	;# 
   781  0896                     	;# 
   782  0897                     	;# 
   783  0897                     	;# 
   784  0898                     	;# 
   785  0899                     	;# 
   786  0D8C                     	;# 
   787  0D8C                     	;# 
   788  0D8D                     	;# 
   789  0D8E                     	;# 
   790  0D8F                     	;# 
   791  0D8F                     	;# 
   792  0D90                     	;# 
   793  0D91                     	;# 
   794  0D92                     	;# 
   795  0D92                     	;# 
   796  0D93                     	;# 
   797  0D94                     	;# 
   798  0D95                     	;# 
   799  0D95                     	;# 
   800  0D96                     	;# 
   801  0D97                     	;# 
   802  0D98                     	;# 
   803  0D99                     	;# 
   804  0D9A                     	;# 
   805  0D9B                     	;# 
   806  0D9C                     	;# 
   807  0D9D                     	;# 
   808  0D9E                     	;# 
   809  0D9E                     	;# 
   810  0D9F                     	;# 
   811  0DA0                     	;# 
   812  0DA1                     	;# 
   813  0DA1                     	;# 
   814  0DA2                     	;# 
   815  0DA3                     	;# 
   816  0DA4                     	;# 
   817  0DA4                     	;# 
   818  0DA5                     	;# 
   819  0DA6                     	;# 
   820  0DA7                     	;# 
   821  0DA7                     	;# 
   822  0DA8                     	;# 
   823  0DA9                     	;# 
   824  0DAA                     	;# 
   825  0DAB                     	;# 
   826  0DAC                     	;# 
   827  0DAD                     	;# 
   828  0DAE                     	;# 
   829  0DAF                     	;# 
   830  0E0F                     	;# 
   831  0E10                     	;# 
   832  0E11                     	;# 
   833  0E12                     	;# 
   834  0E13                     	;# 
   835  0E14                     	;# 
   836  0E15                     	;# 
   837  0E16                     	;# 
   838  0E17                     	;# 
   839  0E18                     	;# 
   840  0E19                     	;# 
   841  0E1A                     	;# 
   842  0E1B                     	;# 
   843  0E1C                     	;# 
   844  0E1D                     	;# 
   845  0E1E                     	;# 
   846  0E1F                     	;# 
   847  0E20                     	;# 
   848  0E21                     	;# 
   849  0E22                     	;# 
   850  0E23                     	;# 
   851  0E24                     	;# 
   852  0E25                     	;# 
   853  0E26                     	;# 
   854  0E27                     	;# 
   855  0E28                     	;# 
   856  0E29                     	;# 
   857  0E2A                     	;# 
   858  0E2B                     	;# 
   859  0E2C                     	;# 
   860  0E2D                     	;# 
   861  0E2E                     	;# 
   862  0E90                     	;# 
   863  0E91                     	;# 
   864  0E92                     	;# 
   865  0E94                     	;# 
   866  0E95                     	;# 
   867  0EA0                     	;# 
   868  0EA1                     	;# 
   869  0EA2                     	;# 
   870  0EA3                     	;# 
   871  0EA4                     	;# 
   872  0EA5                     	;# 
   873  0F0F                     	;# 
   874  0F10                     	;# 
   875  0F11                     	;# 
   876  0F12                     	;# 
   877  0F13                     	;# 
   878  0F14                     	;# 
   879  0F15                     	;# 
   880  0F16                     	;# 
   881  0F17                     	;# 
   882  0F18                     	;# 
   883  0F19                     	;# 
   884  0F1A                     	;# 
   885  0F1B                     	;# 
   886  0F1C                     	;# 
   887  0F1D                     	;# 
   888  0F1E                     	;# 
   889  0F1F                     	;# 
   890  0F20                     	;# 
   891  0F21                     	;# 
   892  0F22                     	;# 
   893  0F23                     	;# 
   894  0F24                     	;# 
   895  0F25                     	;# 
   896  0F26                     	;# 
   897  0F27                     	;# 
   898  0F28                     	;# 
   899  0F29                     	;# 
   900  0F2A                     	;# 
   901  0F2B                     	;# 
   902  0F2C                     	;# 
   903  0F2D                     	;# 
   904  0F2E                     	;# 
   905  0F2F                     	;# 
   906  0F30                     	;# 
   907  0F31                     	;# 
   908  0F32                     	;# 
   909  0F33                     	;# 
   910  0F34                     	;# 
   911  0F35                     	;# 
   912  0F36                     	;# 
   913  0F37                     	;# 
   914  0FE4                     	;# 
   915  0FE5                     	;# 
   916  0FE6                     	;# 
   917  0FE7                     	;# 
   918  0FE8                     	;# 
   919  0FE9                     	;# 
   920  0FEA                     	;# 
   921  0FEB                     	;# 
   922  0FED                     	;# 
   923  0FEE                     	;# 
   924  0FEF                     	;# 
   925                           
   926                           	psect	idataBANK0
   927  040E                     __pidataBANK0:	
   928                           
   929                           ;initializer for checkForPayload@F9416
   930  040E  3428               	retlw	40
   931  040F  3428               	retlw	40
   932                           
   933                           ;initializer for setModulationThreshold@F9412
   934  0410  34BC               	retlw	188
   935  0411  3407               	retlw	7
   936                           
   937                           ;initializer for setPacketFormat@F9402
   938  0412  34B7               	retlw	183
   939  0413  3410               	retlw	16
   940                           
   941                           	psect	idataBANK1
   942  0471                     __pidataBANK1:	
   943                           
   944                           ;initializer for main@F9365
   945  0471  3448               	retlw	72
   946  0472  3445               	retlw	69
   947  0473  344C               	retlw	76
   948  0474  344C               	retlw	76
   949  0475  344F               	retlw	79
   950  0476  3420               	retlw	32
   951  0477  3420               	retlw	32
   952  0478  3420               	retlw	32
   953                           
   954                           ;initializer for getRSSI@F9439
   955  0479  3424               	retlw	36
   956  047A  3400               	retlw	0
   957                           
   958                           ;initializer for setPreambleLength@F9424
   959  047B  34AD               	retlw	173
   960  047C  340C               	retlw	12
   961                           
   962                           ;initializer for _recommended_params
   963  047D  3498               	retlw	152
   964  047E  3488               	retlw	136
   965  047F  3499               	retlw	153
   966  0480  3455               	retlw	85
   967  0481  349A               	retlw	154
   968  0482  348B               	retlw	139
   969  0483  34A6               	retlw	166
   970  0484  3400               	retlw	0
   971  0485  34EF               	retlw	239
   972  0486  3430               	retlw	48
   973                           
   974                           	psect	idataBANK2
   975  0541                     __pidataBANK2:	
   976                           
   977                           ;initializer for main@F9363
   978  0541  3400               	retlw	0
   979  0542  3400               	retlw	0
   980  0543  3400               	retlw	0
   981  0544  3400               	retlw	0
   982  0545  3400               	retlw	0
   983  0546  3400               	retlw	0
   984  0547  3400               	retlw	0
   985  0548  3400               	retlw	0
   986  0549  3400               	retlw	0
   987  054A  3400               	retlw	0
   988  054B  3400               	retlw	0
   989  054C  3400               	retlw	0
   990  054D  3400               	retlw	0
   991  054E  3400               	retlw	0
   992  054F  3400               	retlw	0
   993  0550  3400               	retlw	0
   994  0551  3400               	retlw	0
   995  0552  3400               	retlw	0
   996  0553  3400               	retlw	0
   997  0554  3400               	retlw	0
   998  0555  340C               	retlw	12
   999  0556  3400               	retlw	0
  1000  0557  3402               	retlw	2
  1001  0558  3408               	retlw	8
  1002  0559  3430               	retlw	48
  1003  055A  34E4               	retlw	228
  1004  055B  3467               	retlw	103
  1005  055C  3467               	retlw	103
  1006  055D  3467               	retlw	103
  1007  055E  3467               	retlw	103
  1008  055F  3467               	retlw	103
  1009  0560  3467               	retlw	103
  1010  0561  3467               	retlw	103
  1011  0562  3467               	retlw	103
  1012  0563  34AC               	retlw	172
  1013  000E                     _PORTCbits	set	14
  1014  000C                     _PORTA	set	12
  1015  008C                     _TRISAbits	set	140
  1016  0099                     _OSCCONbits	set	153
  1017  008E                     _TRISCbits	set	142
  1018  018E                     _ANSELC	set	398
  1019  018C                     _ANSELA	set	396
  1020  0215                     _SSP1CONbits	set	533
  1021  0215                     _SSP1CON1bits	set	533
  1022  0214                     _SSP1STATbits	set	532
  1023  0211                     _SSP1BUF	set	529
  1024  0E21                     _SSPDATPPS	set	3617
  1025  0EA3                     _RC3PPS	set	3747
  1026  0EA0                     _RC0PPS	set	3744
  1027                           
  1028                           ; #config settings
  1029  0000                     
  1030                           	psect	cinit
  1031  07D1                     start_initialization:	
  1032  07D1                     __initialization:	
  1033                           
  1034                           ; Initialize objects allocated to BANK0
  1035  07D1  300E               	movlw	low __pidataBANK0
  1036  07D2  0084               	movwf	4
  1037  07D3  3084               	movlw	(high __pidataBANK0)| (0+128)
  1038  07D4  0085               	movwf	5
  1039  07D5  3069               	movlw	low __pdataBANK0
  1040  07D6  0086               	movwf	6
  1041  07D7  3000               	movlw	high __pdataBANK0
  1042  07D8  0087               	movwf	7
  1043  07D9  3006               	movlw	6
  1044  07DA  3184  2408  3187   	fcall	init_ram
  1045                           
  1046                           ; Initialize objects allocated to BANK1
  1047  07DD  3071               	movlw	low __pidataBANK1
  1048  07DE  0084               	movwf	4
  1049  07DF  3084               	movlw	(high __pidataBANK1)| (0+128)
  1050  07E0  0085               	movwf	5
  1051  07E1  30D9               	movlw	low __pdataBANK1
  1052  07E2  0086               	movwf	6
  1053  07E3  3000               	movlw	high __pdataBANK1
  1054  07E4  0087               	movwf	7
  1055  07E5  3016               	movlw	22
  1056  07E6  3184  2408  3187   	fcall	init_ram
  1057                           
  1058                           ; Initialize objects allocated to BANK2
  1059  07E9  3041               	movlw	low __pidataBANK2
  1060  07EA  0084               	movwf	4
  1061  07EB  3085               	movlw	(high __pidataBANK2)| (0+128)
  1062  07EC  0085               	movwf	5
  1063  07ED  3020               	movlw	low __pdataBANK2
  1064  07EE  0086               	movwf	6
  1065  07EF  3001               	movlw	high __pdataBANK2
  1066  07F0  0087               	movwf	7
  1067  07F1  3023               	movlw	35
  1068  07F2  3184  2408  3187   	fcall	init_ram
  1069                           
  1070                           ; Clear objects allocated to BANK0
  1071  07F5  01EF               	clrf	__pbssBANK0& (0+127)
  1072                           
  1073                           ; Clear objects allocated to BANK1
  1074  07F6  30A0               	movlw	low __pbssBANK1
  1075  07F7  0084               	movwf	4
  1076  07F8  3000               	movlw	high __pbssBANK1
  1077  07F9  0085               	movwf	5
  1078  07FA  3039               	movlw	57
  1079  07FB  3184  2402         	fcall	clear_ram0
  1080  07FD                     end_of_initialization:	
  1081                           ;End of C runtime variable initialization code
  1082                           
  1083  07FD                     __end_of__initialization:	
  1084  07FD  0020               	movlb	0
  1085  07FE  3187  2F0D         	ljmp	_main	;jump to C main() function
  1086                           
  1087                           	psect	bssBANK0
  1088  006F                     __pbssBANK0:	
  1089  006F                     _messages_received:	
  1090  006F                     	ds	1
  1091                           
  1092                           	psect	dataBANK0
  1093  0069                     __pdataBANK0:	
  1094  0069                     checkForPayload@F9416:	
  1095  0069                     	ds	2
  1096  006B                     setModulationThreshold@F9412:	
  1097  006B                     	ds	2
  1098  006D                     setPacketFormat@F9402:	
  1099  006D                     	ds	2
  1100                           
  1101                           	psect	bssBANK1
  1102  00A0                     __pbssBANK1:	
  1103  00A0                     _messages:	
  1104  00A0                     	ds	10
  1105  00AA                     setPowerOutput@F9431:	
  1106  00AA                     	ds	2
  1107  00AC                     setOperatingMode@F9406:	
  1108  00AC                     	ds	2
  1109  00AE                     setRSSIThreshold@F9398:	
  1110  00AE                     	ds	2
  1111  00B0                     setNodeAddress@F9394:	
  1112  00B0                     	ds	2
  1113  00B2                     setPacketLength@F9390:	
  1114  00B2                     	ds	2
  1115  00B4                     sendPairs@F9359:	
  1116  00B4                     	ds	2
  1117  00B6                     _radio:	
  1118  00B6                     	ds	35
  1119                           
  1120                           	psect	dataBANK1
  1121  00D9                     __pdataBANK1:	
  1122  00D9                     main@F9365:	
  1123  00D9                     	ds	8
  1124  00E1                     getRSSI@F9439:	
  1125  00E1                     	ds	2
  1126  00E3                     setPreambleLength@F9424:	
  1127  00E3                     	ds	2
  1128  00E5                     _recommended_params:	
  1129  00E5                     	ds	10
  1130                           
  1131                           	psect	dataBANK2
  1132  0120                     __pdataBANK2:	
  1133  0120                     main@F9363:	
  1134  0120                     	ds	35
  1135                           
  1136                           	psect	inittext
  1137  0408                     init_ram:	
  1138  0408  00FE               	movwf	126
  1139  0409                     initloop:	
  1140  0409  0012               	moviw fsr0++
  1141  040A  001E               	movwi fsr1++
  1142  040B  0BFE               	decfsz	126,f
  1143  040C  2C09               	goto	initloop
  1144  040D  3400               	retlw	0
  1145                           
  1146                           	psect	clrtext
  1147  0402                     clear_ram0:	
  1148                           ;	Called with FSR0 containing the base address, and
  1149                           ;	WREG with the size to clear
  1150                           
  1151  0402  0064               	clrwdt	;clear the watchdog before getting into this loop
  1152  0403                     clrloop0:	
  1153  0403  0180               	clrf	0	;clear RAM location pointed to by FSR
  1154  0404  3101               	addfsr 0,1
  1155  0405  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1156  0406  2C03               	goto	clrloop0	;have we reached the end yet?
  1157  0407  3400               	retlw	0	;all done for this memory range, return
  1158                           
  1159                           	psect	cstackCOMMON
  1160  0070                     __pcstackCOMMON:	
  1161  0070                     ?_rfmSetup:	
  1162  0070                     ?_spi_init_master:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165  0070                     ??_spi_init_master:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168  0070                     ?_initRadio:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171  0070                     ?_setOperatingMode:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174  0070                     ?_setPinWithMask:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177  0070                     ?_receive:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180  0070                     ?_resetRadio:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183  0070                     ??_resetRadio:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186  0070                     ?_setSyncWords:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189  0070                     ?_setPacketLength:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192  0070                     ?_setNodeAddress:	
  1193                           ; 1 bytes @ 0x0
  1194                           
  1195  0070                     ?_setRSSIThreshold:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198  0070                     ?_setPacketFormat:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201  0070                     ?_setRecommendedParams:	
  1202                           ; 1 bytes @ 0x0
  1203                           
  1204  0070                     ?_setModulationThreshold:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207  0070                     ?_setPreambleLength:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210  0070                     ?_init:	
  1211                           ; 1 bytes @ 0x0
  1212                           
  1213  0070                     ?_main:	
  1214                           ; 2 bytes @ 0x0
  1215                           
  1216  0070                     receive@msg:	
  1217                           ; 2 bytes @ 0x0
  1218                           
  1219  0070                     setPinWithMask@pPort:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222                           
  1223                           ; 2 bytes @ 0x0
  1224  0070                     	ds	1
  1225  0071                     ??_rfmSetup:	
  1226  0071                     ??_receive:	
  1227                           ; 1 bytes @ 0x1
  1228                           
  1229                           
  1230                           ; 1 bytes @ 0x1
  1231  0071                     	ds	1
  1232  0072                     ??_init:	
  1233  0072                     setPinWithMask@iPin:	
  1234                           ; 1 bytes @ 0x2
  1235                           
  1236                           
  1237                           ; 1 bytes @ 0x2
  1238  0072                     	ds	1
  1239  0073                     setPinWithMask@value:	
  1240  0073                     receive@test:	
  1241                           ; 1 bytes @ 0x3
  1242                           
  1243                           
  1244                           ; 1 bytes @ 0x3
  1245  0073                     	ds	1
  1246  0074                     ??_setPinWithMask:	
  1247  0074                     receive@temp:	
  1248                           ; 1 bytes @ 0x4
  1249                           
  1250                           
  1251                           ; 1 bytes @ 0x4
  1252  0074                     	ds	1
  1253  0075                     receive@radio:	
  1254                           
  1255                           ; 1 bytes @ 0x5
  1256  0075                     	ds	1
  1257  0076                     receive@i:	
  1258                           
  1259                           ; 2 bytes @ 0x6
  1260  0076                     	ds	2
  1261  0078                     ?_send:	
  1262  0078                     send@msg:	
  1263                           ; 1 bytes @ 0x8
  1264                           
  1265                           
  1266                           ; 1 bytes @ 0x8
  1267  0078                     	ds	1
  1268  0079                     ??_send:	
  1269                           
  1270                           ; 1 bytes @ 0x9
  1271  0079                     	ds	2
  1272  007B                     sendBulk@i:	
  1273                           
  1274                           ; 2 bytes @ 0xB
  1275  007B                     	ds	2
  1276  007D                     sendBulk@radio:	
  1277                           
  1278                           ; 1 bytes @ 0xD
  1279  007D                     	ds	1
  1280  007E                     ??_initRadio:	
  1281                           
  1282                           	psect	cstackBANK0
  1283  0020                     __pcstackBANK0:	
  1284                           ; 1 bytes @ 0xE
  1285                           
  1286  0020                     send@test:	
  1287                           
  1288                           ; 1 bytes @ 0x0
  1289  0020                     	ds	1
  1290  0021                     send@temp:	
  1291                           
  1292                           ; 1 bytes @ 0x1
  1293  0021                     	ds	1
  1294  0022                     send@returnMsg:	
  1295                           
  1296                           ; 1 bytes @ 0x2
  1297  0022                     	ds	1
  1298  0023                     send@i:	
  1299                           
  1300                           ; 2 bytes @ 0x3
  1301  0023                     	ds	2
  1302  0025                     send@radio:	
  1303                           
  1304                           ; 1 bytes @ 0x5
  1305  0025                     	ds	1
  1306  0026                     ?_sendBulk:	
  1307  0026                     sendBulk@msgs:	
  1308                           ; 1 bytes @ 0x6
  1309                           
  1310                           
  1311                           ; 1 bytes @ 0x6
  1312  0026                     	ds	1
  1313  0027                     sendBulk@len:	
  1314                           
  1315                           ; 1 bytes @ 0x7
  1316  0027                     	ds	1
  1317  0028                     ??_sendBulk:	
  1318                           
  1319                           ; 1 bytes @ 0x8
  1320  0028                     	ds	4
  1321  002C                     ?_setPowerOutput:	
  1322  002C                     ??_setOperatingMode:	
  1323                           ; 1 bytes @ 0xC
  1324                           
  1325  002C                     ?_sendPairs:	
  1326                           ; 1 bytes @ 0xC
  1327                           
  1328  002C                     ??_setSyncWords:	
  1329                           ; 1 bytes @ 0xC
  1330                           
  1331  002C                     ??_setPacketLength:	
  1332                           ; 1 bytes @ 0xC
  1333                           
  1334  002C                     ??_setNodeAddress:	
  1335                           ; 1 bytes @ 0xC
  1336                           
  1337  002C                     ??_setRSSIThreshold:	
  1338                           ; 1 bytes @ 0xC
  1339                           
  1340  002C                     ??_setPacketFormat:	
  1341                           ; 1 bytes @ 0xC
  1342                           
  1343  002C                     ??_setModulationThreshold:	
  1344                           ; 1 bytes @ 0xC
  1345                           
  1346  002C                     ??_setPreambleLength:	
  1347                           ; 1 bytes @ 0xC
  1348                           
  1349  002C                     sendPairs@msgs:	
  1350                           ; 1 bytes @ 0xC
  1351                           
  1352  002C                     setPowerOutput@powerSettings:	
  1353                           ; 1 bytes @ 0xC
  1354                           
  1355                           
  1356                           ; 1 bytes @ 0xC
  1357  002C                     	ds	1
  1358  002D                     ??_setPowerOutput:	
  1359  002D                     sendPairs@len:	
  1360                           ; 1 bytes @ 0xD
  1361                           
  1362                           
  1363                           ; 2 bytes @ 0xD
  1364  002D                     	ds	1
  1365  002E                     setPacketLength@msg:	
  1366  002E                     setNodeAddress@msg:	
  1367                           ; 2 bytes @ 0xE
  1368                           
  1369  002E                     setRSSIThreshold@msg:	
  1370                           ; 2 bytes @ 0xE
  1371                           
  1372  002E                     setPacketFormat@msg:	
  1373                           ; 2 bytes @ 0xE
  1374                           
  1375  002E                     setOperatingMode@msg:	
  1376                           ; 2 bytes @ 0xE
  1377                           
  1378  002E                     setModulationThreshold@msg:	
  1379                           ; 2 bytes @ 0xE
  1380                           
  1381  002E                     setPreambleLength@msg:	
  1382                           ; 2 bytes @ 0xE
  1383                           
  1384  002E                     setSyncWords@msg:	
  1385                           ; 2 bytes @ 0xE
  1386                           
  1387                           
  1388                           ; 10 bytes @ 0xE
  1389  002E                     	ds	1
  1390  002F                     ??_sendPairs:	
  1391  002F                     setPowerOutput@radio:	
  1392                           ; 1 bytes @ 0xF
  1393                           
  1394                           
  1395                           ; 1 bytes @ 0xF
  1396  002F                     	ds	1
  1397  0030                     setPacketLength@radio:	
  1398  0030                     setNodeAddress@radio:	
  1399                           ; 1 bytes @ 0x10
  1400                           
  1401  0030                     setRSSIThreshold@radio:	
  1402                           ; 1 bytes @ 0x10
  1403                           
  1404  0030                     setPacketFormat@radio:	
  1405                           ; 1 bytes @ 0x10
  1406                           
  1407  0030                     setOperatingMode@radio:	
  1408                           ; 1 bytes @ 0x10
  1409                           
  1410  0030                     setModulationThreshold@radio:	
  1411                           ; 1 bytes @ 0x10
  1412                           
  1413  0030                     setPreambleLength@radio:	
  1414                           ; 1 bytes @ 0x10
  1415                           
  1416  0030                     setPowerOutput@msg:	
  1417                           ; 1 bytes @ 0x10
  1418                           
  1419                           
  1420                           ; 2 bytes @ 0x10
  1421  0030                     	ds	1
  1422  0031                     ?_sendPayload:	
  1423  0031                     sendPairs@radio:	
  1424                           ; 1 bytes @ 0x11
  1425                           
  1426  0031                     sendPayload@payload:	
  1427                           ; 1 bytes @ 0x11
  1428                           
  1429                           
  1430                           ; 1 bytes @ 0x11
  1431  0031                     	ds	1
  1432  0032                     ??_sendPayload:	
  1433  0032                     sendPairs@msg:	
  1434                           ; 1 bytes @ 0x12
  1435                           
  1436                           
  1437                           ; 2 bytes @ 0x12
  1438  0032                     	ds	2
  1439  0034                     sendPairs@i:	
  1440  0034                     sendPayload@i:	
  1441                           ; 2 bytes @ 0x14
  1442                           
  1443                           
  1444                           ; 2 bytes @ 0x14
  1445  0034                     	ds	2
  1446  0036                     ??_setRecommendedParams:	
  1447  0036                     sendPayload@radio:	
  1448                           ; 1 bytes @ 0x16
  1449                           
  1450                           
  1451                           ; 1 bytes @ 0x16
  1452  0036                     	ds	1
  1453  0037                     setRecommendedParams@radio:	
  1454                           
  1455                           ; 1 bytes @ 0x17
  1456  0037                     	ds	1
  1457  0038                     setSyncWords@radio:	
  1458                           
  1459                           ; 1 bytes @ 0x18
  1460  0038                     	ds	1
  1461  0039                     setSyncWords@i:	
  1462                           
  1463                           ; 2 bytes @ 0x19
  1464  0039                     	ds	2
  1465  003B                     initRadio@radio:	
  1466                           
  1467                           ; 1 bytes @ 0x1B
  1468  003B                     	ds	1
  1469  003C                     ??_main:	
  1470                           
  1471                           ; 1 bytes @ 0x1C
  1472  003C                     	ds	2
  1473  003E                     main@payload:	
  1474                           
  1475                           ; 8 bytes @ 0x1E
  1476  003E                     	ds	8
  1477  0046                     main@9364:	
  1478                           
  1479                           ; 35 bytes @ 0x26
  1480  0046                     	ds	35
  1481                           
  1482                           	psect	maintext
  1483  070D                     __pmaintext:	
  1484 ;;
  1485 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1486 ;;
  1487 ;; *************** function _main *****************
  1488 ;; Defined at:
  1489 ;;		line 76 in file "transmitter.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;		None
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;  9364           35   38[BANK0 ] struct RFM69HCW
  1494 ;;  payload         8   30[BANK0 ] unsigned char [8]
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  2   61[None  ] int 
  1497 ;; Registers used:
  1498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1499 ;; Tracked objects:
  1500 ;;		On entry : B1F/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1505 ;;      Locals:         0      43       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1506 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1507 ;;      Totals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1508 ;;Total ram usage:       45 bytes
  1509 ;; Hardware stack levels required when called:    6
  1510 ;; This function calls:
  1511 ;;		_init
  1512 ;;		_initRadio
  1513 ;;		_sendPayload
  1514 ;;		_setOperatingMode
  1515 ;;		_setPowerOutput
  1516 ;; This function is called by:
  1517 ;;		Startup code after reset
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           
  1522                           ;psect for function _main
  1523  070D                     _main:	
  1524                           
  1525                           ;transmitter.c: 81:             .RSSI_threshold=0xE4, .sync_words = {0x67,0x67,0x67,0x67
      +                          ,0x67,0x67,0x67,0x67}};;transmitter.c: 77:     TRISAbits.TRISA4=1;
  1526                           
  1527                           ;incstack = 0
  1528                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1529  070D  0021               	movlb	1	; select bank1
  1530  070E  160C               	bsf	12,4	;volatile
  1531                           
  1532                           ;transmitter.c: 78:     TRISAbits.TRISA5=1;
  1533  070F  168C               	bsf	12,5	;volatile
  1534                           
  1535                           ;transmitter.c: 79:     init();
  1536  0710  3183  23FF  3187   	fcall	_init
  1537                           
  1538                           ;transmitter.c: 80:     radio = (RFM69) {.operating_mode=0xAC, .SSport=&PORTA, .SSbit=2,
      +                           .node_address=0x30,.packet_length=0x08,
  1539  0713  3020               	movlw	low main@F9363
  1540  0714  0086               	movwf	6
  1541  0715  3001               	movlw	high main@F9363
  1542  0716  0087               	movwf	7
  1543  0717  3046               	movlw	low main@9364
  1544  0718  0084               	movwf	4
  1545  0719  3000               	movlw	high main@9364
  1546  071A  0085               	movwf	5
  1547  071B  3023               	movlw	35
  1548  071C  0020               	movlb	0	; select bank0
  1549  071D  00BC               	movwf	??_main
  1550  071E                     u310:	
  1551  071E  0016               	moviw fsr1++
  1552  071F  001A               	movwi fsr0++
  1553  0720  0BBC               	decfsz	??_main,f
  1554  0721  2F1E               	goto	u310
  1555  0722  3046               	movlw	low main@9364
  1556  0723  0086               	movwf	6
  1557  0724  3000               	movlw	high main@9364
  1558  0725  0087               	movwf	7
  1559  0726  30B6               	movlw	low _radio
  1560  0727  0084               	movwf	4
  1561  0728  3000               	movlw	high _radio
  1562  0729  0085               	movwf	5
  1563  072A  3023               	movlw	35
  1564  072B  00BC               	movwf	??_main
  1565  072C                     u320:	
  1566  072C  0016               	moviw fsr1++
  1567  072D  001A               	movwi fsr0++
  1568  072E  0BBC               	decfsz	??_main,f
  1569  072F  2F2C               	goto	u320
  1570                           
  1571                           ;transmitter.c: 82:     initRadio(&radio);
  1572  0730  30B6               	movlw	(low (_radio| 0))& (0+255)
  1573  0731  3185  2588  3187   	fcall	_initRadio
  1574                           
  1575                           ;transmitter.c: 83:     setPowerOutput(&radio, 0x7F);
  1576  0734  307F               	movlw	127
  1577  0735  0020               	movlb	0	; select bank0
  1578  0736  00BC               	movwf	??_main
  1579  0737  083C               	movf	??_main,w
  1580  0738  00AC               	movwf	setPowerOutput@powerSettings
  1581  0739  30B6               	movlw	(low (_radio| 0))& (0+255)
  1582  073A  3184  2487  3187   	fcall	_setPowerOutput
  1583                           
  1584                           ;transmitter.c: 85:     byte payload[0x08] = {0x48, 0x45, 0x4C, 0x4C, 0x4F, 0x20, 0x20, 
      +                          0x20};
  1585  073D  30D9               	movlw	low main@F9365
  1586  073E  0086               	movwf	6
  1587  073F  3000               	movlw	high main@F9365
  1588  0740  0087               	movwf	7
  1589  0741  303E               	movlw	low main@payload
  1590  0742  0084               	movwf	4
  1591  0743  3000               	movlw	high main@payload
  1592  0744  0085               	movwf	5
  1593  0745  3008               	movlw	8
  1594  0746  0020               	movlb	0	; select bank0
  1595  0747  00BC               	movwf	??_main
  1596  0748                     u330:	
  1597  0748  0016               	moviw fsr1++
  1598  0749  001A               	movwi fsr0++
  1599  074A  0BBC               	decfsz	??_main,f
  1600  074B  2F48               	goto	u330
  1601  074C                     l1218:	
  1602                           
  1603                           ;transmitter.c: 87:             sendPayload(&radio, payload);
  1604  074C  303E               	movlw	(low (main@payload| 0))& (0+255)
  1605  074D  0020               	movlb	0	; select bank0
  1606  074E  00BC               	movwf	??_main
  1607  074F  083C               	movf	??_main,w
  1608  0750  00B1               	movwf	sendPayload@payload
  1609  0751  30B6               	movlw	(low (_radio| 0))& (0+255)
  1610  0752  3187  276C  3187   	fcall	_sendPayload
  1611                           
  1612                           ;transmitter.c: 88:             _delay((unsigned long)((100)*(16000000/4000.0)));
  1613  0755  3003               	movlw	3
  1614  0756  0020               	movlb	0	; select bank0
  1615  0757  00BD               	movwf	??_main+1
  1616  0758  3008               	movlw	8
  1617  0759  00BC               	movwf	??_main
  1618  075A  3077               	movlw	119
  1619  075B                     u357:	
  1620  075B  0B89               	decfsz	9,f
  1621  075C  2F5B               	goto	u357
  1622  075D  0BBC               	decfsz	??_main,f
  1623  075E  2F5B               	goto	u357
  1624  075F  0BBD               	decfsz	??_main+1,f
  1625  0760  2F5B               	goto	u357
  1626                           
  1627                           ;transmitter.c: 89:             radio.operating_mode=0xA4;
  1628  0761  30A4               	movlw	164
  1629  0762  0020               	movlb	0	; select bank0
  1630  0763  00BC               	movwf	??_main
  1631  0764  083C               	movf	??_main,w
  1632  0765  0021               	movlb	1	; select bank1
  1633  0766  00D8               	movwf	(_radio^(0+128)+34)
  1634                           
  1635                           ;transmitter.c: 90:             setOperatingMode(&radio);
  1636  0767  30B6               	movlw	(low (_radio| 0))& (0+255)
  1637  0768  3185  2506  3187   	fcall	_setOperatingMode
  1638  076B  2F4C               	goto	l1218
  1639  076C                     __end_of_main:	
  1640                           
  1641                           	psect	text1
  1642  0487                     __ptext1:	
  1643 ;; *************** function _setPowerOutput *****************
  1644 ;; Defined at:
  1645 ;;		line 137 in file "RFM69HCW.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  radio           1    wreg     PTR struct RFM69HCW
  1648 ;;		 -> radio(35), 
  1649 ;;  powerSetting    1   12[BANK0 ] unsigned char 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  radio           1   15[BANK0 ] PTR struct RFM69HCW
  1652 ;;		 -> radio(35), 
  1653 ;;  msg             2   16[BANK0 ] unsigned char [2]
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      void 
  1656 ;; Registers used:
  1657 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1663 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1664 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1665 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1666 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1667 ;;Total ram usage:        6 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    3
  1670 ;; This function calls:
  1671 ;;		_sendBulk
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           
  1678                           ;psect for function _setPowerOutput
  1679  0487                     _setPowerOutput:	
  1680                           
  1681                           ;incstack = 0
  1682                           ; Regs used in _setPowerOutput: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1683                           ;setPowerOutput@radio stored from wreg
  1684  0487  0020               	movlb	0	; select bank0
  1685  0488  00AF               	movwf	setPowerOutput@radio
  1686                           
  1687                           ;RFM69HCW.c: 138:     byte msg[] = {0x11|0x80, powerSettings};
  1688  0489  01B0               	clrf	setPowerOutput@msg
  1689  048A  01B1               	clrf	setPowerOutput@msg+1
  1690  048B  3091               	movlw	145
  1691  048C  00AD               	movwf	??_setPowerOutput
  1692  048D  082D               	movf	??_setPowerOutput,w
  1693  048E  00B0               	movwf	setPowerOutput@msg
  1694  048F  082C               	movf	setPowerOutput@powerSettings,w
  1695  0490  00AD               	movwf	??_setPowerOutput
  1696  0491  082D               	movf	??_setPowerOutput,w
  1697  0492  00B1               	movwf	setPowerOutput@msg+1
  1698                           
  1699                           ;RFM69HCW.c: 139:     sendBulk(radio,msg,2);
  1700  0493  3030               	movlw	(low (setPowerOutput@msg| 0))& (0+255)
  1701  0494  00AD               	movwf	??_setPowerOutput
  1702  0495  082D               	movf	??_setPowerOutput,w
  1703  0496  00A6               	movwf	sendBulk@msgs
  1704  0497  3002               	movlw	2
  1705  0498  00AE               	movwf	??_setPowerOutput+1
  1706  0499  082E               	movf	??_setPowerOutput+1,w
  1707  049A  00A7               	movwf	sendBulk@len
  1708  049B  082F               	movf	setPowerOutput@radio,w
  1709  049C  3186  26BB         	fcall	_sendBulk
  1710  049E  0008               	return
  1711  049F                     __end_of_setPowerOutput:	
  1712                           
  1713                           	psect	text2
  1714  076C                     __ptext2:	
  1715 ;; *************** function _sendPayload *****************
  1716 ;; Defined at:
  1717 ;;		line 142 in file "RFM69HCW.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  radio           1    wreg     PTR struct RFM69HCW
  1720 ;;		 -> radio(35), 
  1721 ;;  payload         1   17[BANK0 ] PTR unsigned char 
  1722 ;;		 -> main@payload(8), 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  radio           1   22[BANK0 ] PTR struct RFM69HCW
  1725 ;;		 -> radio(35), 
  1726 ;;  i               2   20[BANK0 ] int 
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      void 
  1729 ;; Registers used:
  1730 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1736 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1737 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1738 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1739 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1740 ;;Total ram usage:        6 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    4
  1743 ;; This function calls:
  1744 ;;		_send
  1745 ;;		_setOperatingMode
  1746 ;;		_setPinWithMask
  1747 ;; This function is called by:
  1748 ;;		_main
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           
  1753                           ;psect for function _sendPayload
  1754  076C                     _sendPayload:	
  1755                           
  1756                           ;incstack = 0
  1757                           ; Regs used in _sendPayload: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1758                           ;sendPayload@radio stored from wreg
  1759  076C  0020               	movlb	0	; select bank0
  1760  076D  00B6               	movwf	sendPayload@radio
  1761                           
  1762                           ;RFM69HCW.c: 143:     radio->operating_mode=0xAC;
  1763  076E  30AC               	movlw	172
  1764  076F  00B2               	movwf	??_sendPayload
  1765  0770  0836               	movf	sendPayload@radio,w
  1766  0771  3E22               	addlw	34
  1767  0772  0086               	movwf	6
  1768  0773  0187               	clrf	7
  1769  0774  0832               	movf	??_sendPayload,w
  1770  0775  0081               	movwf	1
  1771                           
  1772                           ;RFM69HCW.c: 144:     setOperatingMode(radio);
  1773  0776  0836               	movf	sendPayload@radio,w
  1774  0777  3185  2506  3187   	fcall	_setOperatingMode
  1775                           
  1776                           ;RFM69HCW.c: 145:     setPinWithMask(radio->SSport, radio->SSbit,0);
  1777  077A  0020               	movlb	0	; select bank0
  1778  077B  0836               	movf	sendPayload@radio,w
  1779  077C  3E14               	addlw	20
  1780  077D  0086               	movwf	6
  1781  077E  0187               	clrf	7
  1782  077F  3F40               	moviw [0]fsr1
  1783  0780  00F0               	movwf	setPinWithMask@pPort
  1784  0781  3F41               	moviw [1]fsr1
  1785  0782  00F1               	movwf	setPinWithMask@pPort+1
  1786  0783  0836               	movf	sendPayload@radio,w
  1787  0784  0086               	movwf	6
  1788  0785  0187               	clrf	7
  1789  0786  3F56               	moviw [22]fsr1
  1790  0787  00F2               	movwf	setPinWithMask@iPin
  1791  0788  01F3               	clrf	setPinWithMask@value
  1792  0789  3185  2564  3187   	fcall	_setPinWithMask
  1793                           
  1794                           ;RFM69HCW.c: 146:     send(radio, 0x00|0x80);
  1795  078C  3080               	movlw	128
  1796  078D  0020               	movlb	0	; select bank0
  1797  078E  00B2               	movwf	??_sendPayload
  1798  078F  0832               	movf	??_sendPayload,w
  1799  0790  00F8               	movwf	send@msg
  1800  0791  0836               	movf	sendPayload@radio,w
  1801  0792  3186  266B  3187   	fcall	_send
  1802                           
  1803                           ;RFM69HCW.c: 147:     for(int i=0;i<radio->packet_length;i++){
  1804  0795  0020               	movlb	0	; select bank0
  1805  0796  01B4               	clrf	sendPayload@i
  1806  0797  01B5               	clrf	sendPayload@i+1
  1807  0798                     l1200:	
  1808  0798  0836               	movf	sendPayload@radio,w
  1809  0799  3E17               	addlw	23
  1810  079A  0086               	movwf	6
  1811  079B  0187               	clrf	7
  1812  079C  0835               	movf	sendPayload@i+1,w
  1813  079D  3A80               	xorlw	128
  1814  079E  00B2               	movwf	??_sendPayload
  1815  079F  3080               	movlw	128
  1816  07A0  0232               	subwf	??_sendPayload,w
  1817  07A1  1D03               	skipz
  1818  07A2  2FA5               	goto	u305
  1819  07A3  0801               	movf	1,w
  1820  07A4  0234               	subwf	sendPayload@i,w
  1821  07A5                     u305:	
  1822  07A5  1803               	btfsc	3,0
  1823  07A6  2FBE               	goto	l1202
  1824                           
  1825                           ;RFM69HCW.c: 148:         send(radio,payload[i]);
  1826  07A7  0020               	movlb	0	; select bank0
  1827  07A8  0834               	movf	sendPayload@i,w
  1828  07A9  0731               	addwf	sendPayload@payload,w
  1829  07AA  00B2               	movwf	??_sendPayload
  1830  07AB  0832               	movf	??_sendPayload,w
  1831  07AC  0086               	movwf	6
  1832  07AD  0187               	clrf	7
  1833  07AE  0801               	movf	1,w
  1834  07AF  00B3               	movwf	??_sendPayload+1
  1835  07B0  0833               	movf	??_sendPayload+1,w
  1836  07B1  00F8               	movwf	send@msg
  1837  07B2  0836               	movf	sendPayload@radio,w
  1838  07B3  3186  266B  3187   	fcall	_send
  1839                           
  1840                           ;RFM69HCW.c: 149:         __nop();
  1841  07B6  0000               	nop
  1842                           
  1843                           ;RFM69HCW.c: 150:         __nop();
  1844  07B7  0000               	nop
  1845                           
  1846                           ;RFM69HCW.c: 151:     }
  1847  07B8  3001               	movlw	1
  1848  07B9  0020               	movlb	0	; select bank0
  1849  07BA  07B4               	addwf	sendPayload@i,f
  1850  07BB  3000               	movlw	0
  1851  07BC  3DB5               	addwfc	sendPayload@i+1,f
  1852  07BD  2F98               	goto	l1200
  1853  07BE                     l1202:	
  1854                           
  1855                           ;RFM69HCW.c: 152:     setPinWithMask(radio->SSport, radio->SSbit,1);
  1856  07BE  0020               	movlb	0	; select bank0
  1857  07BF  0836               	movf	sendPayload@radio,w
  1858  07C0  3E14               	addlw	20
  1859  07C1  0086               	movwf	6
  1860  07C2  0187               	clrf	7
  1861  07C3  3F40               	moviw [0]fsr1
  1862  07C4  00F0               	movwf	setPinWithMask@pPort
  1863  07C5  3F41               	moviw [1]fsr1
  1864  07C6  00F1               	movwf	setPinWithMask@pPort+1
  1865  07C7  0836               	movf	sendPayload@radio,w
  1866  07C8  0086               	movwf	6
  1867  07C9  0187               	clrf	7
  1868  07CA  3F56               	moviw [22]fsr1
  1869  07CB  00F2               	movwf	setPinWithMask@iPin
  1870  07CC  01F3               	clrf	setPinWithMask@value
  1871  07CD  0AF3               	incf	setPinWithMask@value,f
  1872  07CE  3185  2564         	fcall	_setPinWithMask
  1873  07D0  0008               	return
  1874  07D1                     __end_of_sendPayload:	
  1875                           
  1876                           	psect	text3
  1877  0588                     __ptext3:	
  1878 ;; *************** function _initRadio *****************
  1879 ;; Defined at:
  1880 ;;		line 124 in file "RFM69HCW.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  radio           1    wreg     PTR struct RFM69HCW
  1883 ;;		 -> radio(35), 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  radio           1   27[BANK0 ] PTR struct RFM69HCW
  1886 ;;		 -> radio(35), 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1897 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1899 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1900 ;;Total ram usage:        1 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; Hardware stack levels required when called:    5
  1903 ;; This function calls:
  1904 ;;		_setModulationThreshold
  1905 ;;		_setNodeAddress
  1906 ;;		_setOperatingMode
  1907 ;;		_setPacketFormat
  1908 ;;		_setPacketLength
  1909 ;;		_setPreambleLength
  1910 ;;		_setRSSIThreshold
  1911 ;;		_setRecommendedParams
  1912 ;;		_setSyncWords
  1913 ;; This function is called by:
  1914 ;;		_main
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           
  1919                           ;psect for function _initRadio
  1920  0588                     _initRadio:	
  1921                           
  1922                           ;incstack = 0
  1923                           ; Regs used in _initRadio: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1924                           ;initRadio@radio stored from wreg
  1925  0588  0020               	movlb	0	; select bank0
  1926  0589  00BB               	movwf	initRadio@radio
  1927                           
  1928                           ;RFM69HCW.c: 125:     setSyncWords(radio);
  1929  058A  083B               	movf	initRadio@radio,w
  1930  058B  3185  25EF  3185   	fcall	_setSyncWords
  1931                           
  1932                           ;RFM69HCW.c: 126:     setPacketLength(radio);
  1933  058E  0020               	movlb	0	; select bank0
  1934  058F  083B               	movf	initRadio@radio,w
  1935  0590  3184  24B8  3185   	fcall	_setPacketLength
  1936                           
  1937                           ;RFM69HCW.c: 127:     setNodeAddress(radio);
  1938  0593  0020               	movlb	0	; select bank0
  1939  0594  083B               	movf	initRadio@radio,w
  1940  0595  3184  249F  3185   	fcall	_setNodeAddress
  1941                           
  1942                           ;RFM69HCW.c: 128:     setRSSIThreshold(radio);
  1943  0598  0020               	movlb	0	; select bank0
  1944  0599  083B               	movf	initRadio@radio,w
  1945  059A  3184  24D1  3185   	fcall	_setRSSIThreshold
  1946                           
  1947                           ;RFM69HCW.c: 129:     setPacketFormat(radio);
  1948  059D  0020               	movlb	0	; select bank0
  1949  059E  083B               	movf	initRadio@radio,w
  1950  059F  3184  2434  3185   	fcall	_setPacketFormat
  1951                           
  1952                           ;RFM69HCW.c: 130:     setRecommendedParams(radio);
  1953  05A2  0020               	movlb	0	; select bank0
  1954  05A3  083B               	movf	initRadio@radio,w
  1955  05A4  3184  2414  3185   	fcall	_setRecommendedParams
  1956                           
  1957                           ;RFM69HCW.c: 131:     setModulationThreshold(radio);
  1958  05A7  0020               	movlb	0	; select bank0
  1959  05A8  083B               	movf	initRadio@radio,w
  1960  05A9  3184  2422  3185   	fcall	_setModulationThreshold
  1961                           
  1962                           ;RFM69HCW.c: 132:     setOperatingMode(radio);
  1963  05AC  0020               	movlb	0	; select bank0
  1964  05AD  083B               	movf	initRadio@radio,w
  1965  05AE  3185  2506  3185   	fcall	_setOperatingMode
  1966                           
  1967                           ;RFM69HCW.c: 133:     setPreambleLength(radio);
  1968  05B1  0020               	movlb	0	; select bank0
  1969  05B2  083B               	movf	initRadio@radio,w
  1970  05B3  3184  245B  3185   	fcall	_setPreambleLength
  1971                           
  1972                           ;RFM69HCW.c: 134:     setPacketFormat(radio);
  1973  05B6  0020               	movlb	0	; select bank0
  1974  05B7  083B               	movf	initRadio@radio,w
  1975  05B8  3184  2434         	fcall	_setPacketFormat
  1976  05BA  0008               	return
  1977  05BB                     __end_of_initRadio:	
  1978                           
  1979                           	psect	text4
  1980  05EF                     __ptext4:	
  1981 ;; *************** function _setSyncWords *****************
  1982 ;; Defined at:
  1983 ;;		line 61 in file "RFM69HCW.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;  radio           1    wreg     PTR struct RFM69HCW
  1986 ;;		 -> radio(35), 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  radio           1   24[BANK0 ] PTR struct RFM69HCW
  1989 ;;		 -> radio(35), 
  1990 ;;  i               2   25[BANK0 ] int 
  1991 ;;  msg            10   14[BANK0 ] unsigned char [10]
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2002 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2003 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2004 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2005 ;;Total ram usage:       15 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    3
  2008 ;; This function calls:
  2009 ;;		_sendBulk
  2010 ;; This function is called by:
  2011 ;;		_initRadio
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           
  2016                           ;psect for function _setSyncWords
  2017  05EF                     _setSyncWords:	
  2018                           
  2019                           ;incstack = 0
  2020                           ; Regs used in _setSyncWords: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2021                           ;setSyncWords@radio stored from wreg
  2022  05EF  0020               	movlb	0	; select bank0
  2023  05F0  00B8               	movwf	setSyncWords@radio
  2024                           
  2025                           ;RFM69HCW.c: 62:     unsigned char msg[10];;RFM69HCW.c: 63:     msg[0]=0x2e|0x80; msg[1]
      +                          =0b10011000;
  2026  05F1  30AE               	movlw	174
  2027  05F2  00AC               	movwf	??_setSyncWords
  2028  05F3  082C               	movf	??_setSyncWords,w
  2029  05F4  00AE               	movwf	setSyncWords@msg
  2030  05F5  3098               	movlw	152
  2031  05F6  00AC               	movwf	??_setSyncWords
  2032  05F7  082C               	movf	??_setSyncWords,w
  2033  05F8  00AF               	movwf	setSyncWords@msg+1
  2034                           
  2035                           ;RFM69HCW.c: 64:     for(int i=2;i<10;i++){
  2036  05F9  3002               	movlw	2
  2037  05FA  00B9               	movwf	setSyncWords@i
  2038  05FB  3000               	movlw	0
  2039  05FC  00BA               	movwf	setSyncWords@i+1
  2040  05FD                     l1122:	
  2041                           
  2042                           ;RFM69HCW.c: 65:         msg[i]=radio->sync_words[i-2];
  2043  05FD  0020               	movlb	0	; select bank0
  2044  05FE  0839               	movf	setSyncWords@i,w
  2045  05FF  0738               	addwf	setSyncWords@radio,w
  2046  0600  00AC               	movwf	??_setSyncWords
  2047  0601  082C               	movf	??_setSyncWords,w
  2048  0602  3E18               	addlw	24
  2049  0603  0086               	movwf	6
  2050  0604  0187               	clrf	7
  2051  0605  0801               	movf	1,w
  2052  0606  00AD               	movwf	??_setSyncWords+1
  2053  0607  0839               	movf	setSyncWords@i,w
  2054  0608  3E2E               	addlw	(low (setSyncWords@msg| 0))& (0+255)
  2055  0609  0086               	movwf	6
  2056  060A  0187               	clrf	7
  2057  060B  082D               	movf	??_setSyncWords+1,w
  2058  060C  0081               	movwf	1
  2059                           
  2060                           ;RFM69HCW.c: 66:     }
  2061  060D  3001               	movlw	1
  2062  060E  07B9               	addwf	setSyncWords@i,f
  2063  060F  3000               	movlw	0
  2064  0610  3DBA               	addwfc	setSyncWords@i+1,f
  2065  0611  083A               	movf	setSyncWords@i+1,w
  2066  0612  3A80               	xorlw	128
  2067  0613  00AC               	movwf	??_setSyncWords
  2068  0614  3080               	movlw	128
  2069  0615  022C               	subwf	??_setSyncWords,w
  2070  0616  1D03               	skipz
  2071  0617  2E1A               	goto	u295
  2072  0618  300A               	movlw	10
  2073  0619  0239               	subwf	setSyncWords@i,w
  2074  061A                     u295:	
  2075  061A  1C03               	skipc
  2076  061B  2DFD               	goto	l1122
  2077                           
  2078                           ;RFM69HCW.c: 67:     sendBulk(radio,msg,10);
  2079  061C  302E               	movlw	(low (setSyncWords@msg| 0))& (0+255)
  2080  061D  0020               	movlb	0	; select bank0
  2081  061E  00AC               	movwf	??_setSyncWords
  2082  061F  082C               	movf	??_setSyncWords,w
  2083  0620  00A6               	movwf	sendBulk@msgs
  2084  0621  300A               	movlw	10
  2085  0622  00AD               	movwf	??_setSyncWords+1
  2086  0623  082D               	movf	??_setSyncWords+1,w
  2087  0624  00A7               	movwf	sendBulk@len
  2088  0625  0838               	movf	setSyncWords@radio,w
  2089  0626  3186  26BB         	fcall	_sendBulk
  2090  0628  0008               	return
  2091  0629                     __end_of_setSyncWords:	
  2092                           
  2093                           	psect	text5
  2094  0414                     __ptext5:	
  2095 ;; *************** function _setRecommendedParams *****************
  2096 ;; Defined at:
  2097 ;;		line 95 in file "RFM69HCW.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  radio           1    wreg     PTR struct RFM69HCW
  2100 ;;		 -> radio(35), 
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;  radio           1   23[BANK0 ] PTR struct RFM69HCW
  2103 ;;		 -> radio(35), 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2114 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2115 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2116 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2117 ;;Total ram usage:        2 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    4
  2120 ;; This function calls:
  2121 ;;		_sendPairs
  2122 ;; This function is called by:
  2123 ;;		_initRadio
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           
  2128                           ;psect for function _setRecommendedParams
  2129  0414                     _setRecommendedParams:	
  2130                           
  2131                           ;incstack = 0
  2132                           ; Regs used in _setRecommendedParams: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2133                           ;setRecommendedParams@radio stored from wreg
  2134  0414  0020               	movlb	0	; select bank0
  2135  0415  00B7               	movwf	setRecommendedParams@radio
  2136                           
  2137                           ;RFM69HCW.c: 96:     sendPairs(radio, recommended_params, 10);
  2138  0416  30E5               	movlw	(low (_recommended_params| 0))& (0+255)
  2139  0417  00B6               	movwf	??_setRecommendedParams
  2140  0418  0836               	movf	??_setRecommendedParams,w
  2141  0419  00AC               	movwf	sendPairs@msgs
  2142  041A  300A               	movlw	10
  2143  041B  00AD               	movwf	sendPairs@len
  2144  041C  3000               	movlw	0
  2145  041D  00AE               	movwf	sendPairs@len+1
  2146  041E  0837               	movf	setRecommendedParams@radio,w
  2147  041F  3186  2629         	fcall	_sendPairs
  2148  0421  0008               	return
  2149  0422                     __end_of_setRecommendedParams:	
  2150                           
  2151                           	psect	text6
  2152  0629                     __ptext6:	
  2153 ;; *************** function _sendPairs *****************
  2154 ;; Defined at:
  2155 ;;		line 7 in file "RFM69HCW.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  radio           1    wreg     PTR struct RFM69HCW
  2158 ;;		 -> radio(35), 
  2159 ;;  msgs            1   12[BANK0 ] PTR unsigned char 
  2160 ;;		 -> recommended_params(10), 
  2161 ;;  len             2   13[BANK0 ] const int 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  radio           1   17[BANK0 ] PTR struct RFM69HCW
  2164 ;;		 -> radio(35), 
  2165 ;;  i               2   20[BANK0 ] int 
  2166 ;;  msg             2   18[BANK0 ] unsigned char [2]
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2176 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2177 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2178 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2179 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2180 ;;Total ram usage:       10 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    3
  2183 ;; This function calls:
  2184 ;;		_sendBulk
  2185 ;; This function is called by:
  2186 ;;		_setRecommendedParams
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           
  2191                           ;psect for function _sendPairs
  2192  0629                     _sendPairs:	
  2193                           
  2194                           ;incstack = 0
  2195                           ; Regs used in _sendPairs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2196                           ;sendPairs@radio stored from wreg
  2197  0629  0020               	movlb	0	; select bank0
  2198  062A  00B1               	movwf	sendPairs@radio
  2199                           
  2200                           ;RFM69HCW.c: 8:     byte msg[2] ={0};
  2201  062B  01B2               	clrf	sendPairs@msg
  2202  062C  01B3               	clrf	sendPairs@msg+1
  2203                           
  2204                           ;RFM69HCW.c: 9:     for(int i=0;i<len;i+=2){
  2205  062D  01B4               	clrf	sendPairs@i
  2206  062E  01B5               	clrf	sendPairs@i+1
  2207  062F  082E               	movf	sendPairs@len+1,w
  2208  0630  3A80               	xorlw	128
  2209  0631  00AF               	movwf	??_sendPairs
  2210  0632  3080               	movlw	128
  2211  0633  022F               	subwf	??_sendPairs,w
  2212  0634  1D03               	skipz
  2213  0635  2E38               	goto	u275
  2214  0636  3001               	movlw	1
  2215  0637  022D               	subwf	sendPairs@len,w
  2216  0638                     u275:	
  2217  0638  1C03               	btfss	3,0
  2218  0639  0008               	return
  2219  063A                     l1082:	
  2220                           
  2221                           ;RFM69HCW.c: 10:         msg[0]=msgs[i];msg[1]=msgs[i+1];
  2222  063A  0020               	movlb	0	; select bank0
  2223  063B  0834               	movf	sendPairs@i,w
  2224  063C  072C               	addwf	sendPairs@msgs,w
  2225  063D  00AF               	movwf	??_sendPairs
  2226  063E  082F               	movf	??_sendPairs,w
  2227  063F  0086               	movwf	6
  2228  0640  0187               	clrf	7
  2229  0641  0801               	movf	1,w
  2230  0642  00B0               	movwf	??_sendPairs+1
  2231  0643  0830               	movf	??_sendPairs+1,w
  2232  0644  00B2               	movwf	sendPairs@msg
  2233  0645  0834               	movf	sendPairs@i,w
  2234  0646  072C               	addwf	sendPairs@msgs,w
  2235  0647  00AF               	movwf	??_sendPairs
  2236  0648  082F               	movf	??_sendPairs,w
  2237  0649  0086               	movwf	6
  2238  064A  0187               	clrf	7
  2239  064B  3F41               	moviw [1]fsr1
  2240  064C  00B3               	movwf	sendPairs@msg+1
  2241                           
  2242                           ;RFM69HCW.c: 11:         sendBulk(radio, msg,2);
  2243  064D  3032               	movlw	(low (sendPairs@msg| 0))& (0+255)
  2244  064E  00AF               	movwf	??_sendPairs
  2245  064F  082F               	movf	??_sendPairs,w
  2246  0650  00A6               	movwf	sendBulk@msgs
  2247  0651  3002               	movlw	2
  2248  0652  00B0               	movwf	??_sendPairs+1
  2249  0653  0830               	movf	??_sendPairs+1,w
  2250  0654  00A7               	movwf	sendBulk@len
  2251  0655  0831               	movf	sendPairs@radio,w
  2252  0656  3186  26BB  3186   	fcall	_sendBulk
  2253                           
  2254                           ;RFM69HCW.c: 12:     }
  2255  0659  3002               	movlw	2
  2256  065A  0020               	movlb	0	; select bank0
  2257  065B  07B4               	addwf	sendPairs@i,f
  2258  065C  3000               	movlw	0
  2259  065D  3DB5               	addwfc	sendPairs@i+1,f
  2260  065E  0835               	movf	sendPairs@i+1,w
  2261  065F  3A80               	xorlw	128
  2262  0660  00AF               	movwf	??_sendPairs
  2263  0661  082E               	movf	sendPairs@len+1,w
  2264  0662  3A80               	xorlw	128
  2265  0663  022F               	subwf	??_sendPairs,w
  2266  0664  1D03               	skipz
  2267  0665  2E68               	goto	u285
  2268  0666  082D               	movf	sendPairs@len,w
  2269  0667  0234               	subwf	sendPairs@i,w
  2270  0668                     u285:	
  2271  0668  1803               	btfsc	3,0
  2272  0669  0008               	return
  2273  066A  2E3A               	goto	l1082
  2274  066B                     __end_of_sendPairs:	
  2275                           
  2276                           	psect	text7
  2277  04D1                     __ptext7:	
  2278 ;; *************** function _setRSSIThreshold *****************
  2279 ;; Defined at:
  2280 ;;		line 80 in file "RFM69HCW.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;  radio           1    wreg     PTR struct RFM69HCW
  2283 ;;		 -> radio(35), 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  radio           1   16[BANK0 ] PTR struct RFM69HCW
  2286 ;;		 -> radio(35), 
  2287 ;;  msg             2   14[BANK0 ] unsigned char [2]
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      void 
  2290 ;; Registers used:
  2291 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2298 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2299 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2300 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2301 ;;Total ram usage:        5 bytes
  2302 ;; Hardware stack levels used:    1
  2303 ;; Hardware stack levels required when called:    3
  2304 ;; This function calls:
  2305 ;;		_sendBulk
  2306 ;; This function is called by:
  2307 ;;		_initRadio
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           
  2312                           ;psect for function _setRSSIThreshold
  2313  04D1                     _setRSSIThreshold:	
  2314                           
  2315                           ;incstack = 0
  2316                           ; Regs used in _setRSSIThreshold: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2317                           ;setRSSIThreshold@radio stored from wreg
  2318  04D1  0020               	movlb	0	; select bank0
  2319  04D2  00B0               	movwf	setRSSIThreshold@radio
  2320                           
  2321                           ;RFM69HCW.c: 81:     byte msg[] = {0x29|0x80, radio->RSSI_threshold};
  2322  04D3  01AE               	clrf	setRSSIThreshold@msg
  2323  04D4  01AF               	clrf	setRSSIThreshold@msg+1
  2324  04D5  30A9               	movlw	169
  2325  04D6  00AC               	movwf	??_setRSSIThreshold
  2326  04D7  082C               	movf	??_setRSSIThreshold,w
  2327  04D8  00AE               	movwf	setRSSIThreshold@msg
  2328  04D9  0830               	movf	setRSSIThreshold@radio,w
  2329  04DA  0086               	movwf	6
  2330  04DB  0187               	clrf	7
  2331  04DC  3F59               	moviw [25]fsr1
  2332  04DD  00AF               	movwf	setRSSIThreshold@msg+1
  2333                           
  2334                           ;RFM69HCW.c: 82:     sendBulk(radio, msg, 2);
  2335  04DE  302E               	movlw	(low (setRSSIThreshold@msg| 0))& (0+255)
  2336  04DF  00AC               	movwf	??_setRSSIThreshold
  2337  04E0  082C               	movf	??_setRSSIThreshold,w
  2338  04E1  00A6               	movwf	sendBulk@msgs
  2339  04E2  3002               	movlw	2
  2340  04E3  00AD               	movwf	??_setRSSIThreshold+1
  2341  04E4  082D               	movf	??_setRSSIThreshold+1,w
  2342  04E5  00A7               	movwf	sendBulk@len
  2343  04E6  0830               	movf	setRSSIThreshold@radio,w
  2344  04E7  3186  26BB         	fcall	_sendBulk
  2345  04E9  0008               	return
  2346  04EA                     __end_of_setRSSIThreshold:	
  2347                           
  2348                           	psect	text8
  2349  045B                     __ptext8:	
  2350 ;; *************** function _setPreambleLength *****************
  2351 ;; Defined at:
  2352 ;;		line 119 in file "RFM69HCW.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;  radio           1    wreg     PTR struct RFM69HCW
  2355 ;;		 -> radio(35), 
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;  radio           1   16[BANK0 ] PTR struct RFM69HCW
  2358 ;;		 -> radio(35), 
  2359 ;;  msg             2   14[BANK0 ] unsigned char [2]
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      void 
  2362 ;; Registers used:
  2363 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2370 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2371 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2372 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2373 ;;Total ram usage:        5 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    3
  2376 ;; This function calls:
  2377 ;;		_sendBulk
  2378 ;; This function is called by:
  2379 ;;		_initRadio
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           
  2384                           ;psect for function _setPreambleLength
  2385  045B                     _setPreambleLength:	
  2386                           
  2387                           ;incstack = 0
  2388                           ; Regs used in _setPreambleLength: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2389                           ;setPreambleLength@radio stored from wreg
  2390  045B  0020               	movlb	0	; select bank0
  2391  045C  00B0               	movwf	setPreambleLength@radio
  2392                           
  2393                           ;RFM69HCW.c: 120:     byte msg[] = {0x2d|0x80, 0xC};
  2394  045D  0021               	movlb	1	; select bank1
  2395  045E  0864               	movf	(setPreambleLength@F9424+1)^(0+128),w
  2396  045F  0020               	movlb	0	; select bank0
  2397  0460  00AF               	movwf	setPreambleLength@msg+1
  2398  0461  0021               	movlb	1	; select bank1
  2399  0462  0863               	movf	setPreambleLength@F9424^(0+128),w
  2400  0463  0020               	movlb	0	; select bank0
  2401  0464  00AE               	movwf	setPreambleLength@msg
  2402                           
  2403                           ;RFM69HCW.c: 121:     sendBulk(radio, msg, 2);
  2404  0465  302E               	movlw	(low (setPreambleLength@msg| 0))& (0+255)
  2405  0466  00AC               	movwf	??_setPreambleLength
  2406  0467  082C               	movf	??_setPreambleLength,w
  2407  0468  00A6               	movwf	sendBulk@msgs
  2408  0469  3002               	movlw	2
  2409  046A  00AD               	movwf	??_setPreambleLength+1
  2410  046B  082D               	movf	??_setPreambleLength+1,w
  2411  046C  00A7               	movwf	sendBulk@len
  2412  046D  0830               	movf	setPreambleLength@radio,w
  2413  046E  3186  26BB         	fcall	_sendBulk
  2414  0470  0008               	return
  2415  0471                     __end_of_setPreambleLength:	
  2416                           
  2417                           	psect	text9
  2418  04B8                     __ptext9:	
  2419 ;; *************** function _setPacketLength *****************
  2420 ;; Defined at:
  2421 ;;		line 70 in file "RFM69HCW.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  radio           1    wreg     PTR struct RFM69HCW
  2424 ;;		 -> radio(35), 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  radio           1   16[BANK0 ] PTR struct RFM69HCW
  2427 ;;		 -> radio(35), 
  2428 ;;  msg             2   14[BANK0 ] unsigned char [2]
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2439 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2440 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2441 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2442 ;;Total ram usage:        5 bytes
  2443 ;; Hardware stack levels used:    1
  2444 ;; Hardware stack levels required when called:    3
  2445 ;; This function calls:
  2446 ;;		_sendBulk
  2447 ;; This function is called by:
  2448 ;;		_initRadio
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           
  2453                           ;psect for function _setPacketLength
  2454  04B8                     _setPacketLength:	
  2455                           
  2456                           ;incstack = 0
  2457                           ; Regs used in _setPacketLength: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2458                           ;setPacketLength@radio stored from wreg
  2459  04B8  0020               	movlb	0	; select bank0
  2460  04B9  00B0               	movwf	setPacketLength@radio
  2461                           
  2462                           ;RFM69HCW.c: 71:     byte msg[] = {0x38|0x80, radio->packet_length};
  2463  04BA  01AE               	clrf	setPacketLength@msg
  2464  04BB  01AF               	clrf	setPacketLength@msg+1
  2465  04BC  30B8               	movlw	184
  2466  04BD  00AC               	movwf	??_setPacketLength
  2467  04BE  082C               	movf	??_setPacketLength,w
  2468  04BF  00AE               	movwf	setPacketLength@msg
  2469  04C0  0830               	movf	setPacketLength@radio,w
  2470  04C1  0086               	movwf	6
  2471  04C2  0187               	clrf	7
  2472  04C3  3F57               	moviw [23]fsr1
  2473  04C4  00AF               	movwf	setPacketLength@msg+1
  2474                           
  2475                           ;RFM69HCW.c: 72:     sendBulk(radio, msg, 2);
  2476  04C5  302E               	movlw	(low (setPacketLength@msg| 0))& (0+255)
  2477  04C6  00AC               	movwf	??_setPacketLength
  2478  04C7  082C               	movf	??_setPacketLength,w
  2479  04C8  00A6               	movwf	sendBulk@msgs
  2480  04C9  3002               	movlw	2
  2481  04CA  00AD               	movwf	??_setPacketLength+1
  2482  04CB  082D               	movf	??_setPacketLength+1,w
  2483  04CC  00A7               	movwf	sendBulk@len
  2484  04CD  0830               	movf	setPacketLength@radio,w
  2485  04CE  3186  26BB         	fcall	_sendBulk
  2486  04D0  0008               	return
  2487  04D1                     __end_of_setPacketLength:	
  2488                           
  2489                           	psect	text10
  2490  0434                     __ptext10:	
  2491 ;; *************** function _setPacketFormat *****************
  2492 ;; Defined at:
  2493 ;;		line 85 in file "RFM69HCW.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;  radio           1    wreg     PTR struct RFM69HCW
  2496 ;;		 -> radio(35), 
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;  radio           1   16[BANK0 ] PTR struct RFM69HCW
  2499 ;;		 -> radio(35), 
  2500 ;;  msg             2   14[BANK0 ] unsigned char [2]
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2511 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2512 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2513 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2514 ;;Total ram usage:        5 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    3
  2517 ;; This function calls:
  2518 ;;		_sendBulk
  2519 ;; This function is called by:
  2520 ;;		_initRadio
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           
  2525                           ;psect for function _setPacketFormat
  2526  0434                     _setPacketFormat:	
  2527                           
  2528                           ;incstack = 0
  2529                           ; Regs used in _setPacketFormat: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2530                           ;setPacketFormat@radio stored from wreg
  2531  0434  0020               	movlb	0	; select bank0
  2532  0435  00B0               	movwf	setPacketFormat@radio
  2533                           
  2534                           ;RFM69HCW.c: 86:     byte msg[] = {0x37|0x80, 0b00010000};
  2535  0436  086E               	movf	setPacketFormat@F9402+1,w
  2536  0437  00AF               	movwf	setPacketFormat@msg+1
  2537  0438  086D               	movf	setPacketFormat@F9402,w
  2538  0439  00AE               	movwf	setPacketFormat@msg
  2539                           
  2540                           ;RFM69HCW.c: 87:     sendBulk(radio, msg, 2);
  2541  043A  302E               	movlw	(low (setPacketFormat@msg| 0))& (0+255)
  2542  043B  00AC               	movwf	??_setPacketFormat
  2543  043C  082C               	movf	??_setPacketFormat,w
  2544  043D  00A6               	movwf	sendBulk@msgs
  2545  043E  3002               	movlw	2
  2546  043F  00AD               	movwf	??_setPacketFormat+1
  2547  0440  082D               	movf	??_setPacketFormat+1,w
  2548  0441  00A7               	movwf	sendBulk@len
  2549  0442  0830               	movf	setPacketFormat@radio,w
  2550  0443  3186  26BB         	fcall	_sendBulk
  2551  0445  0008               	return
  2552  0446                     __end_of_setPacketFormat:	
  2553                           
  2554                           	psect	text11
  2555  0506                     __ptext11:	
  2556 ;; *************** function _setOperatingMode *****************
  2557 ;; Defined at:
  2558 ;;		line 90 in file "RFM69HCW.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  radio           1    wreg     PTR struct RFM69HCW
  2561 ;;		 -> radio(35), 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  radio           1   16[BANK0 ] PTR struct RFM69HCW
  2564 ;;		 -> radio(35), 
  2565 ;;  msg             2   14[BANK0 ] unsigned char [2]
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      void 
  2568 ;; Registers used:
  2569 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2576 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2577 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2578 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2579 ;;Total ram usage:        5 bytes
  2580 ;; Hardware stack levels used:    1
  2581 ;; Hardware stack levels required when called:    3
  2582 ;; This function calls:
  2583 ;;		_sendBulk
  2584 ;; This function is called by:
  2585 ;;		_main
  2586 ;;		_initRadio
  2587 ;;		_sendPayload
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           
  2592                           ;psect for function _setOperatingMode
  2593  0506                     _setOperatingMode:	
  2594                           
  2595                           ;incstack = 0
  2596                           ; Regs used in _setOperatingMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2597                           ;setOperatingMode@radio stored from wreg
  2598  0506  0020               	movlb	0	; select bank0
  2599  0507  00B0               	movwf	setOperatingMode@radio
  2600                           
  2601                           ;RFM69HCW.c: 91:     byte msg[] = {0x01|0x80, radio->operating_mode};
  2602  0508  01AE               	clrf	setOperatingMode@msg
  2603  0509  01AF               	clrf	setOperatingMode@msg+1
  2604  050A  3081               	movlw	129
  2605  050B  00AC               	movwf	??_setOperatingMode
  2606  050C  082C               	movf	??_setOperatingMode,w
  2607  050D  00AE               	movwf	setOperatingMode@msg
  2608  050E  0830               	movf	setOperatingMode@radio,w
  2609  050F  3E22               	addlw	34
  2610  0510  0086               	movwf	6
  2611  0511  0187               	clrf	7
  2612  0512  0801               	movf	1,w
  2613  0513  00AC               	movwf	??_setOperatingMode
  2614  0514  082C               	movf	??_setOperatingMode,w
  2615  0515  00AF               	movwf	setOperatingMode@msg+1
  2616                           
  2617                           ;RFM69HCW.c: 92:     sendBulk(radio, msg, 2);
  2618  0516  302E               	movlw	(low (setOperatingMode@msg| 0))& (0+255)
  2619  0517  00AC               	movwf	??_setOperatingMode
  2620  0518  082C               	movf	??_setOperatingMode,w
  2621  0519  00A6               	movwf	sendBulk@msgs
  2622  051A  3002               	movlw	2
  2623  051B  00AD               	movwf	??_setOperatingMode+1
  2624  051C  082D               	movf	??_setOperatingMode+1,w
  2625  051D  00A7               	movwf	sendBulk@len
  2626  051E  0830               	movf	setOperatingMode@radio,w
  2627  051F  3186  26BB         	fcall	_sendBulk
  2628  0521  0008               	return
  2629  0522                     __end_of_setOperatingMode:	
  2630                           
  2631                           	psect	text12
  2632  049F                     __ptext12:	
  2633 ;; *************** function _setNodeAddress *****************
  2634 ;; Defined at:
  2635 ;;		line 75 in file "RFM69HCW.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  radio           1    wreg     PTR struct RFM69HCW
  2638 ;;		 -> radio(35), 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;  radio           1   16[BANK0 ] PTR struct RFM69HCW
  2641 ;;		 -> radio(35), 
  2642 ;;  msg             2   14[BANK0 ] unsigned char [2]
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      void 
  2645 ;; Registers used:
  2646 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2653 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2654 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2655 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2656 ;;Total ram usage:        5 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    3
  2659 ;; This function calls:
  2660 ;;		_sendBulk
  2661 ;; This function is called by:
  2662 ;;		_initRadio
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           
  2667                           ;psect for function _setNodeAddress
  2668  049F                     _setNodeAddress:	
  2669                           
  2670                           ;incstack = 0
  2671                           ; Regs used in _setNodeAddress: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2672                           ;setNodeAddress@radio stored from wreg
  2673  049F  0020               	movlb	0	; select bank0
  2674  04A0  00B0               	movwf	setNodeAddress@radio
  2675                           
  2676                           ;RFM69HCW.c: 76:     byte msg[] = {0x39|0x80, radio->node_address};
  2677  04A1  01AE               	clrf	setNodeAddress@msg
  2678  04A2  01AF               	clrf	setNodeAddress@msg+1
  2679  04A3  30B9               	movlw	185
  2680  04A4  00AC               	movwf	??_setNodeAddress
  2681  04A5  082C               	movf	??_setNodeAddress,w
  2682  04A6  00AE               	movwf	setNodeAddress@msg
  2683  04A7  0830               	movf	setNodeAddress@radio,w
  2684  04A8  0086               	movwf	6
  2685  04A9  0187               	clrf	7
  2686  04AA  3F58               	moviw [24]fsr1
  2687  04AB  00AF               	movwf	setNodeAddress@msg+1
  2688                           
  2689                           ;RFM69HCW.c: 77:     sendBulk(radio, msg, 2);
  2690  04AC  302E               	movlw	(low (setNodeAddress@msg| 0))& (0+255)
  2691  04AD  00AC               	movwf	??_setNodeAddress
  2692  04AE  082C               	movf	??_setNodeAddress,w
  2693  04AF  00A6               	movwf	sendBulk@msgs
  2694  04B0  3002               	movlw	2
  2695  04B1  00AD               	movwf	??_setNodeAddress+1
  2696  04B2  082D               	movf	??_setNodeAddress+1,w
  2697  04B3  00A7               	movwf	sendBulk@len
  2698  04B4  0830               	movf	setNodeAddress@radio,w
  2699  04B5  3186  26BB         	fcall	_sendBulk
  2700  04B7  0008               	return
  2701  04B8                     __end_of_setNodeAddress:	
  2702                           
  2703                           	psect	text13
  2704  0422                     __ptext13:	
  2705 ;; *************** function _setModulationThreshold *****************
  2706 ;; Defined at:
  2707 ;;		line 99 in file "RFM69HCW.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  radio           1    wreg     PTR struct RFM69HCW
  2710 ;;		 -> radio(35), 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  radio           1   16[BANK0 ] PTR struct RFM69HCW
  2713 ;;		 -> radio(35), 
  2714 ;;  msg             2   14[BANK0 ] unsigned char [2]
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2725 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2726 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2727 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2728 ;;Total ram usage:        5 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:    3
  2731 ;; This function calls:
  2732 ;;		_sendBulk
  2733 ;; This function is called by:
  2734 ;;		_initRadio
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           
  2739                           ;psect for function _setModulationThreshold
  2740  0422                     _setModulationThreshold:	
  2741                           
  2742                           ;incstack = 0
  2743                           ; Regs used in _setModulationThreshold: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  2744                           ;setModulationThreshold@radio stored from wreg
  2745  0422  0020               	movlb	0	; select bank0
  2746  0423  00B0               	movwf	setModulationThreshold@radio
  2747                           
  2748                           ;RFM69HCW.c: 100:     byte msg[] = {0x3C|0x80, 7};
  2749  0424  086C               	movf	setModulationThreshold@F9412+1,w
  2750  0425  00AF               	movwf	setModulationThreshold@msg+1
  2751  0426  086B               	movf	setModulationThreshold@F9412,w
  2752  0427  00AE               	movwf	setModulationThreshold@msg
  2753                           
  2754                           ;RFM69HCW.c: 101:     sendBulk(radio, msg, 2);
  2755  0428  302E               	movlw	(low (setModulationThreshold@msg| 0))& (0+255)
  2756  0429  00AC               	movwf	??_setModulationThreshold
  2757  042A  082C               	movf	??_setModulationThreshold,w
  2758  042B  00A6               	movwf	sendBulk@msgs
  2759  042C  3002               	movlw	2
  2760  042D  00AD               	movwf	??_setModulationThreshold+1
  2761  042E  082D               	movf	??_setModulationThreshold+1,w
  2762  042F  00A7               	movwf	sendBulk@len
  2763  0430  0830               	movf	setModulationThreshold@radio,w
  2764  0431  3186  26BB         	fcall	_sendBulk
  2765  0433  0008               	return
  2766  0434                     __end_of_setModulationThreshold:	
  2767                           
  2768                           	psect	text14
  2769  06BB                     __ptext14:	
  2770 ;; *************** function _sendBulk *****************
  2771 ;; Defined at:
  2772 ;;		line 15 in file "RFM69HCW.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  radio           1    wreg     PTR struct RFM69HCW
  2775 ;;		 -> radio(35), 
  2776 ;;  msgs            1    6[BANK0 ] PTR unsigned char 
  2777 ;;		 -> getRSSI@msg(2), setPowerOutput@msg(2), setPreambleLength@msg(2), checkForPayload@flags(2), 
  2778 ;;		 -> setModulationThreshold@msg(2), setOperatingMode@msg(2), setPacketFormat@msg(2), setRSSIThreshold@msg(2), 
  2779 ;;		 -> setNodeAddress@msg(2), setPacketLength@msg(2), setSyncWords@msg(10), sendPairs@msg(2), 
  2780 ;;  len             1    7[BANK0 ] const unsigned char 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;  radio           1   13[COMMON] PTR struct RFM69HCW
  2783 ;;		 -> radio(35), 
  2784 ;;  i               2   11[COMMON] int 
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      void 
  2787 ;; Registers used:
  2788 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2794 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2795 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2796 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2797 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2798 ;;Total ram usage:        9 bytes
  2799 ;; Hardware stack levels used:    1
  2800 ;; Hardware stack levels required when called:    2
  2801 ;; This function calls:
  2802 ;;		_send
  2803 ;;		_setPinWithMask
  2804 ;; This function is called by:
  2805 ;;		_sendPairs
  2806 ;;		_setSyncWords
  2807 ;;		_setPacketLength
  2808 ;;		_setNodeAddress
  2809 ;;		_setRSSIThreshold
  2810 ;;		_setPacketFormat
  2811 ;;		_setOperatingMode
  2812 ;;		_setModulationThreshold
  2813 ;;		_setPreambleLength
  2814 ;;		_setPowerOutput
  2815 ;;		_checkForPayload
  2816 ;;		_getRSSI
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           
  2821                           ;psect for function _sendBulk
  2822  06BB                     _sendBulk:	
  2823                           
  2824                           ;incstack = 0
  2825                           ; Regs used in _sendBulk: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2826                           ;sendBulk@radio stored from wreg
  2827  06BB  00FD               	movwf	sendBulk@radio
  2828                           
  2829                           ;RFM69HCW.c: 16:     setPinWithMask(radio->SSport, radio->SSbit, 0);
  2830  06BC  087D               	movf	sendBulk@radio,w
  2831  06BD  3E14               	addlw	20
  2832  06BE  0086               	movwf	6
  2833  06BF  0187               	clrf	7
  2834  06C0  3F40               	moviw [0]fsr1
  2835  06C1  00F0               	movwf	setPinWithMask@pPort
  2836  06C2  3F41               	moviw [1]fsr1
  2837  06C3  00F1               	movwf	setPinWithMask@pPort+1
  2838  06C4  087D               	movf	sendBulk@radio,w
  2839  06C5  0086               	movwf	6
  2840  06C6  0187               	clrf	7
  2841  06C7  3F56               	moviw [22]fsr1
  2842  06C8  00F2               	movwf	setPinWithMask@iPin
  2843  06C9  01F3               	clrf	setPinWithMask@value
  2844  06CA  3185  2564  3186   	fcall	_setPinWithMask
  2845                           
  2846                           ;RFM69HCW.c: 17:     for(int i=0; i<len; i++){
  2847  06CD  01FB               	clrf	sendBulk@i
  2848  06CE  01FC               	clrf	sendBulk@i+1
  2849  06CF  0020               	movlb	0	; select bank0
  2850  06D0  0827               	movf	sendBulk@len,w
  2851  06D1  1903               	btfsc	3,2
  2852  06D2  2EFB               	goto	l1044
  2853  06D3                     l1038:	
  2854                           
  2855                           ;RFM69HCW.c: 18:         msgs[i]=send(radio, msgs[i]);
  2856  06D3  087B               	movf	sendBulk@i,w
  2857  06D4  0020               	movlb	0	; select bank0
  2858  06D5  0726               	addwf	sendBulk@msgs,w
  2859  06D6  00A8               	movwf	??_sendBulk
  2860  06D7  0828               	movf	??_sendBulk,w
  2861  06D8  0086               	movwf	6
  2862  06D9  0187               	clrf	7
  2863  06DA  0801               	movf	1,w
  2864  06DB  00A9               	movwf	??_sendBulk+1
  2865  06DC  0829               	movf	??_sendBulk+1,w
  2866  06DD  00F8               	movwf	send@msg
  2867  06DE  087D               	movf	sendBulk@radio,w
  2868  06DF  3186  266B  3186   	fcall	_send
  2869  06E2  0020               	movlb	0	; select bank0
  2870  06E3  00AA               	movwf	??_sendBulk+2
  2871  06E4  087B               	movf	sendBulk@i,w
  2872  06E5  0726               	addwf	sendBulk@msgs,w
  2873  06E6  00AB               	movwf	??_sendBulk+3
  2874  06E7  082B               	movf	??_sendBulk+3,w
  2875  06E8  0086               	movwf	6
  2876  06E9  0187               	clrf	7
  2877  06EA  082A               	movf	??_sendBulk+2,w
  2878  06EB  0081               	movwf	1
  2879                           
  2880                           ;RFM69HCW.c: 19:     }
  2881  06EC  3001               	movlw	1
  2882  06ED  07FB               	addwf	sendBulk@i,f
  2883  06EE  3000               	movlw	0
  2884  06EF  3DFC               	addwfc	sendBulk@i+1,f
  2885  06F0  087C               	movf	sendBulk@i+1,w
  2886  06F1  3A80               	xorlw	128
  2887  06F2  00A8               	movwf	??_sendBulk
  2888  06F3  3080               	movlw	128
  2889  06F4  0228               	subwf	??_sendBulk,w
  2890  06F5  1D03               	skipz
  2891  06F6  2EF9               	goto	u265
  2892  06F7  0827               	movf	sendBulk@len,w
  2893  06F8  027B               	subwf	sendBulk@i,w
  2894  06F9                     u265:	
  2895  06F9  1C03               	skipc
  2896  06FA  2ED3               	goto	l1038
  2897  06FB                     l1044:	
  2898                           
  2899                           ;RFM69HCW.c: 20:     setPinWithMask(radio->SSport, radio->SSbit,1);
  2900  06FB  087D               	movf	sendBulk@radio,w
  2901  06FC  3E14               	addlw	20
  2902  06FD  0086               	movwf	6
  2903  06FE  0187               	clrf	7
  2904  06FF  3F40               	moviw [0]fsr1
  2905  0700  00F0               	movwf	setPinWithMask@pPort
  2906  0701  3F41               	moviw [1]fsr1
  2907  0702  00F1               	movwf	setPinWithMask@pPort+1
  2908  0703  087D               	movf	sendBulk@radio,w
  2909  0704  0086               	movwf	6
  2910  0705  0187               	clrf	7
  2911  0706  3F56               	moviw [22]fsr1
  2912  0707  00F2               	movwf	setPinWithMask@iPin
  2913  0708  01F3               	clrf	setPinWithMask@value
  2914  0709  0AF3               	incf	setPinWithMask@value,f
  2915  070A  3185  2564         	fcall	_setPinWithMask
  2916  070C  0008               	return
  2917  070D                     __end_of_sendBulk:	
  2918                           
  2919                           	psect	text15
  2920  0564                     __ptext15:	
  2921 ;; *************** function _setPinWithMask *****************
  2922 ;; Defined at:
  2923 ;;		line 43 in file "RFM69HCW.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  pPort           2    0[COMMON] PTR unsigned char 
  2926 ;;		 -> PORTA(1), 
  2927 ;;  iPin            1    2[COMMON] unsigned char 
  2928 ;;  value           1    3[COMMON] unsigned char 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;		None
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      void 
  2933 ;; Registers used:
  2934 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2940 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2942 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2943 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2944 ;;Total ram usage:        6 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_sendBulk
  2950 ;;		_sendPayload
  2951 ;;		_receivePayload
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function _setPinWithMask
  2957  0564                     _setPinWithMask:	
  2958                           
  2959                           ;RFM69HCW.c: 43: void setPinWithMask(byte* pPort, byte iPin, byte value);RFM69HCW.c: 44:
      +                             {;RFM69HCW.c: 45:     if(value==0){
  2960                           
  2961                           ;incstack = 0
  2962                           ; Regs used in _setPinWithMask: [wreg+fsr1l+fsr1h+status,2+status,0]
  2963  0564  0873               	movf	setPinWithMask@value,w
  2964  0565  1D03               	btfss	3,2
  2965  0566  2D78               	goto	l1002
  2966                           
  2967                           ;RFM69HCW.c: 46:        *pPort &= ~(1<<iPin);
  2968  0567  3001               	movlw	1
  2969  0568  00F4               	movwf	??_setPinWithMask
  2970  0569  0A72               	incf	setPinWithMask@iPin,w
  2971  056A  2D6C               	goto	u204
  2972  056B                     u205:	
  2973  056B  35F4               	lslf	??_setPinWithMask,f
  2974  056C                     u204:	
  2975  056C  0B89               	decfsz	9,f
  2976  056D  2D6B               	goto	u205
  2977  056E  0874               	movf	??_setPinWithMask,w
  2978  056F  3AFF               	xorlw	255
  2979  0570  00F5               	movwf	??_setPinWithMask+1
  2980  0571  0870               	movf	setPinWithMask@pPort,w
  2981  0572  0086               	movwf	6
  2982  0573  0871               	movf	setPinWithMask@pPort+1,w
  2983  0574  0087               	movwf	7
  2984  0575  0875               	movf	??_setPinWithMask+1,w
  2985  0576  0581               	andwf	1,f
  2986                           
  2987                           ;RFM69HCW.c: 47:     }else{
  2988  0577  0008               	return
  2989  0578                     l1002:	
  2990                           
  2991                           ;RFM69HCW.c: 48:        *pPort |= 1 << iPin;
  2992  0578  3001               	movlw	1
  2993  0579  00F4               	movwf	??_setPinWithMask
  2994  057A  0A72               	incf	setPinWithMask@iPin,w
  2995  057B  2D7D               	goto	u214
  2996  057C                     u215:	
  2997  057C  35F4               	lslf	??_setPinWithMask,f
  2998  057D                     u214:	
  2999  057D  0B89               	decfsz	9,f
  3000  057E  2D7C               	goto	u215
  3001  057F  0874               	movf	??_setPinWithMask,w
  3002  0580  00F5               	movwf	??_setPinWithMask+1
  3003  0581  0870               	movf	setPinWithMask@pPort,w
  3004  0582  0086               	movwf	6
  3005  0583  0871               	movf	setPinWithMask@pPort+1,w
  3006  0584  0087               	movwf	7
  3007  0585  0875               	movf	??_setPinWithMask+1,w
  3008  0586  0481               	iorwf	1,f
  3009  0587  0008               	return
  3010  0588                     __end_of_setPinWithMask:	
  3011                           
  3012                           	psect	text16
  3013  066B                     __ptext16:	
  3014 ;; *************** function _send *****************
  3015 ;; Defined at:
  3016 ;;		line 24 in file "RFM69HCW.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  radio           1    wreg     PTR struct RFM69HCW
  3019 ;;		 -> radio(35), 
  3020 ;;  msg             1    8[COMMON] unsigned char 
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;  radio           1    5[BANK0 ] PTR struct RFM69HCW
  3023 ;;		 -> radio(35), 
  3024 ;;  temp            1    1[BANK0 ] unsigned char 
  3025 ;;  i               2    3[BANK0 ] int 
  3026 ;;  returnMsg       1    2[BANK0 ] unsigned char 
  3027 ;;  test            1    0[BANK0 ] unsigned char 
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  1    wreg      unsigned char 
  3030 ;; Registers used:
  3031 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3037 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3038 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3039 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3040 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3041 ;;Total ram usage:        9 bytes
  3042 ;; Hardware stack levels used:    1
  3043 ;; Hardware stack levels required when called:    1
  3044 ;; This function calls:
  3045 ;;		_receive
  3046 ;; This function is called by:
  3047 ;;		_sendBulk
  3048 ;;		_sendPayload
  3049 ;;		_receivePayload
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           
  3054                           ;psect for function _send
  3055  066B                     _send:	
  3056                           
  3057                           ;incstack = 0
  3058                           ; Regs used in _send: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3059                           ;send@radio stored from wreg
  3060  066B  0020               	movlb	0	; select bank0
  3061  066C  00A5               	movwf	send@radio
  3062                           
  3063                           ;RFM69HCW.c: 25:     unsigned char test = msg;
  3064  066D  0878               	movf	send@msg,w
  3065  066E  00F9               	movwf	??_send
  3066  066F  0879               	movf	??_send,w
  3067  0670  00A0               	movwf	send@test
  3068                           
  3069                           ;RFM69HCW.c: 26:     for(int i=(10 -1); i>0; i--){
  3070  0671  3009               	movlw	9
  3071  0672  00A3               	movwf	send@i
  3072  0673  3000               	movlw	0
  3073  0674  00A4               	movwf	send@i+1
  3074  0675                     l1008:	
  3075                           
  3076                           ;RFM69HCW.c: 27:         unsigned char temp = radio->previous_msgs[i-1];
  3077  0675  0020               	movlb	0	; select bank0
  3078  0676  0823               	movf	send@i,w
  3079  0677  0725               	addwf	send@radio,w
  3080  0678  00F9               	movwf	??_send
  3081  0679  0879               	movf	??_send,w
  3082  067A  3EFF               	addlw	255
  3083  067B  0086               	movwf	6
  3084  067C  0187               	clrf	7
  3085  067D  0801               	movf	1,w
  3086  067E  00FA               	movwf	??_send+1
  3087  067F  087A               	movf	??_send+1,w
  3088  0680  00A1               	movwf	send@temp
  3089                           
  3090                           ;RFM69HCW.c: 28:         radio->previous_msgs[i]=temp;
  3091  0681  0821               	movf	send@temp,w
  3092  0682  00F9               	movwf	??_send
  3093  0683  0823               	movf	send@i,w
  3094  0684  0725               	addwf	send@radio,w
  3095  0685  00FA               	movwf	??_send+1
  3096  0686  087A               	movf	??_send+1,w
  3097  0687  0086               	movwf	6
  3098  0688  0187               	clrf	7
  3099  0689  0879               	movf	??_send,w
  3100  068A  0081               	movwf	1
  3101                           
  3102                           ;RFM69HCW.c: 29:     }
  3103  068B  30FF               	movlw	255
  3104  068C  07A3               	addwf	send@i,f
  3105  068D  30FF               	movlw	255
  3106  068E  3DA4               	addwfc	send@i+1,f
  3107  068F  0824               	movf	send@i+1,w
  3108  0690  3A80               	xorlw	128
  3109  0691  00F9               	movwf	??_send
  3110  0692  3080               	movlw	128
  3111  0693  0279               	subwf	??_send,w
  3112  0694  1D03               	skipz
  3113  0695  2E98               	goto	u225
  3114  0696  3001               	movlw	1
  3115  0697  0223               	subwf	send@i,w
  3116  0698                     u225:	
  3117  0698  1C03               	btfss	3,0
  3118  0699  2E9C               	goto	l1014
  3119  069A  2E75               	goto	l1008
  3120  069B                     l108:	
  3121                           ;RFM69HCW.c: 31:     while(SSP1CONbits.WCOL){
  3122                           
  3123                           
  3124                           ;RFM69HCW.c: 32:             SSP1CONbits.WCOL=0;
  3125  069B  1395               	bcf	21,7	;volatile
  3126  069C                     l1014:	
  3127                           
  3128                           ;RFM69HCW.c: 30:     SSP1BUF=msg;
  3129  069C  0878               	movf	send@msg,w
  3130  069D  0024               	movlb	4	; select bank4
  3131  069E  0091               	movwf	17	;volatile
  3132                           
  3133                           ;RFM69HCW.c: 31:     while(SSP1CONbits.WCOL){
  3134  069F  1B95               	btfsc	21,7	;volatile
  3135  06A0  2E9B               	goto	l108
  3136                           
  3137                           ;RFM69HCW.c: 35:     radio->previous_msgs[0] = test;
  3138  06A1  0020               	movlb	0	; select bank0
  3139  06A2  0820               	movf	send@test,w
  3140  06A3  00F9               	movwf	??_send
  3141  06A4  0825               	movf	send@radio,w
  3142  06A5  0086               	movwf	6
  3143  06A6  0187               	clrf	7
  3144  06A7  0879               	movf	??_send,w
  3145  06A8  0081               	movwf	1
  3146  06A9                     l110:	
  3147                           ;RFM69HCW.c: 37:     }
  3148                           
  3149                           
  3150                           ;RFM69HCW.c: 36:     while(!SSP1STATbits.BF){
  3151  06A9  0024               	movlb	4	; select bank4
  3152  06AA  1C14               	btfss	20,0	;volatile
  3153  06AB  2EA9               	goto	l110
  3154                           
  3155                           ;RFM69HCW.c: 38:     byte returnMsg=SSP1BUF;
  3156  06AC  0811               	movf	17,w	;volatile
  3157  06AD  00F9               	movwf	??_send
  3158  06AE  0879               	movf	??_send,w
  3159  06AF  0020               	movlb	0	; select bank0
  3160  06B0  00A2               	movwf	send@returnMsg
  3161                           
  3162                           ;RFM69HCW.c: 39:     receive(radio, returnMsg);
  3163  06B1  0822               	movf	send@returnMsg,w
  3164  06B2  00F9               	movwf	??_send
  3165  06B3  0879               	movf	??_send,w
  3166  06B4  00F0               	movwf	receive@msg
  3167  06B5  0825               	movf	send@radio,w
  3168  06B6  3185  25BB         	fcall	_receive
  3169                           
  3170                           ;RFM69HCW.c: 40:     return returnMsg;
  3171  06B8  0020               	movlb	0	; select bank0
  3172  06B9  0822               	movf	send@returnMsg,w
  3173  06BA  0008               	return
  3174  06BB                     __end_of_send:	
  3175                           
  3176                           	psect	text17
  3177  05BB                     __ptext17:	
  3178 ;; *************** function _receive *****************
  3179 ;; Defined at:
  3180 ;;		line 52 in file "RFM69HCW.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  radio           1    wreg     PTR struct RFM69HCW
  3183 ;;		 -> radio(35), 
  3184 ;;  msg             1    0[COMMON] unsigned char 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;  radio           1    5[COMMON] PTR struct RFM69HCW
  3187 ;;		 -> radio(35), 
  3188 ;;  temp            1    4[COMMON] unsigned char 
  3189 ;;  i               2    6[COMMON] int 
  3190 ;;  test            1    3[COMMON] unsigned char 
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  1    wreg      void 
  3193 ;; Registers used:
  3194 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3200 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3201 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3202 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3203 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3204 ;;Total ram usage:        8 bytes
  3205 ;; Hardware stack levels used:    1
  3206 ;; This function calls:
  3207 ;;		Nothing
  3208 ;; This function is called by:
  3209 ;;		_send
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           
  3214                           ;psect for function _receive
  3215  05BB                     _receive:	
  3216                           
  3217                           ;incstack = 0
  3218                           ; Regs used in _receive: [wreg+fsr1l+fsr1h+status,2+status,0]
  3219                           ;receive@radio stored from wreg
  3220  05BB  00F5               	movwf	receive@radio
  3221                           
  3222                           ;RFM69HCW.c: 53:    unsigned char test = msg;
  3223  05BC  0870               	movf	receive@msg,w
  3224  05BD  00F1               	movwf	??_receive
  3225  05BE  0871               	movf	??_receive,w
  3226  05BF  00F3               	movwf	receive@test
  3227                           
  3228                           ;RFM69HCW.c: 54:     for(int i=(10 -1); i>0; i--){
  3229  05C0  3009               	movlw	9
  3230  05C1  00F6               	movwf	receive@i
  3231  05C2  3000               	movlw	0
  3232  05C3  00F7               	movwf	receive@i+1
  3233  05C4                     l990:	
  3234                           
  3235                           ;RFM69HCW.c: 55:         unsigned char temp = radio->message_book[i-1];
  3236  05C4  0876               	movf	receive@i,w
  3237  05C5  0775               	addwf	receive@radio,w
  3238  05C6  00F1               	movwf	??_receive
  3239  05C7  0871               	movf	??_receive,w
  3240  05C8  0086               	movwf	6
  3241  05C9  0187               	clrf	7
  3242  05CA  3F49               	moviw [9]fsr1
  3243  05CB  00F4               	movwf	receive@temp
  3244                           
  3245                           ;RFM69HCW.c: 56:         (*radio).message_book[i]=temp;
  3246  05CC  0874               	movf	receive@temp,w
  3247  05CD  00F1               	movwf	??_receive
  3248  05CE  0876               	movf	receive@i,w
  3249  05CF  0775               	addwf	receive@radio,w
  3250  05D0  00F2               	movwf	??_receive+1
  3251  05D1  0872               	movf	??_receive+1,w
  3252  05D2  3E0A               	addlw	10
  3253  05D3  0086               	movwf	6
  3254  05D4  0187               	clrf	7
  3255  05D5  0871               	movf	??_receive,w
  3256  05D6  0081               	movwf	1
  3257                           
  3258                           ;RFM69HCW.c: 57:     }
  3259  05D7  30FF               	movlw	255
  3260  05D8  07F6               	addwf	receive@i,f
  3261  05D9  30FF               	movlw	255
  3262  05DA  3DF7               	addwfc	receive@i+1,f
  3263  05DB  0877               	movf	receive@i+1,w
  3264  05DC  3A80               	xorlw	128
  3265  05DD  00F1               	movwf	??_receive
  3266  05DE  3080               	movlw	128
  3267  05DF  0271               	subwf	??_receive,w
  3268  05E0  1D03               	skipz
  3269  05E1  2DE4               	goto	u185
  3270  05E2  3001               	movlw	1
  3271  05E3  0276               	subwf	receive@i,w
  3272  05E4                     u185:	
  3273  05E4  1803               	skipnc
  3274  05E5  2DC4               	goto	l990
  3275                           
  3276                           ;RFM69HCW.c: 58:     radio->message_book[0]=test;
  3277  05E6  0873               	movf	receive@test,w
  3278  05E7  00F1               	movwf	??_receive
  3279  05E8  0875               	movf	receive@radio,w
  3280  05E9  3E0A               	addlw	10
  3281  05EA  0086               	movwf	6
  3282  05EB  0187               	clrf	7
  3283  05EC  0871               	movf	??_receive,w
  3284  05ED  0081               	movwf	1
  3285  05EE  0008               	return
  3286  05EF                     __end_of_receive:	
  3287                           
  3288                           	psect	text18
  3289  03FF                     __ptext18:	
  3290 ;; *************** function _init *****************
  3291 ;; Defined at:
  3292 ;;		line 52 in file "transmitter.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;		None
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  2   53[None  ] int 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0, pclath, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3310 ;;Total ram usage:        0 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    2
  3313 ;; This function calls:
  3314 ;;		_rfmSetup
  3315 ;; This function is called by:
  3316 ;;		_main
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           
  3321                           ;psect for function _init
  3322  03FF                     _init:	
  3323                           
  3324                           ;transmitter.c: 53:     rfmSetup();
  3325                           
  3326                           ;incstack = 0
  3327                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  3328  03FF  3185  2522         	fcall	_rfmSetup
  3329  0401  0008               	return
  3330  0402                     __end_of_init:	
  3331                           
  3332                           	psect	text19
  3333  0522                     __ptext19:	
  3334 ;; *************** function _rfmSetup *****************
  3335 ;; Defined at:
  3336 ;;		line 58 in file "transmitter.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;		None
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;		None
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      void 
  3343 ;; Registers used:
  3344 ;;		wreg, status,2, status,0, pclath, cstack
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3352 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3353 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3354 ;;Total ram usage:        1 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:    1
  3357 ;; This function calls:
  3358 ;;		_resetRadio
  3359 ;;		_spi_init_master
  3360 ;; This function is called by:
  3361 ;;		_init
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           
  3366                           ;psect for function _rfmSetup
  3367  0522                     _rfmSetup:	
  3368                           
  3369                           ;transmitter.c: 59:     TRISCbits.TRISC2=0;
  3370                           
  3371                           ;incstack = 0
  3372                           ; Regs used in _rfmSetup: [wreg+status,2+status,0+pclath+cstack]
  3373  0522  0021               	movlb	1	; select bank1
  3374  0523  110E               	bcf	14,2	;volatile
  3375                           
  3376                           ;transmitter.c: 60:     TRISCbits.TRISC3=0;
  3377  0524  118E               	bcf	14,3	;volatile
  3378                           
  3379                           ;transmitter.c: 61:     TRISCbits.TRISC5=0;
  3380  0525  128E               	bcf	14,5	;volatile
  3381                           
  3382                           ;transmitter.c: 62:     SSP1BUF;
  3383  0526  0024               	movlb	4	; select bank4
  3384  0527  0811               	movf	17,w	;volatile
  3385                           
  3386                           ;transmitter.c: 63:     SSP1STATbits.BF=0;
  3387  0528  1014               	bcf	20,0	;volatile
  3388                           
  3389                           ;transmitter.c: 64:     OSCCONbits.IRCF=0b1111;
  3390  0529  3078               	movlw	120
  3391  052A  0021               	movlb	1	; select bank1
  3392  052B  0499               	iorwf	25,f	;volatile
  3393                           
  3394                           ;transmitter.c: 65:     spi_init_master();
  3395  052C  3184  24EA  3185   	fcall	_spi_init_master
  3396                           
  3397                           ;transmitter.c: 66:     TRISCbits.TRISC5=0;
  3398  052F  0021               	movlb	1	; select bank1
  3399  0530  128E               	bcf	14,5	;volatile
  3400                           
  3401                           ;transmitter.c: 67:     resetRadio();
  3402  0531  3184  2446  3185   	fcall	_resetRadio
  3403                           
  3404                           ;transmitter.c: 68:     TRISAbits.TRISA2=0;
  3405  0534  0021               	movlb	1	; select bank1
  3406  0535  110C               	bcf	12,2	;volatile
  3407                           
  3408                           ;transmitter.c: 69:     messages_received=0;
  3409  0536  0020               	movlb	0	; select bank0
  3410  0537  01EF               	clrf	_messages_received
  3411                           
  3412                           ;transmitter.c: 70:     _delay((unsigned long)((20)*(16000000/4000.0)));
  3413  0538  3068               	movlw	104
  3414  0539  00F1               	movwf	??_rfmSetup
  3415  053A  30E4               	movlw	228
  3416  053B                     u367:	
  3417  053B  0B89               	decfsz	9,f
  3418  053C  2D3B               	goto	u367
  3419  053D  0BF1               	decfsz	??_rfmSetup,f
  3420  053E  2D3B               	goto	u367
  3421  053F  3200               	nop2
  3422  0540  0008               	return
  3423  0541                     __end_of_rfmSetup:	
  3424                           
  3425                           	psect	text20
  3426  04EA                     __ptext20:	
  3427 ;; *************** function _spi_init_master *****************
  3428 ;; Defined at:
  3429 ;;		line 96 in file "transmitter.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;		None
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;		None
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  1    wreg      void 
  3436 ;; Registers used:
  3437 ;;		wreg, status,2, status,0
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3447 ;;Total ram usage:        0 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_rfmSetup
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           
  3457                           ;psect for function _spi_init_master
  3458  04EA                     _spi_init_master:	
  3459                           
  3460                           ;transmitter.c: 97:     ANSELA=0;
  3461                           
  3462                           ;incstack = 0
  3463                           ; Regs used in _spi_init_master: [wreg+status,2+status,0]
  3464  04EA  0023               	movlb	3	; select bank3
  3465  04EB  018C               	clrf	12	;volatile
  3466                           
  3467                           ;transmitter.c: 98:     ANSELC=0;
  3468  04EC  018E               	clrf	14	;volatile
  3469                           
  3470                           ;transmitter.c: 99:     SSP1CON1bits.SSPM=0b0001;
  3471  04ED  0024               	movlb	4	; select bank4
  3472  04EE  0815               	movf	21,w	;volatile
  3473  04EF  39F0               	andlw	-16
  3474  04F0  3801               	iorlw	1
  3475  04F1  0095               	movwf	21	;volatile
  3476                           
  3477                           ;transmitter.c: 100:     SSP1CONbits.SSPEN=1;
  3478  04F2  1695               	bsf	21,5	;volatile
  3479                           
  3480                           ;transmitter.c: 101:     SSP1CONbits.CKP=0;
  3481  04F3  1215               	bcf	21,4	;volatile
  3482                           
  3483                           ;transmitter.c: 102:     SSP1STATbits.CKE=1;
  3484  04F4  1714               	bsf	20,6	;volatile
  3485                           
  3486                           ;transmitter.c: 103:     SSP1STATbits.SMP=0;
  3487  04F5  1394               	bcf	20,7	;volatile
  3488                           
  3489                           ;transmitter.c: 105:     RC0PPS=0b10000;
  3490  04F6  3010               	movlw	16
  3491  04F7  003D               	movlb	29	; select bank29
  3492  04F8  00A0               	movwf	32	;volatile
  3493                           
  3494                           ;transmitter.c: 106:     TRISCbits.TRISC0=0;
  3495  04F9  0021               	movlb	1	; select bank1
  3496  04FA  100E               	bcf	14,0	;volatile
  3497                           
  3498                           ;transmitter.c: 109:     SSPDATPPS=0b10001;
  3499  04FB  3011               	movlw	17
  3500  04FC  003C               	movlb	28	; select bank28
  3501  04FD  00A1               	movwf	33	;volatile
  3502                           
  3503                           ;transmitter.c: 110:     TRISCbits.TRISC1=1;
  3504  04FE  0021               	movlb	1	; select bank1
  3505  04FF  148E               	bsf	14,1	;volatile
  3506                           
  3507                           ;transmitter.c: 113:     RC3PPS=0b10001;
  3508  0500  3011               	movlw	17
  3509  0501  003D               	movlb	29	; select bank29
  3510  0502  00A3               	movwf	35	;volatile
  3511                           
  3512                           ;transmitter.c: 114:     TRISCbits.TRISC3=0;
  3513  0503  0021               	movlb	1	; select bank1
  3514  0504  118E               	bcf	14,3	;volatile
  3515  0505  0008               	return
  3516  0506                     __end_of_spi_init_master:	
  3517                           
  3518                           	psect	text21
  3519  0446                     __ptext21:	
  3520 ;; *************** function _resetRadio *****************
  3521 ;; Defined at:
  3522 ;;		line 45 in file "transmitter.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;		None
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;		None
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  1    wreg      void 
  3529 ;; Registers used:
  3530 ;;		wreg
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3538 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3539 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3540 ;;Total ram usage:        1 bytes
  3541 ;; Hardware stack levels used:    1
  3542 ;; This function calls:
  3543 ;;		Nothing
  3544 ;; This function is called by:
  3545 ;;		_rfmSetup
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           
  3550                           ;psect for function _resetRadio
  3551  0446                     _resetRadio:	
  3552                           
  3553                           ;transmitter.c: 46:     PORTCbits.RC2 = 1;
  3554                           
  3555                           ;incstack = 0
  3556                           ; Regs used in _resetRadio: [wreg]
  3557  0446  0020               	movlb	0	; select bank0
  3558  0447  150E               	bsf	14,2	;volatile
  3559                           
  3560                           ;transmitter.c: 47:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3561  0448  3006               	movlw	6
  3562  0449  00F0               	movwf	??_resetRadio
  3563  044A  3030               	movlw	48
  3564  044B                     u377:	
  3565  044B  0B89               	decfsz	9,f
  3566  044C  2C4B               	goto	u377
  3567  044D  0BF0               	decfsz	??_resetRadio,f
  3568  044E  2C4B               	goto	u377
  3569  044F  3200               	nop2
  3570                           
  3571                           ;transmitter.c: 48:     PORTCbits.RC2 = 0;
  3572  0450  0020               	movlb	0	; select bank0
  3573  0451  110E               	bcf	14,2	;volatile
  3574                           
  3575                           ;transmitter.c: 49:     _delay((unsigned long)((20)*(16000000/4000.0)));
  3576  0452  3068               	movlw	104
  3577  0453  00F0               	movwf	??_resetRadio
  3578  0454  30E4               	movlw	228
  3579  0455                     u387:	
  3580  0455  0B89               	decfsz	9,f
  3581  0456  2C55               	goto	u387
  3582  0457  0BF0               	decfsz	??_resetRadio,f
  3583  0458  2C55               	goto	u387
  3584  0459  3200               	nop2
  3585  045A  0008               	return
  3586  045B                     __end_of_resetRadio:	
  3587  007E                     btemp	set	126	;btemp
  3588  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        63
    BSS         58
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     73      80
    BANK1            80      0      79
    BANK2            80      0      35
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    getRSSI@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    checkForPayload@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setPowerOutput@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    initRadio@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setPreambleLength@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setModulationThreshold@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setRecommendedParams@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setPacketFormat@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    sendPairs@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    sendPayload@payload	PTR unsigned char  size(1) Largest target is 8
		 -> main@payload(BANK0[8]), 

    sendPayload@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    sendPayload@radio	PTR struct RFM69HCW size(1) Largest target is 35
		 -> radio(BANK1[35]), 

    setPowerOutput@radio	PTR struct RFM69HCW size(1) Largest target is 35
		 -> radio(BANK1[35]), 

    initRadio@radio	PTR struct RFM69HCW size(1) Largest target is 35
		 -> radio(BANK1[35]), 

    setPreambleLength@radio	PTR struct RFM69HCW size(1) Largest target is 35
		 -> radio(BANK1[35]), 

    receivePayload@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setModulationThreshold@radio	PTR struct RFM69HCW size(1) Largest target is 35
		 -> radio(BANK1[35]), 

    setRecommendedParams@radio	PTR struct RFM69HCW size(1) Largest target is 35
		 -> radio(BANK1[35]), 

    setOperatingMode@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setOperatingMode@radio	PTR struct RFM69HCW size(1) Largest target is 35
		 -> radio(BANK1[35]), 

    setPacketFormat@radio	PTR struct RFM69HCW size(1) Largest target is 35
		 -> radio(BANK1[35]), 

    setRSSIThreshold@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setRSSIThreshold@radio	PTR struct RFM69HCW size(1) Largest target is 35
		 -> radio(BANK1[35]), 

    setNodeAddress@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setNodeAddress@radio	PTR struct RFM69HCW size(1) Largest target is 35
		 -> radio(BANK1[35]), 

    setPacketLength@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setPacketLength@radio	PTR struct RFM69HCW size(1) Largest target is 35
		 -> radio(BANK1[35]), 

    setSyncWords@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setSyncWords@radio	PTR struct RFM69HCW size(1) Largest target is 35
		 -> radio(BANK1[35]), 

    receive@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    receive@radio	PTR struct RFM69HCW size(1) Largest target is 35
		 -> radio(BANK1[35]), 

    setPinWithMask@pPort	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    send@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    send@radio	PTR struct RFM69HCW size(1) Largest target is 35
		 -> radio(BANK1[35]), 

    sendBulk@msgs	PTR unsigned char  size(1) Largest target is 10
		 -> getRSSI@msg(COMMON[2]), setPowerOutput@msg(BANK0[2]), setPreambleLength@msg(BANK0[2]), checkForPayload@flags(COMMON[2]), 
		 -> setModulationThreshold@msg(BANK0[2]), setOperatingMode@msg(BANK0[2]), setPacketFormat@msg(BANK0[2]), setRSSIThreshold@msg(BANK0[2]), 
		 -> setNodeAddress@msg(BANK0[2]), setPacketLength@msg(BANK0[2]), setSyncWords@msg(BANK0[10]), sendPairs@msg(BANK0[2]), 

    sendBulk@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    sendBulk@radio	PTR struct RFM69HCW size(1) Largest target is 35
		 -> radio(BANK1[35]), 

    sendPairs@radio	PTR struct RFM69HCW size(1) Largest target is 35
		 -> radio(BANK1[35]), 

    sendPairs@msgs	PTR unsigned char  size(1) Largest target is 10
		 -> recommended_params(BANK1[10]), 

    F9364.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    F9363.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    S22RFM69HCW$SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 


Critical Paths under _main in COMMON

    _setPowerOutput->_sendBulk
    _setSyncWords->_sendBulk
    _sendPairs->_sendBulk
    _setRSSIThreshold->_sendBulk
    _setPreambleLength->_sendBulk
    _setPacketLength->_sendBulk
    _setPacketFormat->_sendBulk
    _setOperatingMode->_sendBulk
    _setNodeAddress->_sendBulk
    _setModulationThreshold->_sendBulk
    _sendBulk->_send
    _send->_receive
    _init->_rfmSetup
    _rfmSetup->_resetRadio

Critical Paths under _main in BANK0

    _main->_initRadio
    _setPowerOutput->_sendBulk
    _sendPayload->_setOperatingMode
    _initRadio->_setSyncWords
    _setSyncWords->_sendBulk
    _setRecommendedParams->_sendPairs
    _sendPairs->_sendBulk
    _setRSSIThreshold->_sendBulk
    _setPreambleLength->_sendBulk
    _setPacketLength->_sendBulk
    _setPacketFormat->_sendBulk
    _setOperatingMode->_sendBulk
    _setNodeAddress->_sendBulk
    _setModulationThreshold->_sendBulk
    _sendBulk->_send

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                45    45      0   67932
                                             28 BANK0     45    45      0
                               _init
                          _initRadio
                        _sendPayload
                   _setOperatingMode
                     _setPowerOutput
 ---------------------------------------------------------------------------------
 (1) _setPowerOutput                                       6     5      1    5403
                                             12 BANK0      6     5      1
                           _sendBulk
 ---------------------------------------------------------------------------------
 (1) _sendPayload                                          6     5      1    8459
                                             17 BANK0      6     5      1
                               _send
                   _setOperatingMode
                     _setPinWithMask
 ---------------------------------------------------------------------------------
 (1) _initRadio                                            1     1      0   48630
                                             27 BANK0      1     1      0
             _setModulationThreshold
                     _setNodeAddress
                   _setOperatingMode
                    _setPacketFormat
                    _setPacketLength
                  _setPreambleLength
                   _setRSSIThreshold
               _setRecommendedParams
                       _setSyncWords
 ---------------------------------------------------------------------------------
 (2) _setSyncWords                                        15    15      0    5440
                                             12 BANK0     15    15      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _setRecommendedParams                                 2     2      0    5690
                                             22 BANK0      2     2      0
                          _sendPairs
 ---------------------------------------------------------------------------------
 (3) _sendPairs                                           10     7      3    5635
                                             12 BANK0     10     7      3
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _setRSSIThreshold                                     5     5      0    5327
                                             12 BANK0      5     5      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _setPreambleLength                                    5     5      0    5280
                                             12 BANK0      5     5      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _setPacketLength                                      5     5      0    5327
                                             12 BANK0      5     5      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _setPacketFormat                                      5     5      0    5313
                                             12 BANK0      5     5      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (1) _setOperatingMode                                     5     5      0    5393
                                             12 BANK0      5     5      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _setNodeAddress                                       5     5      0    5327
                                             12 BANK0      5     5      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _setModulationThreshold                               5     5      0    5280
                                             12 BANK0      5     5      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _sendBulk                                             9     7      2    5199
                                             11 COMMON     3     3      0
                                              6 BANK0      6     4      2
                               _send
                     _setPinWithMask
 ---------------------------------------------------------------------------------
 (3) _setPinWithMask                                       6     2      4    1478
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _send                                                 9     8      1    1213
                                              8 COMMON     3     2      1
                                              0 BANK0      6     6      0
                            _receive
 ---------------------------------------------------------------------------------
 (4) _receive                                              8     7      1     333
                                              0 COMMON     8     7      1
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                           _rfmSetup
 ---------------------------------------------------------------------------------
 (2) _rfmSetup                                             1     1      0       0
                                              1 COMMON     1     1      0
                         _resetRadio
                    _spi_init_master
 ---------------------------------------------------------------------------------
 (3) _spi_init_master                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _resetRadio                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _rfmSetup
       _resetRadio
       _spi_init_master
   _initRadio
     _setModulationThreshold
       _sendBulk
         _send
           _receive
         _setPinWithMask
     _setNodeAddress
       _sendBulk
         _send
           _receive
         _setPinWithMask
     _setOperatingMode
       _sendBulk
         _send
           _receive
         _setPinWithMask
     _setPacketFormat
       _sendBulk
         _send
           _receive
         _setPinWithMask
     _setPacketLength
       _sendBulk
         _send
           _receive
         _setPinWithMask
     _setPreambleLength
       _sendBulk
         _send
           _receive
         _setPinWithMask
     _setRSSIThreshold
       _sendBulk
         _send
           _receive
         _setPinWithMask
     _setRecommendedParams
       _sendPairs
         _sendBulk
           _send
             _receive
           _setPinWithMask
     _setSyncWords
       _sendBulk
         _send
           _receive
         _setPinWithMask
   _sendPayload
     _send
       _receive
     _setOperatingMode
       _sendBulk
         _send
           _receive
         _setPinWithMask
     _setPinWithMask
   _setOperatingMode
     _sendBulk
       _send
         _receive
       _setPinWithMask
   _setPowerOutput
     _sendBulk
       _send
         _receive
       _setPinWithMask

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     49      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      23       9       43.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      D0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      D0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Jan 01 21:50:49 2021

                    __CFG_CP$OFF 0000                              l110 06A9                              l108 069B  
             setPacketFormat@msg 002E                              l990 05C4                              u204 056C  
                            u205 056B               setPacketLength@msg 002E                              u214 057D  
                            u310 071E                              u215 057C                              u320 072C  
                            u225 0698                              u305 07A5                              u330 0748  
                            u185 05E4                              u265 06F9                              u275 0638  
                            u285 0668                              u357 075B                              u367 053B  
                            u295 061A                              u377 044B                              u387 0455  
                   __CFG_BORV$LO 0000                              wreg 0009                     __CFG_IESO$ON 0000  
         _setModulationThreshold 0422                     __CFG_LVP$OFF 0000                     __CFG_ZCD$OFF 0000  
                           l1002 0578                             l1014 069C                             l1008 0675  
                           l1200 0798                             l1122 05FD                             l1202 07BE  
                           l1044 06FB                             l1038 06D3                             l1082 063A  
                           l1218 074C                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
                    main@payload 003E                             _main 070D                             _init 03FF  
                           _send 066B                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E                    __CFG_BOREN$ON 0000  
                           start 0002             setPacketFormat@F9402 006D                    __CFG_MCLRE$ON 0000  
           setPacketLength@F9390 00B2                    __CFG_PLLEN$ON 0000                            ?_main 0070  
                          ?_init 0070                            ?_send 0078                    __CFG_WDTE$OFF 0000  
           setPacketFormat@radio 0030             setPacketLength@radio 0030                            _PORTA 000C  
        __size_of_setPowerOutput 0018                            _radio 00B6                  __end_of_receive 05EF  
                          send@i 0023            setOperatingMode@F9406 00AC                            status 0003  
                          wtemp0 007E       __size_of_setPreambleLength 0016                  __initialization 07D1  
                   __end_of_main 076C                     __end_of_init 0402                     __end_of_send 06BB  
          setOperatingMode@radio 0030              setPinWithMask@pPort 0070                   _setNodeAddress 049F  
            setPinWithMask@value 0073           setPreambleLength@F9424 00E3                   __CFG_LPBOR$OFF 0000  
                         ??_main 003C                           ??_init 0072                           ??_send 0079  
                   ?_sendPayload 0031                 sendPayload@radio 0036           setPreambleLength@radio 0030  
                         _ANSELA 018C                           _ANSELC 018E                setPowerOutput@msg 0030  
                         _RC0PPS 0EA0                           _RC3PPS 0EA3            setRSSIThreshold@F9398 00AE  
                 _setPinWithMask 0564                   __CFG_PWRTE$OFF 0000     __end_of_setRecommendedParams 0422  
         __end_of_setNodeAddress 04B8            setRSSIThreshold@radio 0030         __end_of_setOperatingMode 0522  
                 __CFG_STVREN$ON 0000                  _setPacketFormat 0434                  _setPacketLength 04B8  
               __end_of_rfmSetup 0541                 __end_of_sendBulk 070D                        ??_receive 0071  
         __end_of_setPinWithMask 0588          __end_of__initialization 07FD                   __pcstackCOMMON 0070  
                ?_setNodeAddress 0070        __size_of_setRSSIThreshold 0019                     __pidataBANK0 040E  
                   __pidataBANK1 0471                     __pidataBANK2 0541                      receive@temp 0074  
                    receive@test 0073          ?_setModulationThreshold 0070                   _setPowerOutput 0487  
                  send@returnMsg 0022                  ?_setPinWithMask 0070                       __pbssBANK0 006F  
                     __pbssBANK1 00A0                    sendBulk@radio 007D         __size_of_spi_init_master 001C  
             __size_of_initRadio 0033                      sendBulk@len 0027          __end_of_setPacketFormat 0446  
        __end_of_setPacketLength 04D1                       __pmaintext 070D                  __CFG_PPS1WAY$ON 0000  
             __size_of_sendPairs 0042   __end_of_setModulationThreshold 0434                  __CFG_WDTCCS$SWC 0000  
         __end_of_setPowerOutput 049F                    sendPairs@msgs 002C             __size_of_sendPayload 0065  
                        _SSP1BUF 0211             _setRecommendedParams 0414                    ?_setSyncWords 0070  
      setModulationThreshold@msg 002E                        ?_rfmSetup 0070                        ?_sendBulk 0026  
            setNodeAddress@F9394 00B0                setSyncWords@radio 0038                          __ptext1 0487  
                        __ptext2 076C                          __ptext3 0588                          __ptext4 05EF  
                        __ptext5 0414                          __ptext6 0629                          __ptext7 04D1  
                        __ptext8 045B                          __ptext9 04B8                __end_of_initRadio 05BB  
                        _receive 05BB                  ?_setPowerOutput 002C                   initRadio@radio 003B  
            setNodeAddress@radio 0030            ?_setRecommendedParams 0070                   ??_setSyncWords 002C  
                        clrloop0 0403                __end_of_sendPairs 066B             end_of_initialization 07FD  
           checkForPayload@F9416 0069                          init_ram 0408                          initloop 0409  
                        send@msg 0078                       ??_rfmSetup 0071                       ??_sendBulk 0028  
                     _resetRadio 0446                 ?_setPacketFormat 0070                 ?_setPacketLength 0070  
              ??_spi_init_master 0070                 _setRSSIThreshold 04D1                ?_setOperatingMode 0070  
             ??_setOperatingMode 002C                        _PORTCbits 000E                        _SSPDATPPS 0E21  
               __CFG_FOSC$INTOSC 0000                        _TRISAbits 008C                        _TRISCbits 008E  
               ??_setNodeAddress 002C             setPreambleLength@msg 002E                     receive@radio 0075  
            start_initialization 07D1                 ??_setPinWithMask 0074           ??_setRecommendedParams 0036  
             setPinWithMask@iPin 0072                      ?_resetRadio 0070                  setSyncWords@msg 002E  
              setNodeAddress@msg 002E             __end_of_setSyncWords 0629                      __pdataBANK0 0069  
                    __pdataBANK1 00D9                      __pdataBANK2 0120                        ___latbits 0002  
                  __pcstackBANK0 0020                       receive@msg 0070                    setSyncWords@i 0039  
      setRecommendedParams@radio 0037                     sendBulk@msgs 0026               sendPayload@payload 0031  
              __size_of_rfmSetup 001F      setModulationThreshold@F9412 006B                __size_of_sendBulk 0052  
                     sendPairs@i 0034                 ??_setPowerOutput 002D                     sendPairs@len 002D  
                   sendPairs@msg 0032              setPowerOutput@F9431 00AA                    ??_sendPayload 0032  
    setModulationThreshold@radio 0030                         ?_receive 0070              __size_of_resetRadio 0015  
                   sendPayload@i 0034                        _initRadio 0588         __end_of_setRSSIThreshold 04EA  
                 sendPairs@F9359 00B4              setPowerOutput@radio 002F                  _spi_init_master 04EA  
                      _sendPairs 0629                     getRSSI@F9439 00E1                        clear_ram0 0402  
                 sendPairs@radio 0031                        main@F9363 0120                        main@F9365 00D9  
           __CFG_WDTCPS$WDTCPS1F 0000                       ?_initRadio 0070        __size_of_setOperatingMode 001C  
            __end_of_sendPayload 07D1              setOperatingMode@msg 002E                       ?_sendPairs 002C  
          __size_of_setSyncWords 003A         ??_setModulationThreshold 002C              setRSSIThreshold@msg 002E  
       __size_of_setPacketFormat 0012         __size_of_setPacketLength 0019          __end_of_spi_init_master 0506  
                      send@radio 0025                        sendBulk@i 007B                 __size_of_receive 0034  
                       __ptext10 0434                         __ptext11 0506                         __ptext20 04EA  
                       __ptext12 049F                         __ptext21 0446                         __ptext13 0422  
                       __ptext14 06BB                         __ptext15 0564                         __ptext16 066B  
                       __ptext17 05BB                         __ptext18 03FF                         __ptext19 0522  
                   _SSP1CON1bits 0215                     _setSyncWords 05EF                    __size_of_main 005F  
                  __size_of_init 0003                    __size_of_send 0050                         _messages 00A0  
                   ??_resetRadio 0070                         _rfmSetup 0522             __CFG_WDTCWS$WDTCWSSW 0000  
                       _sendBulk 06BB                         main@9364 0046                     _SSP1STATbits 0214  
                    _sendPayload 076C                      ??_initRadio 007E               __end_of_resetRadio 045B  
  __size_of_setRecommendedParams 000E                         receive@i 0076                         send@temp 0021  
                       send@test 0020               _recommended_params 00E5                      ??_sendPairs 002F  
              __CFG_CLKOUTEN$OFF 0000                      _SSP1CONbits 0215                       _OSCCONbits 0099  
    setPowerOutput@powerSettings 002C                _setPreambleLength 045B  __size_of_setModulationThreshold 0012  
             ?_setPreambleLength 0070          __size_of_setNodeAddress 0019                _messages_received 006F  
            ??_setPreambleLength 002C                 ?_spi_init_master 0070                ??_setPacketFormat 002C  
              ??_setPacketLength 002C                 _setOperatingMode 0506                ?_setRSSIThreshold 0070  
             ??_setRSSIThreshold 002C          __size_of_setPinWithMask 0024        __end_of_setPreambleLength 0471  
