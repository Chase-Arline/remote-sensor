

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Sep 15 01:05:32 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1615
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 2.32
    52                           ; Generated 02/02/2021 GMT
    53                           ; 
    54                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F1615 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000E                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  008C                     	;# 
   120  008E                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  010C                     	;# 
   138  010E                     	;# 
   139  0111                     	;# 
   140  0112                     	;# 
   141  0113                     	;# 
   142  0114                     	;# 
   143  0115                     	;# 
   144  0116                     	;# 
   145  0117                     	;# 
   146  0118                     	;# 
   147  0119                     	;# 
   148  011C                     	;# 
   149  018C                     	;# 
   150  018E                     	;# 
   151  0191                     	;# 
   152  0191                     	;# 
   153  0192                     	;# 
   154  0193                     	;# 
   155  0193                     	;# 
   156  0194                     	;# 
   157  0195                     	;# 
   158  0196                     	;# 
   159  0197                     	;# 
   160  0199                     	;# 
   161  0199                     	;# 
   162  0199                     	;# 
   163  019A                     	;# 
   164  019A                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019C                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019D                     	;# 
   175  019D                     	;# 
   176  019D                     	;# 
   177  019E                     	;# 
   178  019E                     	;# 
   179  019E                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  020C                     	;# 
   186  020E                     	;# 
   187  0211                     	;# 
   188  0211                     	;# 
   189  0212                     	;# 
   190  0212                     	;# 
   191  0213                     	;# 
   192  0213                     	;# 
   193  0214                     	;# 
   194  0214                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0216                     	;# 
   200  0216                     	;# 
   201  0217                     	;# 
   202  0217                     	;# 
   203  028C                     	;# 
   204  028E                     	;# 
   205  0291                     	;# 
   206  0291                     	;# 
   207  0292                     	;# 
   208  0293                     	;# 
   209  0294                     	;# 
   210  0298                     	;# 
   211  0298                     	;# 
   212  0299                     	;# 
   213  029A                     	;# 
   214  029B                     	;# 
   215  029E                     	;# 
   216  030C                     	;# 
   217  030E                     	;# 
   218  038C                     	;# 
   219  038E                     	;# 
   220  0391                     	;# 
   221  0392                     	;# 
   222  0393                     	;# 
   223  0397                     	;# 
   224  0398                     	;# 
   225  0399                     	;# 
   226  040E                     	;# 
   227  0413                     	;# 
   228  0413                     	;# 
   229  0414                     	;# 
   230  0414                     	;# 
   231  0415                     	;# 
   232  0416                     	;# 
   233  0417                     	;# 
   234  0418                     	;# 
   235  041A                     	;# 
   236  041A                     	;# 
   237  041B                     	;# 
   238  041B                     	;# 
   239  041C                     	;# 
   240  041D                     	;# 
   241  041E                     	;# 
   242  041F                     	;# 
   243  0493                     	;# 
   244  0494                     	;# 
   245  0495                     	;# 
   246  0496                     	;# 
   247  049A                     	;# 
   248  049B                     	;# 
   249  049C                     	;# 
   250  049D                     	;# 
   251  058C                     	;# 
   252  058C                     	;# 
   253  058D                     	;# 
   254  058E                     	;# 
   255  058E                     	;# 
   256  058F                     	;# 
   257  0590                     	;# 
   258  0590                     	;# 
   259  0591                     	;# 
   260  0592                     	;# 
   261  0592                     	;# 
   262  0593                     	;# 
   263  0594                     	;# 
   264  0594                     	;# 
   265  0595                     	;# 
   266  0596                     	;# 
   267  0596                     	;# 
   268  0597                     	;# 
   269  0598                     	;# 
   270  0599                     	;# 
   271  059A                     	;# 
   272  059B                     	;# 
   273  059B                     	;# 
   274  059C                     	;# 
   275  059D                     	;# 
   276  060C                     	;# 
   277  060C                     	;# 
   278  060D                     	;# 
   279  060E                     	;# 
   280  060F                     	;# 
   281  060F                     	;# 
   282  0610                     	;# 
   283  0611                     	;# 
   284  0612                     	;# 
   285  0613                     	;# 
   286  0614                     	;# 
   287  0617                     	;# 
   288  0617                     	;# 
   289  0618                     	;# 
   290  0619                     	;# 
   291  061A                     	;# 
   292  061A                     	;# 
   293  061B                     	;# 
   294  061C                     	;# 
   295  0691                     	;# 
   296  0692                     	;# 
   297  0693                     	;# 
   298  0694                     	;# 
   299  0695                     	;# 
   300  0696                     	;# 
   301  0697                     	;# 
   302  0699                     	;# 
   303  069A                     	;# 
   304  0711                     	;# 
   305  0712                     	;# 
   306  0713                     	;# 
   307  0714                     	;# 
   308  0715                     	;# 
   309  0718                     	;# 
   310  0718                     	;# 
   311  0719                     	;# 
   312  071A                     	;# 
   313  071A                     	;# 
   314  071B                     	;# 
   315  071C                     	;# 
   316  071D                     	;# 
   317  0791                     	;# 
   318  0791                     	;# 
   319  0792                     	;# 
   320  0793                     	;# 
   321  0793                     	;# 
   322  0794                     	;# 
   323  0795                     	;# 
   324  0795                     	;# 
   325  0796                     	;# 
   326  0797                     	;# 
   327  0797                     	;# 
   328  0798                     	;# 
   329  0799                     	;# 
   330  079A                     	;# 
   331  080C                     	;# 
   332  080C                     	;# 
   333  080D                     	;# 
   334  080E                     	;# 
   335  080E                     	;# 
   336  080F                     	;# 
   337  0810                     	;# 
   338  0810                     	;# 
   339  0811                     	;# 
   340  0812                     	;# 
   341  0812                     	;# 
   342  0813                     	;# 
   343  0814                     	;# 
   344  0815                     	;# 
   345  0816                     	;# 
   346  0817                     	;# 
   347  0818                     	;# 
   348  0819                     	;# 
   349  081A                     	;# 
   350  081A                     	;# 
   351  081B                     	;# 
   352  081C                     	;# 
   353  081C                     	;# 
   354  081D                     	;# 
   355  088C                     	;# 
   356  088D                     	;# 
   357  088E                     	;# 
   358  088F                     	;# 
   359  088F                     	;# 
   360  0890                     	;# 
   361  0891                     	;# 
   362  0892                     	;# 
   363  0893                     	;# 
   364  0893                     	;# 
   365  0894                     	;# 
   366  0895                     	;# 
   367  0896                     	;# 
   368  0897                     	;# 
   369  0897                     	;# 
   370  0898                     	;# 
   371  0899                     	;# 
   372  0D8C                     	;# 
   373  0D8C                     	;# 
   374  0D8D                     	;# 
   375  0D8E                     	;# 
   376  0D8F                     	;# 
   377  0D8F                     	;# 
   378  0D90                     	;# 
   379  0D91                     	;# 
   380  0D92                     	;# 
   381  0D92                     	;# 
   382  0D93                     	;# 
   383  0D94                     	;# 
   384  0D95                     	;# 
   385  0D95                     	;# 
   386  0D96                     	;# 
   387  0D97                     	;# 
   388  0D98                     	;# 
   389  0D99                     	;# 
   390  0D9A                     	;# 
   391  0D9B                     	;# 
   392  0D9C                     	;# 
   393  0D9D                     	;# 
   394  0D9E                     	;# 
   395  0D9E                     	;# 
   396  0D9F                     	;# 
   397  0DA0                     	;# 
   398  0DA1                     	;# 
   399  0DA1                     	;# 
   400  0DA2                     	;# 
   401  0DA3                     	;# 
   402  0DA4                     	;# 
   403  0DA4                     	;# 
   404  0DA5                     	;# 
   405  0DA6                     	;# 
   406  0DA7                     	;# 
   407  0DA7                     	;# 
   408  0DA8                     	;# 
   409  0DA9                     	;# 
   410  0DAA                     	;# 
   411  0DAB                     	;# 
   412  0DAC                     	;# 
   413  0DAD                     	;# 
   414  0DAE                     	;# 
   415  0DAF                     	;# 
   416  0E0F                     	;# 
   417  0E10                     	;# 
   418  0E11                     	;# 
   419  0E12                     	;# 
   420  0E13                     	;# 
   421  0E14                     	;# 
   422  0E15                     	;# 
   423  0E16                     	;# 
   424  0E17                     	;# 
   425  0E18                     	;# 
   426  0E19                     	;# 
   427  0E1A                     	;# 
   428  0E1B                     	;# 
   429  0E1C                     	;# 
   430  0E1D                     	;# 
   431  0E1E                     	;# 
   432  0E1F                     	;# 
   433  0E20                     	;# 
   434  0E21                     	;# 
   435  0E22                     	;# 
   436  0E23                     	;# 
   437  0E24                     	;# 
   438  0E25                     	;# 
   439  0E26                     	;# 
   440  0E27                     	;# 
   441  0E28                     	;# 
   442  0E29                     	;# 
   443  0E2A                     	;# 
   444  0E2B                     	;# 
   445  0E2C                     	;# 
   446  0E2D                     	;# 
   447  0E2E                     	;# 
   448  0E90                     	;# 
   449  0E91                     	;# 
   450  0E92                     	;# 
   451  0E94                     	;# 
   452  0E95                     	;# 
   453  0EA0                     	;# 
   454  0EA1                     	;# 
   455  0EA2                     	;# 
   456  0EA3                     	;# 
   457  0EA4                     	;# 
   458  0EA5                     	;# 
   459  0F0F                     	;# 
   460  0F10                     	;# 
   461  0F11                     	;# 
   462  0F12                     	;# 
   463  0F13                     	;# 
   464  0F14                     	;# 
   465  0F15                     	;# 
   466  0F16                     	;# 
   467  0F17                     	;# 
   468  0F18                     	;# 
   469  0F19                     	;# 
   470  0F1A                     	;# 
   471  0F1B                     	;# 
   472  0F1C                     	;# 
   473  0F1D                     	;# 
   474  0F1E                     	;# 
   475  0F1F                     	;# 
   476  0F20                     	;# 
   477  0F21                     	;# 
   478  0F22                     	;# 
   479  0F23                     	;# 
   480  0F24                     	;# 
   481  0F25                     	;# 
   482  0F26                     	;# 
   483  0F27                     	;# 
   484  0F28                     	;# 
   485  0F29                     	;# 
   486  0F2A                     	;# 
   487  0F2B                     	;# 
   488  0F2C                     	;# 
   489  0F2D                     	;# 
   490  0F2E                     	;# 
   491  0F2F                     	;# 
   492  0F30                     	;# 
   493  0F31                     	;# 
   494  0F32                     	;# 
   495  0F33                     	;# 
   496  0F34                     	;# 
   497  0F35                     	;# 
   498  0F36                     	;# 
   499  0F37                     	;# 
   500  0FE4                     	;# 
   501  0FE5                     	;# 
   502  0FE6                     	;# 
   503  0FE7                     	;# 
   504  0FE8                     	;# 
   505  0FE9                     	;# 
   506  0FEA                     	;# 
   507  0FEB                     	;# 
   508  0FED                     	;# 
   509  0FEE                     	;# 
   510  0FEF                     	;# 
   511  0000                     	;# 
   512  0001                     	;# 
   513  0002                     	;# 
   514  0003                     	;# 
   515  0004                     	;# 
   516  0005                     	;# 
   517  0006                     	;# 
   518  0007                     	;# 
   519  0008                     	;# 
   520  0009                     	;# 
   521  000A                     	;# 
   522  000B                     	;# 
   523  000C                     	;# 
   524  000E                     	;# 
   525  0010                     	;# 
   526  0011                     	;# 
   527  0012                     	;# 
   528  0013                     	;# 
   529  0014                     	;# 
   530  0015                     	;# 
   531  0016                     	;# 
   532  0016                     	;# 
   533  0017                     	;# 
   534  0018                     	;# 
   535  0019                     	;# 
   536  001A                     	;# 
   537  001A                     	;# 
   538  001B                     	;# 
   539  001B                     	;# 
   540  001C                     	;# 
   541  001D                     	;# 
   542  001E                     	;# 
   543  001F                     	;# 
   544  008C                     	;# 
   545  008E                     	;# 
   546  0090                     	;# 
   547  0091                     	;# 
   548  0092                     	;# 
   549  0093                     	;# 
   550  0094                     	;# 
   551  0095                     	;# 
   552  0096                     	;# 
   553  0098                     	;# 
   554  0099                     	;# 
   555  009A                     	;# 
   556  009B                     	;# 
   557  009B                     	;# 
   558  009C                     	;# 
   559  009D                     	;# 
   560  009E                     	;# 
   561  009F                     	;# 
   562  010C                     	;# 
   563  010E                     	;# 
   564  0111                     	;# 
   565  0112                     	;# 
   566  0113                     	;# 
   567  0114                     	;# 
   568  0115                     	;# 
   569  0116                     	;# 
   570  0117                     	;# 
   571  0118                     	;# 
   572  0119                     	;# 
   573  011C                     	;# 
   574  018C                     	;# 
   575  018E                     	;# 
   576  0191                     	;# 
   577  0191                     	;# 
   578  0192                     	;# 
   579  0193                     	;# 
   580  0193                     	;# 
   581  0194                     	;# 
   582  0195                     	;# 
   583  0196                     	;# 
   584  0197                     	;# 
   585  0199                     	;# 
   586  0199                     	;# 
   587  0199                     	;# 
   588  019A                     	;# 
   589  019A                     	;# 
   590  019A                     	;# 
   591  019B                     	;# 
   592  019B                     	;# 
   593  019B                     	;# 
   594  019B                     	;# 
   595  019B                     	;# 
   596  019C                     	;# 
   597  019C                     	;# 
   598  019C                     	;# 
   599  019D                     	;# 
   600  019D                     	;# 
   601  019D                     	;# 
   602  019E                     	;# 
   603  019E                     	;# 
   604  019E                     	;# 
   605  019F                     	;# 
   606  019F                     	;# 
   607  019F                     	;# 
   608  019F                     	;# 
   609  019F                     	;# 
   610  020C                     	;# 
   611  020E                     	;# 
   612  0211                     	;# 
   613  0211                     	;# 
   614  0212                     	;# 
   615  0212                     	;# 
   616  0213                     	;# 
   617  0213                     	;# 
   618  0214                     	;# 
   619  0214                     	;# 
   620  0215                     	;# 
   621  0215                     	;# 
   622  0215                     	;# 
   623  0215                     	;# 
   624  0216                     	;# 
   625  0216                     	;# 
   626  0217                     	;# 
   627  0217                     	;# 
   628  028C                     	;# 
   629  028E                     	;# 
   630  0291                     	;# 
   631  0291                     	;# 
   632  0292                     	;# 
   633  0293                     	;# 
   634  0294                     	;# 
   635  0298                     	;# 
   636  0298                     	;# 
   637  0299                     	;# 
   638  029A                     	;# 
   639  029B                     	;# 
   640  029E                     	;# 
   641  030C                     	;# 
   642  030E                     	;# 
   643  038C                     	;# 
   644  038E                     	;# 
   645  0391                     	;# 
   646  0392                     	;# 
   647  0393                     	;# 
   648  0397                     	;# 
   649  0398                     	;# 
   650  0399                     	;# 
   651  040E                     	;# 
   652  0413                     	;# 
   653  0413                     	;# 
   654  0414                     	;# 
   655  0414                     	;# 
   656  0415                     	;# 
   657  0416                     	;# 
   658  0417                     	;# 
   659  0418                     	;# 
   660  041A                     	;# 
   661  041A                     	;# 
   662  041B                     	;# 
   663  041B                     	;# 
   664  041C                     	;# 
   665  041D                     	;# 
   666  041E                     	;# 
   667  041F                     	;# 
   668  0493                     	;# 
   669  0494                     	;# 
   670  0495                     	;# 
   671  0496                     	;# 
   672  049A                     	;# 
   673  049B                     	;# 
   674  049C                     	;# 
   675  049D                     	;# 
   676  058C                     	;# 
   677  058C                     	;# 
   678  058D                     	;# 
   679  058E                     	;# 
   680  058E                     	;# 
   681  058F                     	;# 
   682  0590                     	;# 
   683  0590                     	;# 
   684  0591                     	;# 
   685  0592                     	;# 
   686  0592                     	;# 
   687  0593                     	;# 
   688  0594                     	;# 
   689  0594                     	;# 
   690  0595                     	;# 
   691  0596                     	;# 
   692  0596                     	;# 
   693  0597                     	;# 
   694  0598                     	;# 
   695  0599                     	;# 
   696  059A                     	;# 
   697  059B                     	;# 
   698  059B                     	;# 
   699  059C                     	;# 
   700  059D                     	;# 
   701  060C                     	;# 
   702  060C                     	;# 
   703  060D                     	;# 
   704  060E                     	;# 
   705  060F                     	;# 
   706  060F                     	;# 
   707  0610                     	;# 
   708  0611                     	;# 
   709  0612                     	;# 
   710  0613                     	;# 
   711  0614                     	;# 
   712  0617                     	;# 
   713  0617                     	;# 
   714  0618                     	;# 
   715  0619                     	;# 
   716  061A                     	;# 
   717  061A                     	;# 
   718  061B                     	;# 
   719  061C                     	;# 
   720  0691                     	;# 
   721  0692                     	;# 
   722  0693                     	;# 
   723  0694                     	;# 
   724  0695                     	;# 
   725  0696                     	;# 
   726  0697                     	;# 
   727  0699                     	;# 
   728  069A                     	;# 
   729  0711                     	;# 
   730  0712                     	;# 
   731  0713                     	;# 
   732  0714                     	;# 
   733  0715                     	;# 
   734  0718                     	;# 
   735  0718                     	;# 
   736  0719                     	;# 
   737  071A                     	;# 
   738  071A                     	;# 
   739  071B                     	;# 
   740  071C                     	;# 
   741  071D                     	;# 
   742  0791                     	;# 
   743  0791                     	;# 
   744  0792                     	;# 
   745  0793                     	;# 
   746  0793                     	;# 
   747  0794                     	;# 
   748  0795                     	;# 
   749  0795                     	;# 
   750  0796                     	;# 
   751  0797                     	;# 
   752  0797                     	;# 
   753  0798                     	;# 
   754  0799                     	;# 
   755  079A                     	;# 
   756  080C                     	;# 
   757  080C                     	;# 
   758  080D                     	;# 
   759  080E                     	;# 
   760  080E                     	;# 
   761  080F                     	;# 
   762  0810                     	;# 
   763  0810                     	;# 
   764  0811                     	;# 
   765  0812                     	;# 
   766  0812                     	;# 
   767  0813                     	;# 
   768  0814                     	;# 
   769  0815                     	;# 
   770  0816                     	;# 
   771  0817                     	;# 
   772  0818                     	;# 
   773  0819                     	;# 
   774  081A                     	;# 
   775  081A                     	;# 
   776  081B                     	;# 
   777  081C                     	;# 
   778  081C                     	;# 
   779  081D                     	;# 
   780  088C                     	;# 
   781  088D                     	;# 
   782  088E                     	;# 
   783  088F                     	;# 
   784  088F                     	;# 
   785  0890                     	;# 
   786  0891                     	;# 
   787  0892                     	;# 
   788  0893                     	;# 
   789  0893                     	;# 
   790  0894                     	;# 
   791  0895                     	;# 
   792  0896                     	;# 
   793  0897                     	;# 
   794  0897                     	;# 
   795  0898                     	;# 
   796  0899                     	;# 
   797  0D8C                     	;# 
   798  0D8C                     	;# 
   799  0D8D                     	;# 
   800  0D8E                     	;# 
   801  0D8F                     	;# 
   802  0D8F                     	;# 
   803  0D90                     	;# 
   804  0D91                     	;# 
   805  0D92                     	;# 
   806  0D92                     	;# 
   807  0D93                     	;# 
   808  0D94                     	;# 
   809  0D95                     	;# 
   810  0D95                     	;# 
   811  0D96                     	;# 
   812  0D97                     	;# 
   813  0D98                     	;# 
   814  0D99                     	;# 
   815  0D9A                     	;# 
   816  0D9B                     	;# 
   817  0D9C                     	;# 
   818  0D9D                     	;# 
   819  0D9E                     	;# 
   820  0D9E                     	;# 
   821  0D9F                     	;# 
   822  0DA0                     	;# 
   823  0DA1                     	;# 
   824  0DA1                     	;# 
   825  0DA2                     	;# 
   826  0DA3                     	;# 
   827  0DA4                     	;# 
   828  0DA4                     	;# 
   829  0DA5                     	;# 
   830  0DA6                     	;# 
   831  0DA7                     	;# 
   832  0DA7                     	;# 
   833  0DA8                     	;# 
   834  0DA9                     	;# 
   835  0DAA                     	;# 
   836  0DAB                     	;# 
   837  0DAC                     	;# 
   838  0DAD                     	;# 
   839  0DAE                     	;# 
   840  0DAF                     	;# 
   841  0E0F                     	;# 
   842  0E10                     	;# 
   843  0E11                     	;# 
   844  0E12                     	;# 
   845  0E13                     	;# 
   846  0E14                     	;# 
   847  0E15                     	;# 
   848  0E16                     	;# 
   849  0E17                     	;# 
   850  0E18                     	;# 
   851  0E19                     	;# 
   852  0E1A                     	;# 
   853  0E1B                     	;# 
   854  0E1C                     	;# 
   855  0E1D                     	;# 
   856  0E1E                     	;# 
   857  0E1F                     	;# 
   858  0E20                     	;# 
   859  0E21                     	;# 
   860  0E22                     	;# 
   861  0E23                     	;# 
   862  0E24                     	;# 
   863  0E25                     	;# 
   864  0E26                     	;# 
   865  0E27                     	;# 
   866  0E28                     	;# 
   867  0E29                     	;# 
   868  0E2A                     	;# 
   869  0E2B                     	;# 
   870  0E2C                     	;# 
   871  0E2D                     	;# 
   872  0E2E                     	;# 
   873  0E90                     	;# 
   874  0E91                     	;# 
   875  0E92                     	;# 
   876  0E94                     	;# 
   877  0E95                     	;# 
   878  0EA0                     	;# 
   879  0EA1                     	;# 
   880  0EA2                     	;# 
   881  0EA3                     	;# 
   882  0EA4                     	;# 
   883  0EA5                     	;# 
   884  0F0F                     	;# 
   885  0F10                     	;# 
   886  0F11                     	;# 
   887  0F12                     	;# 
   888  0F13                     	;# 
   889  0F14                     	;# 
   890  0F15                     	;# 
   891  0F16                     	;# 
   892  0F17                     	;# 
   893  0F18                     	;# 
   894  0F19                     	;# 
   895  0F1A                     	;# 
   896  0F1B                     	;# 
   897  0F1C                     	;# 
   898  0F1D                     	;# 
   899  0F1E                     	;# 
   900  0F1F                     	;# 
   901  0F20                     	;# 
   902  0F21                     	;# 
   903  0F22                     	;# 
   904  0F23                     	;# 
   905  0F24                     	;# 
   906  0F25                     	;# 
   907  0F26                     	;# 
   908  0F27                     	;# 
   909  0F28                     	;# 
   910  0F29                     	;# 
   911  0F2A                     	;# 
   912  0F2B                     	;# 
   913  0F2C                     	;# 
   914  0F2D                     	;# 
   915  0F2E                     	;# 
   916  0F2F                     	;# 
   917  0F30                     	;# 
   918  0F31                     	;# 
   919  0F32                     	;# 
   920  0F33                     	;# 
   921  0F34                     	;# 
   922  0F35                     	;# 
   923  0F36                     	;# 
   924  0F37                     	;# 
   925  0FE4                     	;# 
   926  0FE5                     	;# 
   927  0FE6                     	;# 
   928  0FE7                     	;# 
   929  0FE8                     	;# 
   930  0FE9                     	;# 
   931  0FEA                     	;# 
   932  0FEB                     	;# 
   933  0FED                     	;# 
   934  0FEE                     	;# 
   935  0FEF                     	;# 
   936  0000                     	;# 
   937  0001                     	;# 
   938  0002                     	;# 
   939  0003                     	;# 
   940  0004                     	;# 
   941  0005                     	;# 
   942  0006                     	;# 
   943  0007                     	;# 
   944  0008                     	;# 
   945  0009                     	;# 
   946  000A                     	;# 
   947  000B                     	;# 
   948  000C                     	;# 
   949  000E                     	;# 
   950  0010                     	;# 
   951  0011                     	;# 
   952  0012                     	;# 
   953  0013                     	;# 
   954  0014                     	;# 
   955  0015                     	;# 
   956  0016                     	;# 
   957  0016                     	;# 
   958  0017                     	;# 
   959  0018                     	;# 
   960  0019                     	;# 
   961  001A                     	;# 
   962  001A                     	;# 
   963  001B                     	;# 
   964  001B                     	;# 
   965  001C                     	;# 
   966  001D                     	;# 
   967  001E                     	;# 
   968  001F                     	;# 
   969  008C                     	;# 
   970  008E                     	;# 
   971  0090                     	;# 
   972  0091                     	;# 
   973  0092                     	;# 
   974  0093                     	;# 
   975  0094                     	;# 
   976  0095                     	;# 
   977  0096                     	;# 
   978  0098                     	;# 
   979  0099                     	;# 
   980  009A                     	;# 
   981  009B                     	;# 
   982  009B                     	;# 
   983  009C                     	;# 
   984  009D                     	;# 
   985  009E                     	;# 
   986  009F                     	;# 
   987  010C                     	;# 
   988  010E                     	;# 
   989  0111                     	;# 
   990  0112                     	;# 
   991  0113                     	;# 
   992  0114                     	;# 
   993  0115                     	;# 
   994  0116                     	;# 
   995  0117                     	;# 
   996  0118                     	;# 
   997  0119                     	;# 
   998  011C                     	;# 
   999  018C                     	;# 
  1000  018E                     	;# 
  1001  0191                     	;# 
  1002  0191                     	;# 
  1003  0192                     	;# 
  1004  0193                     	;# 
  1005  0193                     	;# 
  1006  0194                     	;# 
  1007  0195                     	;# 
  1008  0196                     	;# 
  1009  0197                     	;# 
  1010  0199                     	;# 
  1011  0199                     	;# 
  1012  0199                     	;# 
  1013  019A                     	;# 
  1014  019A                     	;# 
  1015  019A                     	;# 
  1016  019B                     	;# 
  1017  019B                     	;# 
  1018  019B                     	;# 
  1019  019B                     	;# 
  1020  019B                     	;# 
  1021  019C                     	;# 
  1022  019C                     	;# 
  1023  019C                     	;# 
  1024  019D                     	;# 
  1025  019D                     	;# 
  1026  019D                     	;# 
  1027  019E                     	;# 
  1028  019E                     	;# 
  1029  019E                     	;# 
  1030  019F                     	;# 
  1031  019F                     	;# 
  1032  019F                     	;# 
  1033  019F                     	;# 
  1034  019F                     	;# 
  1035  020C                     	;# 
  1036  020E                     	;# 
  1037  0211                     	;# 
  1038  0211                     	;# 
  1039  0212                     	;# 
  1040  0212                     	;# 
  1041  0213                     	;# 
  1042  0213                     	;# 
  1043  0214                     	;# 
  1044  0214                     	;# 
  1045  0215                     	;# 
  1046  0215                     	;# 
  1047  0215                     	;# 
  1048  0215                     	;# 
  1049  0216                     	;# 
  1050  0216                     	;# 
  1051  0217                     	;# 
  1052  0217                     	;# 
  1053  028C                     	;# 
  1054  028E                     	;# 
  1055  0291                     	;# 
  1056  0291                     	;# 
  1057  0292                     	;# 
  1058  0293                     	;# 
  1059  0294                     	;# 
  1060  0298                     	;# 
  1061  0298                     	;# 
  1062  0299                     	;# 
  1063  029A                     	;# 
  1064  029B                     	;# 
  1065  029E                     	;# 
  1066  030C                     	;# 
  1067  030E                     	;# 
  1068  038C                     	;# 
  1069  038E                     	;# 
  1070  0391                     	;# 
  1071  0392                     	;# 
  1072  0393                     	;# 
  1073  0397                     	;# 
  1074  0398                     	;# 
  1075  0399                     	;# 
  1076  040E                     	;# 
  1077  0413                     	;# 
  1078  0413                     	;# 
  1079  0414                     	;# 
  1080  0414                     	;# 
  1081  0415                     	;# 
  1082  0416                     	;# 
  1083  0417                     	;# 
  1084  0418                     	;# 
  1085  041A                     	;# 
  1086  041A                     	;# 
  1087  041B                     	;# 
  1088  041B                     	;# 
  1089  041C                     	;# 
  1090  041D                     	;# 
  1091  041E                     	;# 
  1092  041F                     	;# 
  1093  0493                     	;# 
  1094  0494                     	;# 
  1095  0495                     	;# 
  1096  0496                     	;# 
  1097  049A                     	;# 
  1098  049B                     	;# 
  1099  049C                     	;# 
  1100  049D                     	;# 
  1101  058C                     	;# 
  1102  058C                     	;# 
  1103  058D                     	;# 
  1104  058E                     	;# 
  1105  058E                     	;# 
  1106  058F                     	;# 
  1107  0590                     	;# 
  1108  0590                     	;# 
  1109  0591                     	;# 
  1110  0592                     	;# 
  1111  0592                     	;# 
  1112  0593                     	;# 
  1113  0594                     	;# 
  1114  0594                     	;# 
  1115  0595                     	;# 
  1116  0596                     	;# 
  1117  0596                     	;# 
  1118  0597                     	;# 
  1119  0598                     	;# 
  1120  0599                     	;# 
  1121  059A                     	;# 
  1122  059B                     	;# 
  1123  059B                     	;# 
  1124  059C                     	;# 
  1125  059D                     	;# 
  1126  060C                     	;# 
  1127  060C                     	;# 
  1128  060D                     	;# 
  1129  060E                     	;# 
  1130  060F                     	;# 
  1131  060F                     	;# 
  1132  0610                     	;# 
  1133  0611                     	;# 
  1134  0612                     	;# 
  1135  0613                     	;# 
  1136  0614                     	;# 
  1137  0617                     	;# 
  1138  0617                     	;# 
  1139  0618                     	;# 
  1140  0619                     	;# 
  1141  061A                     	;# 
  1142  061A                     	;# 
  1143  061B                     	;# 
  1144  061C                     	;# 
  1145  0691                     	;# 
  1146  0692                     	;# 
  1147  0693                     	;# 
  1148  0694                     	;# 
  1149  0695                     	;# 
  1150  0696                     	;# 
  1151  0697                     	;# 
  1152  0699                     	;# 
  1153  069A                     	;# 
  1154  0711                     	;# 
  1155  0712                     	;# 
  1156  0713                     	;# 
  1157  0714                     	;# 
  1158  0715                     	;# 
  1159  0718                     	;# 
  1160  0718                     	;# 
  1161  0719                     	;# 
  1162  071A                     	;# 
  1163  071A                     	;# 
  1164  071B                     	;# 
  1165  071C                     	;# 
  1166  071D                     	;# 
  1167  0791                     	;# 
  1168  0791                     	;# 
  1169  0792                     	;# 
  1170  0793                     	;# 
  1171  0793                     	;# 
  1172  0794                     	;# 
  1173  0795                     	;# 
  1174  0795                     	;# 
  1175  0796                     	;# 
  1176  0797                     	;# 
  1177  0797                     	;# 
  1178  0798                     	;# 
  1179  0799                     	;# 
  1180  079A                     	;# 
  1181  080C                     	;# 
  1182  080C                     	;# 
  1183  080D                     	;# 
  1184  080E                     	;# 
  1185  080E                     	;# 
  1186  080F                     	;# 
  1187  0810                     	;# 
  1188  0810                     	;# 
  1189  0811                     	;# 
  1190  0812                     	;# 
  1191  0812                     	;# 
  1192  0813                     	;# 
  1193  0814                     	;# 
  1194  0815                     	;# 
  1195  0816                     	;# 
  1196  0817                     	;# 
  1197  0818                     	;# 
  1198  0819                     	;# 
  1199  081A                     	;# 
  1200  081A                     	;# 
  1201  081B                     	;# 
  1202  081C                     	;# 
  1203  081C                     	;# 
  1204  081D                     	;# 
  1205  088C                     	;# 
  1206  088D                     	;# 
  1207  088E                     	;# 
  1208  088F                     	;# 
  1209  088F                     	;# 
  1210  0890                     	;# 
  1211  0891                     	;# 
  1212  0892                     	;# 
  1213  0893                     	;# 
  1214  0893                     	;# 
  1215  0894                     	;# 
  1216  0895                     	;# 
  1217  0896                     	;# 
  1218  0897                     	;# 
  1219  0897                     	;# 
  1220  0898                     	;# 
  1221  0899                     	;# 
  1222  0D8C                     	;# 
  1223  0D8C                     	;# 
  1224  0D8D                     	;# 
  1225  0D8E                     	;# 
  1226  0D8F                     	;# 
  1227  0D8F                     	;# 
  1228  0D90                     	;# 
  1229  0D91                     	;# 
  1230  0D92                     	;# 
  1231  0D92                     	;# 
  1232  0D93                     	;# 
  1233  0D94                     	;# 
  1234  0D95                     	;# 
  1235  0D95                     	;# 
  1236  0D96                     	;# 
  1237  0D97                     	;# 
  1238  0D98                     	;# 
  1239  0D99                     	;# 
  1240  0D9A                     	;# 
  1241  0D9B                     	;# 
  1242  0D9C                     	;# 
  1243  0D9D                     	;# 
  1244  0D9E                     	;# 
  1245  0D9E                     	;# 
  1246  0D9F                     	;# 
  1247  0DA0                     	;# 
  1248  0DA1                     	;# 
  1249  0DA1                     	;# 
  1250  0DA2                     	;# 
  1251  0DA3                     	;# 
  1252  0DA4                     	;# 
  1253  0DA4                     	;# 
  1254  0DA5                     	;# 
  1255  0DA6                     	;# 
  1256  0DA7                     	;# 
  1257  0DA7                     	;# 
  1258  0DA8                     	;# 
  1259  0DA9                     	;# 
  1260  0DAA                     	;# 
  1261  0DAB                     	;# 
  1262  0DAC                     	;# 
  1263  0DAD                     	;# 
  1264  0DAE                     	;# 
  1265  0DAF                     	;# 
  1266  0E0F                     	;# 
  1267  0E10                     	;# 
  1268  0E11                     	;# 
  1269  0E12                     	;# 
  1270  0E13                     	;# 
  1271  0E14                     	;# 
  1272  0E15                     	;# 
  1273  0E16                     	;# 
  1274  0E17                     	;# 
  1275  0E18                     	;# 
  1276  0E19                     	;# 
  1277  0E1A                     	;# 
  1278  0E1B                     	;# 
  1279  0E1C                     	;# 
  1280  0E1D                     	;# 
  1281  0E1E                     	;# 
  1282  0E1F                     	;# 
  1283  0E20                     	;# 
  1284  0E21                     	;# 
  1285  0E22                     	;# 
  1286  0E23                     	;# 
  1287  0E24                     	;# 
  1288  0E25                     	;# 
  1289  0E26                     	;# 
  1290  0E27                     	;# 
  1291  0E28                     	;# 
  1292  0E29                     	;# 
  1293  0E2A                     	;# 
  1294  0E2B                     	;# 
  1295  0E2C                     	;# 
  1296  0E2D                     	;# 
  1297  0E2E                     	;# 
  1298  0E90                     	;# 
  1299  0E91                     	;# 
  1300  0E92                     	;# 
  1301  0E94                     	;# 
  1302  0E95                     	;# 
  1303  0EA0                     	;# 
  1304  0EA1                     	;# 
  1305  0EA2                     	;# 
  1306  0EA3                     	;# 
  1307  0EA4                     	;# 
  1308  0EA5                     	;# 
  1309  0F0F                     	;# 
  1310  0F10                     	;# 
  1311  0F11                     	;# 
  1312  0F12                     	;# 
  1313  0F13                     	;# 
  1314  0F14                     	;# 
  1315  0F15                     	;# 
  1316  0F16                     	;# 
  1317  0F17                     	;# 
  1318  0F18                     	;# 
  1319  0F19                     	;# 
  1320  0F1A                     	;# 
  1321  0F1B                     	;# 
  1322  0F1C                     	;# 
  1323  0F1D                     	;# 
  1324  0F1E                     	;# 
  1325  0F1F                     	;# 
  1326  0F20                     	;# 
  1327  0F21                     	;# 
  1328  0F22                     	;# 
  1329  0F23                     	;# 
  1330  0F24                     	;# 
  1331  0F25                     	;# 
  1332  0F26                     	;# 
  1333  0F27                     	;# 
  1334  0F28                     	;# 
  1335  0F29                     	;# 
  1336  0F2A                     	;# 
  1337  0F2B                     	;# 
  1338  0F2C                     	;# 
  1339  0F2D                     	;# 
  1340  0F2E                     	;# 
  1341  0F2F                     	;# 
  1342  0F30                     	;# 
  1343  0F31                     	;# 
  1344  0F32                     	;# 
  1345  0F33                     	;# 
  1346  0F34                     	;# 
  1347  0F35                     	;# 
  1348  0F36                     	;# 
  1349  0F37                     	;# 
  1350  0FE4                     	;# 
  1351  0FE5                     	;# 
  1352  0FE6                     	;# 
  1353  0FE7                     	;# 
  1354  0FE8                     	;# 
  1355  0FE9                     	;# 
  1356  0FEA                     	;# 
  1357  0FEB                     	;# 
  1358  0FED                     	;# 
  1359  0FEE                     	;# 
  1360  0FEF                     	;# 
  1361                           
  1362                           	psect	idataBANK0
  1363  03EF                     __pidataBANK0:
  1364                           
  1365                           ;initializer for _SYNC_WORDS
  1366  03EF  3467               	retlw	103
  1367  03F0  3467               	retlw	103
  1368  03F1  3467               	retlw	103
  1369  03F2  3467               	retlw	103
  1370  03F3  3467               	retlw	103
  1371  03F4  3467               	retlw	103
  1372  03F5  3467               	retlw	103
  1373  03F6  3467               	retlw	103
  1374                           
  1375                           ;initializer for getPowerSettings@F9514
  1376  03F7  3411               	retlw	17
  1377  03F8  3400               	retlw	0
  1378                           
  1379                           ;initializer for restartRx@F9510
  1380  03F9  34BD               	retlw	189
  1381  03FA  3406               	retlw	6
  1382                           
  1383                           ;initializer for startRSSISampling@F9506
  1384  03FB  34A3               	retlw	163
  1385  03FC  3401               	retlw	1
  1386                           
  1387                           ;initializer for checkRSSISampling@F9502
  1388  03FD  3423               	retlw	35
  1389  03FE  3400               	retlw	0
  1390                           
  1391                           ;initializer for getModeFlags@F9498
  1392  03FF  3427               	retlw	39
  1393  0400  3400               	retlw	0
  1394                           
  1395                           ;initializer for getOperatingMode@F9489
  1396  0401  3401               	retlw	1
  1397  0402  3400               	retlw	0
  1398                           
  1399                           ;initializer for getRSSIThreshold@F9485
  1400  0403  3429               	retlw	41
  1401  0404  3400               	retlw	0
  1402                           
  1403                           ;initializer for getFifoFlags@F9481
  1404  0405  3428               	retlw	40
  1405  0406  3400               	retlw	0
  1406                           
  1407                           ;initializer for getRSSI@F9477
  1408  0407  3424               	retlw	36
  1409  0408  3400               	retlw	0
  1410                           
  1411                           ;initializer for setPreambleLength@F9462
  1412  0409  34AD               	retlw	173
  1413  040A  3403               	retlw	3
  1414                           
  1415                           ;initializer for checkForPayload@F9455
  1416  040B  3428               	retlw	40
  1417  040C  3400               	retlw	0
  1418                           
  1419                           ;initializer for setPacketFormat@F9440
  1420  040D  34B7               	retlw	183
  1421  040E  3410               	retlw	16
  1422                           
  1423                           	psect	idataBANK2
  1424  024F                     __pidataBANK2:
  1425                           
  1426                           ;initializer for _recommended_params
  1427  024F  3498               	retlw	152
  1428  0250  3408               	retlw	8
  1429  0251  3499               	retlw	153
  1430  0252  3455               	retlw	85
  1431  0253  349A               	retlw	154
  1432  0254  348B               	retlw	139
  1433  0255  34EF               	retlw	239
  1434  0256  3400               	retlw	0
  1435  0257  3400               	retlw	0
  1436  0258  3400               	retlw	0
  1437                           
  1438                           	psect	idataBANK3
  1439  0517                     __pidataBANK3:
  1440                           
  1441                           ;initializer for main@F9417
  1442  0517  3400               	retlw	0
  1443  0518  3400               	retlw	0
  1444  0519  3400               	retlw	0
  1445  051A  3400               	retlw	0
  1446  051B  3400               	retlw	0
  1447  051C  3400               	retlw	0
  1448  051D  3400               	retlw	0
  1449  051E  3400               	retlw	0
  1450  051F  3400               	retlw	0
  1451  0520  3400               	retlw	0
  1452  0521  3400               	retlw	0
  1453  0522  3400               	retlw	0
  1454  0523  3400               	retlw	0
  1455  0524  3400               	retlw	0
  1456  0525  3400               	retlw	0
  1457  0526  3400               	retlw	0
  1458  0527  3400               	retlw	0
  1459  0528  3400               	retlw	0
  1460  0529  3400               	retlw	0
  1461  052A  3400               	retlw	0
  1462  052B  3400               	retlw	0
  1463  052C  3400               	retlw	0
  1464  052D  3400               	retlw	0
  1465  052E  3400               	retlw	0
  1466  052F  3400               	retlw	0
  1467  0530  3400               	retlw	0
  1468  0531  3400               	retlw	0
  1469  0532  3400               	retlw	0
  1470  0533  3400               	retlw	0
  1471  0534  3400               	retlw	0
  1472  0535  3400               	retlw	0
  1473  0536  3400               	retlw	0
  1474  0537  3400               	retlw	0
  1475  0538  3400               	retlw	0
  1476  0539  3400               	retlw	0
  1477  053A  3400               	retlw	0
  1478  053B  3400               	retlw	0
  1479  053C  3400               	retlw	0
  1480  053D  3400               	retlw	0
  1481  053E  3400               	retlw	0
  1482  053F  340C               	retlw	12
  1483  0540  3400               	retlw	0
  1484  0541  3402               	retlw	2
  1485  0542  3404               	retlw	4
  1486  0543  3400               	retlw	0
  1487  0544  3400               	retlw	0
  1488  0545  3400               	retlw	0
  1489  0546  3400               	retlw	0
  1490  0547  3400               	retlw	0
  1491  0548  3400               	retlw	0
  1492  0549  3400               	retlw	0
  1493  054A  3400               	retlw	0
  1494  054B  3400               	retlw	0
  1495  054C  3400               	retlw	0
  1496  054D  3400               	retlw	0
  1497  054E  3400               	retlw	0
  1498  054F  3400               	retlw	0
  1499  0550  3400               	retlw	0
  1500  0551  3400               	retlw	0
  1501  0552  3400               	retlw	0
  1502  0553  3400               	retlw	0
  1503  0554  3400               	retlw	0
  1504  0555  3400               	retlw	0
  1505  0556  3400               	retlw	0
  1506  0557  3420               	retlw	32
  1507  0558  34E4               	retlw	228
  1508  0559  3467               	retlw	103
  1509  055A  3467               	retlw	103
  1510  055B  3467               	retlw	103
  1511  055C  3467               	retlw	103
  1512  055D  3467               	retlw	103
  1513  055E  3467               	retlw	103
  1514  055F  3467               	retlw	103
  1515  0560  3467               	retlw	103
  1516  0561  3400               	retlw	0
  1517  000E                     _PORTCbits	set	14
  1518  000C                     _PORTA	set	12
  1519  0465                     _TRISA5	set	1125
  1520  0462                     _TRISA2	set	1122
  1521  0475                     _TRISC5	set	1141
  1522  0473                     _TRISC3	set	1139
  1523  0472                     _TRISC2	set	1138
  1524  0471                     _TRISC1	set	1137
  1525  0470                     _TRISC0	set	1136
  1526  018E                     _ANSELC	set	398
  1527  018C                     _ANSELA	set	396
  1528  0215                     _SSP1CONbits	set	533
  1529  0215                     _SSP1CON1bits	set	533
  1530  0214                     _SSP1STATbits	set	532
  1531  0211                     _SSP1BUF	set	529
  1532  0E21                     _SSPDATPPS	set	3617
  1533  0EA3                     _RC3PPS	set	3747
  1534  0EA0                     _RC0PPS	set	3744
  1535                           
  1536                           	psect	cinit
  1537  07CC                     start_initialization:	
  1538                           ; #config settings
  1539                           
  1540  07CC                     __initialization:
  1541                           
  1542                           ; Initialize objects allocated to BANK0
  1543  07CC  30EF               	movlw	low __pidataBANK0
  1544  07CD  0084               	movwf	4
  1545  07CE  3083               	movlw	(high __pidataBANK0)| (0+128)
  1546  07CF  0085               	movwf	5
  1547  07D0  3020               	movlw	low __pdataBANK0
  1548  07D1  0086               	movwf	6
  1549  07D2  3000               	movlw	high __pdataBANK0
  1550  07D3  0087               	movwf	7
  1551  07D4  3020               	movlw	32
  1552  07D5  3182  2238  3187   	fcall	init_ram
  1553                           
  1554                           ; Initialize objects allocated to BANK2
  1555  07D8  304F               	movlw	low __pidataBANK2
  1556  07D9  0084               	movwf	4
  1557  07DA  3082               	movlw	(high __pidataBANK2)| (0+128)
  1558  07DB  0085               	movwf	5
  1559  07DC  3020               	movlw	low __pdataBANK2
  1560  07DD  0086               	movwf	6
  1561  07DE  3001               	movlw	high __pdataBANK2
  1562  07DF  0087               	movwf	7
  1563  07E0  300A               	movlw	10
  1564  07E1  3182  2238  3187   	fcall	init_ram
  1565                           
  1566                           ; Initialize objects allocated to BANK3
  1567  07E4  3017               	movlw	low __pidataBANK3
  1568  07E5  0084               	movwf	4
  1569  07E6  3085               	movlw	(high __pidataBANK3)| (0+128)
  1570  07E7  0085               	movwf	5
  1571  07E8  30A0               	movlw	low __pdataBANK3
  1572  07E9  0086               	movwf	6
  1573  07EA  3001               	movlw	high __pdataBANK3
  1574  07EB  0087               	movwf	7
  1575  07EC  304B               	movlw	75
  1576  07ED  3182  2238  3187   	fcall	init_ram
  1577                           
  1578                           ; Clear objects allocated to BANK0
  1579  07F0  3058               	movlw	low __pbssBANK0
  1580  07F1  0084               	movwf	4
  1581  07F2  3000               	movlw	high __pbssBANK0
  1582  07F3  0085               	movwf	5
  1583  07F4  3017               	movlw	23
  1584  07F5  3182  2232  3187   	fcall	clear_ram0
  1585                           
  1586                           ; Clear objects allocated to BANK1
  1587  07F8  0021               	movlb	1	; select bank1
  1588  07F9  01EB               	clrf	__pbssBANK1& (0+127)
  1589  07FA  01EC               	clrf	(__pbssBANK1+1)& (0+127)
  1590  07FB  01ED               	clrf	(__pbssBANK1+2)& (0+127)
  1591  07FC  01EE               	clrf	(__pbssBANK1+3)& (0+127)
  1592  07FD                     end_of_initialization:	
  1593                           ;End of C runtime variable initialization code
  1594                           
  1595  07FD                     __end_of__initialization:
  1596  07FD  0020               	movlb	0
  1597  07FE  3186  2E75         	ljmp	_main	;jump to C main() function
  1598                           
  1599                           	psect	bssBANK0
  1600  0058                     __pbssBANK0:
  1601  0058                     _thermistorTemp:
  1602  0058                     	ds	4
  1603  005C                     setAutoMode@F9519:
  1604  005C                     	ds	2
  1605  005E                     setDiodeMapping@F9494:
  1606  005E                     	ds	2
  1607  0060                     setPowerOutput@F9469:
  1608  0060                     	ds	2
  1609  0062                     setModulationThreshold@F9451:
  1610  0062                     	ds	2
  1611  0064                     setOperatingMode@F9445:
  1612  0064                     	ds	2
  1613  0066                     setRSSIThreshold@F9436:
  1614  0066                     	ds	2
  1615  0068                     setNodeAddress@F9432:
  1616  0068                     	ds	2
  1617  006A                     setPacketLength@F9428:
  1618  006A                     	ds	2
  1619  006C                     sendPairs@F9406:
  1620  006C                     	ds	2
  1621  006E                     _RSSISampling:
  1622  006E                     	ds	1
  1623                           
  1624                           	psect	dataBANK0
  1625  0020                     __pdataBANK0:
  1626  0020                     _SYNC_WORDS:
  1627  0020                     	ds	8
  1628  0028                     getPowerSettings@F9514:
  1629  0028                     	ds	2
  1630  002A                     restartRx@F9510:
  1631  002A                     	ds	2
  1632  002C                     startRSSISampling@F9506:
  1633  002C                     	ds	2
  1634  002E                     checkRSSISampling@F9502:
  1635  002E                     	ds	2
  1636  0030                     getModeFlags@F9498:
  1637  0030                     	ds	2
  1638  0032                     getOperatingMode@F9489:
  1639  0032                     	ds	2
  1640  0034                     getRSSIThreshold@F9485:
  1641  0034                     	ds	2
  1642  0036                     getFifoFlags@F9481:
  1643  0036                     	ds	2
  1644  0038                     getRSSI@F9477:
  1645  0038                     	ds	2
  1646  003A                     setPreambleLength@F9462:
  1647  003A                     	ds	2
  1648  003C                     checkForPayload@F9455:
  1649  003C                     	ds	2
  1650  003E                     setPacketFormat@F9440:
  1651  003E                     	ds	2
  1652                           
  1653                           	psect	bssBANK1
  1654  00EB                     __pbssBANK1:
  1655  00EB                     _modeFlags:
  1656  00EB                     	ds	1
  1657  00EC                     _fifoFlags:
  1658  00EC                     	ds	1
  1659  00ED                     _RSSI:
  1660  00ED                     	ds	1
  1661  00EE                     _operatingMode:
  1662  00EE                     	ds	1
  1663                           
  1664                           	psect	dataBANK2
  1665  0120                     __pdataBANK2:
  1666  0120                     _recommended_params:
  1667  0120                     	ds	10
  1668                           
  1669                           	psect	dataBANK3
  1670  01A0                     __pdataBANK3:
  1671  01A0                     main@F9417:
  1672  01A0                     	ds	75
  1673                           
  1674                           	psect	inittext
  1675  0238                     init_ram:
  1676  0238  00FE               	movwf	btemp
  1677  0239                     initloop:
  1678  0239  0012               	moviw fsr0++
  1679  023A  001E               	movwi fsr1++
  1680  023B  0BFE               	decfsz	btemp,f
  1681  023C  2A39               	goto	initloop
  1682  023D  3400               	retlw	0
  1683                           
  1684                           	psect	clrtext
  1685  0232                     clear_ram0:	
  1686                           ;	Called with FSR0 containing the base address, and
  1687                           ;	WREG with the size to clear
  1688                           
  1689  0232  0064               	clrwdt	;clear the watchdog before getting into this loop
  1690  0233                     clrloop0:
  1691  0233  0180               	clrf	0	;clear RAM location pointed to by FSR
  1692  0234  3101               	addfsr 0,1
  1693  0235  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1694  0236  2A33               	goto	clrloop0	;have we reached the end yet?
  1695  0237  3400               	retlw	0	;all done for this memory range, return
  1696                           
  1697                           	psect	cstackBANK1
  1698  00A0                     __pcstackBANK1:
  1699  00A0                     main@radio:
  1700                           
  1701                           ; 75 bytes @ 0x0
  1702  00A0                     	ds	75
  1703                           
  1704                           	psect	cstackCOMMON
  1705  0070                     __pcstackCOMMON:
  1706  0070                     ?_rfmSetup:
  1707  0070                     ?_spi_init_master:	
  1708                           ; 1 bytes @ 0x0
  1709                           
  1710  0070                     ??_spi_init_master:	
  1711                           ; 1 bytes @ 0x0
  1712                           
  1713  0070                     ?_initRadio:	
  1714                           ; 1 bytes @ 0x0
  1715                           
  1716  0070                     ?_getRSSI:	
  1717                           ; 1 bytes @ 0x0
  1718                           
  1719  0070                     ?_getFifoFlags:	
  1720                           ; 1 bytes @ 0x0
  1721                           
  1722  0070                     ?_getModeFlags:	
  1723                           ; 1 bytes @ 0x0
  1724                           
  1725  0070                     ?_getOperatingMode:	
  1726                           ; 1 bytes @ 0x0
  1727                           
  1728  0070                     ?_receivePayload:	
  1729                           ; 1 bytes @ 0x0
  1730                           
  1731  0070                     ?_setPinWithMask:	
  1732                           ; 1 bytes @ 0x0
  1733                           
  1734  0070                     ?_send:	
  1735                           ; 1 bytes @ 0x0
  1736                           
  1737  0070                     ?_TRIS_ANS_Setup:	
  1738                           ; 1 bytes @ 0x0
  1739                           
  1740  0070                     ??_TRIS_ANS_Setup:	
  1741                           ; 1 bytes @ 0x0
  1742                           
  1743  0070                     ?_resetRadio:	
  1744                           ; 1 bytes @ 0x0
  1745                           
  1746  0070                     ??_resetRadio:	
  1747                           ; 1 bytes @ 0x0
  1748                           
  1749  0070                     ?_setSyncWords:	
  1750                           ; 1 bytes @ 0x0
  1751                           
  1752  0070                     ?_setPacketLength:	
  1753                           ; 1 bytes @ 0x0
  1754                           
  1755  0070                     ?_setNodeAddress:	
  1756                           ; 1 bytes @ 0x0
  1757                           
  1758  0070                     ?_setRSSIThreshold:	
  1759                           ; 1 bytes @ 0x0
  1760                           
  1761  0070                     ?_setPacketFormat:	
  1762                           ; 1 bytes @ 0x0
  1763                           
  1764  0070                     ?_setRecommendedParams:	
  1765                           ; 1 bytes @ 0x0
  1766                           
  1767  0070                     ?_setModulationThreshold:	
  1768                           ; 1 bytes @ 0x0
  1769                           
  1770  0070                     ?_setPreambleLength:	
  1771                           ; 1 bytes @ 0x0
  1772                           
  1773  0070                     ?_init:	
  1774                           ; 1 bytes @ 0x0
  1775                           
  1776  0070                     ?_main:	
  1777                           ; 2 bytes @ 0x0
  1778                           
  1779  0070                     ?___xxtofl:	
  1780                           ; 2 bytes @ 0x0
  1781                           
  1782  0070                     send@msg:	
  1783                           ; 4 bytes @ 0x0
  1784                           
  1785  0070                     setPinWithMask@pPort:	
  1786                           ; 1 bytes @ 0x0
  1787                           
  1788  0070                     ___xxtofl@val:	
  1789                           ; 2 bytes @ 0x0
  1790                           
  1791                           
  1792                           ; 4 bytes @ 0x0
  1793  0070                     	ds	1
  1794  0071                     ??_rfmSetup:
  1795  0071                     ??_send:	
  1796                           ; 1 bytes @ 0x1
  1797                           
  1798  0071                     ??_init:	
  1799                           ; 1 bytes @ 0x1
  1800                           
  1801                           
  1802                           ; 1 bytes @ 0x1
  1803  0071                     	ds	1
  1804  0072                     setPinWithMask@iPin:
  1805                           
  1806                           ; 1 bytes @ 0x2
  1807  0072                     	ds	1
  1808  0073                     send@temp:
  1809  0073                     setPinWithMask@value:	
  1810                           ; 1 bytes @ 0x3
  1811                           
  1812                           
  1813                           ; 1 bytes @ 0x3
  1814  0073                     	ds	1
  1815  0074                     ??_setPinWithMask:
  1816  0074                     ??___xxtofl:	
  1817                           ; 1 bytes @ 0x4
  1818                           
  1819  0074                     send@radio:	
  1820                           ; 1 bytes @ 0x4
  1821                           
  1822                           
  1823                           ; 1 bytes @ 0x4
  1824  0074                     	ds	2
  1825  0076                     ??_receivePayload:
  1826  0076                     ?_sendBulk:	
  1827                           ; 1 bytes @ 0x6
  1828                           
  1829  0076                     sendBulk@msgs:	
  1830                           ; 1 bytes @ 0x6
  1831                           
  1832                           
  1833                           ; 1 bytes @ 0x6
  1834  0076                     	ds	1
  1835  0077                     sendBulk@len:
  1836                           
  1837                           ; 1 bytes @ 0x7
  1838  0077                     	ds	1
  1839  0078                     ??_sendBulk:
  1840  0078                     ___xxtofl@sign:	
  1841                           ; 1 bytes @ 0x8
  1842                           
  1843  0078                     receivePayload@i:	
  1844                           ; 1 bytes @ 0x8
  1845                           
  1846                           
  1847                           ; 2 bytes @ 0x8
  1848  0078                     	ds	1
  1849  0079                     ___xxtofl@exp:
  1850                           
  1851                           ; 1 bytes @ 0x9
  1852  0079                     	ds	1
  1853  007A                     receivePayload@radio:
  1854  007A                     ___xxtofl@arg:	
  1855                           ; 1 bytes @ 0xA
  1856                           
  1857                           
  1858                           ; 4 bytes @ 0xA
  1859  007A                     	ds	2
  1860  007C                     ?_setPowerOutput:
  1861  007C                     ?_setDiodeMapping:	
  1862                           ; 1 bytes @ 0xC
  1863                           
  1864  007C                     ?_setAutoMode:	
  1865                           ; 1 bytes @ 0xC
  1866                           
  1867  007C                     ?_setOperatingMode:	
  1868                           ; 1 bytes @ 0xC
  1869                           
  1870  007C                     ??_getRSSI:	
  1871                           ; 1 bytes @ 0xC
  1872                           
  1873  007C                     ??_getFifoFlags:	
  1874                           ; 1 bytes @ 0xC
  1875                           
  1876  007C                     ??_getModeFlags:	
  1877                           ; 1 bytes @ 0xC
  1878                           
  1879  007C                     ??_getOperatingMode:	
  1880                           ; 1 bytes @ 0xC
  1881                           
  1882  007C                     ??_sendPairs:	
  1883                           ; 1 bytes @ 0xC
  1884                           
  1885  007C                     ??_setSyncWords:	
  1886                           ; 1 bytes @ 0xC
  1887                           
  1888  007C                     ??_setPacketLength:	
  1889                           ; 1 bytes @ 0xC
  1890                           
  1891  007C                     ??_setNodeAddress:	
  1892                           ; 1 bytes @ 0xC
  1893                           
  1894  007C                     ??_setRSSIThreshold:	
  1895                           ; 1 bytes @ 0xC
  1896                           
  1897  007C                     ??_setPacketFormat:	
  1898                           ; 1 bytes @ 0xC
  1899                           
  1900  007C                     ??_setModulationThreshold:	
  1901                           ; 1 bytes @ 0xC
  1902                           
  1903  007C                     ??_setPreambleLength:	
  1904                           ; 1 bytes @ 0xC
  1905                           
  1906  007C                     setOperatingMode@operatingMode:	
  1907                           ; 1 bytes @ 0xC
  1908                           
  1909  007C                     setPowerOutput@powerSettings:	
  1910                           ; 1 bytes @ 0xC
  1911                           
  1912  007C                     setDiodeMapping@mapping:	
  1913                           ; 1 bytes @ 0xC
  1914                           
  1915  007C                     setAutoMode@autoModes:	
  1916                           ; 1 bytes @ 0xC
  1917                           
  1918                           
  1919                           ; 1 bytes @ 0xC
  1920  007C                     	ds	2
  1921  007E                     ??_initRadio:
  1922                           
  1923                           	psect	cstackBANK0
  1924  0040                     __pcstackBANK0:	
  1925                           ; 1 bytes @ 0xE
  1926                           
  1927  0040                     ?_bytesToFloat:
  1928  0040                     sendBulk@i:	
  1929                           ; 4 bytes @ 0x0
  1930                           
  1931                           
  1932                           ; 2 bytes @ 0x0
  1933  0040                     	ds	2
  1934  0042                     sendBulk@radio:
  1935                           
  1936                           ; 1 bytes @ 0x2
  1937  0042                     	ds	1
  1938  0043                     ??_setPowerOutput:
  1939  0043                     ??_setDiodeMapping:	
  1940                           ; 1 bytes @ 0x3
  1941                           
  1942  0043                     ??_setAutoMode:	
  1943                           ; 1 bytes @ 0x3
  1944                           
  1945  0043                     ??_setOperatingMode:	
  1946                           ; 1 bytes @ 0x3
  1947                           
  1948  0043                     ?_sendPairs:	
  1949                           ; 1 bytes @ 0x3
  1950                           
  1951  0043                     sendPairs@msgs:	
  1952                           ; 1 bytes @ 0x3
  1953                           
  1954  0043                     getRSSI@radio:	
  1955                           ; 1 bytes @ 0x3
  1956                           
  1957  0043                     getOperatingMode@radio:	
  1958                           ; 1 bytes @ 0x3
  1959                           
  1960  0043                     getModeFlags@radio:	
  1961                           ; 1 bytes @ 0x3
  1962                           
  1963  0043                     setPacketLength@msg:	
  1964                           ; 1 bytes @ 0x3
  1965                           
  1966  0043                     setNodeAddress@msg:	
  1967                           ; 2 bytes @ 0x3
  1968                           
  1969  0043                     setRSSIThreshold@msg:	
  1970                           ; 2 bytes @ 0x3
  1971                           
  1972  0043                     setPacketFormat@msg:	
  1973                           ; 2 bytes @ 0x3
  1974                           
  1975  0043                     setModulationThreshold@msg:	
  1976                           ; 2 bytes @ 0x3
  1977                           
  1978  0043                     setPreambleLength@msg:	
  1979                           ; 2 bytes @ 0x3
  1980                           
  1981  0043                     getFifoFlags@msg:	
  1982                           ; 2 bytes @ 0x3
  1983                           
  1984  0043                     setSyncWords@msg:	
  1985                           ; 2 bytes @ 0x3
  1986                           
  1987                           
  1988                           ; 10 bytes @ 0x3
  1989  0043                     	ds	1
  1990  0044                     ??_bytesToFloat:
  1991  0044                     sendPairs@len:	
  1992                           ; 1 bytes @ 0x4
  1993                           
  1994  0044                     getRSSI@msg:	
  1995                           ; 2 bytes @ 0x4
  1996                           
  1997  0044                     getOperatingMode@msg:	
  1998                           ; 2 bytes @ 0x4
  1999                           
  2000  0044                     getModeFlags@msg:	
  2001                           ; 2 bytes @ 0x4
  2002                           
  2003                           
  2004                           ; 2 bytes @ 0x4
  2005  0044                     	ds	1
  2006  0045                     setPacketLength@radio:
  2007  0045                     setNodeAddress@radio:	
  2008                           ; 1 bytes @ 0x5
  2009                           
  2010  0045                     setRSSIThreshold@radio:	
  2011                           ; 1 bytes @ 0x5
  2012                           
  2013  0045                     setPacketFormat@radio:	
  2014                           ; 1 bytes @ 0x5
  2015                           
  2016  0045                     setOperatingMode@radio:	
  2017                           ; 1 bytes @ 0x5
  2018                           
  2019  0045                     setModulationThreshold@radio:	
  2020                           ; 1 bytes @ 0x5
  2021                           
  2022  0045                     setPreambleLength@radio:	
  2023                           ; 1 bytes @ 0x5
  2024                           
  2025  0045                     setPowerOutput@radio:	
  2026                           ; 1 bytes @ 0x5
  2027                           
  2028  0045                     getFifoFlags@radio:	
  2029                           ; 1 bytes @ 0x5
  2030                           
  2031  0045                     setDiodeMapping@radio:	
  2032                           ; 1 bytes @ 0x5
  2033                           
  2034  0045                     setAutoMode@radio:	
  2035                           ; 1 bytes @ 0x5
  2036                           
  2037                           
  2038                           ; 1 bytes @ 0x5
  2039  0045                     	ds	1
  2040  0046                     sendPairs@radio:
  2041  0046                     setOperatingMode@msg:	
  2042                           ; 1 bytes @ 0x6
  2043                           
  2044  0046                     setPowerOutput@msg:	
  2045                           ; 2 bytes @ 0x6
  2046                           
  2047  0046                     setDiodeMapping@msg:	
  2048                           ; 2 bytes @ 0x6
  2049                           
  2050  0046                     setAutoMode@msg:	
  2051                           ; 2 bytes @ 0x6
  2052                           
  2053                           
  2054                           ; 2 bytes @ 0x6
  2055  0046                     	ds	1
  2056  0047                     sendPairs@msg:
  2057                           
  2058                           ; 2 bytes @ 0x7
  2059  0047                     	ds	1
  2060  0048                     bytesToFloat@bytes:
  2061                           
  2062                           ; 1 bytes @ 0x8
  2063  0048                     	ds	1
  2064  0049                     sendPairs@i:
  2065                           
  2066                           ; 2 bytes @ 0x9
  2067  0049                     	ds	2
  2068  004B                     ??_setRecommendedParams:
  2069                           
  2070                           ; 1 bytes @ 0xB
  2071  004B                     	ds	1
  2072  004C                     setRecommendedParams@radio:
  2073                           
  2074                           ; 1 bytes @ 0xC
  2075  004C                     	ds	1
  2076  004D                     setSyncWords@radio:
  2077                           
  2078                           ; 1 bytes @ 0xD
  2079  004D                     	ds	1
  2080  004E                     setSyncWords@i:
  2081                           
  2082                           ; 2 bytes @ 0xE
  2083  004E                     	ds	2
  2084  0050                     initRadio@radio:
  2085                           
  2086                           ; 1 bytes @ 0x10
  2087  0050                     	ds	1
  2088  0051                     ??_main:
  2089                           
  2090                           ; 1 bytes @ 0x11
  2091  0051                     	ds	1
  2092  0052                     main@reversedPayload:
  2093                           
  2094                           ; 4 bytes @ 0x12
  2095  0052                     	ds	4
  2096  0056                     main@i:
  2097                           
  2098                           ; 2 bytes @ 0x16
  2099  0056                     	ds	2
  2100                           
  2101                           	psect	maintext
  2102  0675                     __pmaintext:	
  2103 ;;
  2104 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2105 ;;
  2106 ;; *************** function _main *****************
  2107 ;; Defined at:
  2108 ;;		line 91 in file "receiver.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;		None
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  i               2   22[BANK0 ] int 
  2113 ;;  radio          75    0[BANK1 ] struct RFM69HCW
  2114 ;;  reversedPayl    4   18[BANK0 ] unsigned char [4]
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  2   95[None  ] int 
  2117 ;; Registers used:
  2118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : B1F/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2125 ;;      Locals:         0       6      75       0       0       0       0       0       0       0       0       0       
      +0       0
  2126 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2127 ;;      Totals:         0       7      75       0       0       0       0       0       0       0       0       0       
      +0       0
  2128 ;;Total ram usage:       82 bytes
  2129 ;; Hardware stack levels required when called: 5
  2130 ;; This function calls:
  2131 ;;		_bytesToFloat
  2132 ;;		_getFifoFlags
  2133 ;;		_getModeFlags
  2134 ;;		_getOperatingMode
  2135 ;;		_getRSSI
  2136 ;;		_init
  2137 ;;		_initRadio
  2138 ;;		_receivePayload
  2139 ;;		_setAutoMode
  2140 ;;		_setDiodeMapping
  2141 ;;		_setOperatingMode
  2142 ;;		_setPowerOutput
  2143 ;; This function is called by:
  2144 ;;		Startup code after reset
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           
  2149                           ;psect for function _main
  2150  0675                     _main:
  2151  0675                     l1483:	
  2152                           ;incstack = 0
  2153                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2154                           
  2155                           
  2156                           ;receiver.c: 92:     init();
  2157  0675  3182  223E  3186   	fcall	_init
  2158  0678                     l1485:
  2159                           
  2160                           ;receiver.c: 93:     RFM69 radio = {.SSport = &PORTA, .SSbit = 2, .node_address = 0x20, 
      +                          .packet_length = 4,
  2161  0678  30A0               	movlw	low main@F9417
  2162  0679  0086               	movwf	6
  2163  067A  3001               	movlw	high main@F9417
  2164  067B  0087               	movwf	7
  2165  067C  30A0               	movlw	low main@radio
  2166  067D  0084               	movwf	4
  2167  067E  3000               	movlw	high main@radio
  2168  067F  0085               	movwf	5
  2169  0680  304B               	movlw	75
  2170  0681  0020               	movlb	0	; select bank0
  2171  0682  00D1               	movwf	??_main
  2172  0683                     u590:
  2173  0683  0016               	moviw fsr1++
  2174  0684  001A               	movwi fsr0++
  2175  0685  0BD1               	decfsz	??_main,f
  2176  0686  2E83               	goto	u590
  2177  0687                     l1487:
  2178                           
  2179                           ;receiver.c: 96:     initRadio(&radio);
  2180  0687  30A0               	movlw	(low (main@radio| 0))& (0+255)
  2181  0688  3184  2435  3186   	fcall	_initRadio
  2182  068B                     l1489:
  2183                           
  2184                           ;receiver.c: 97:     setPowerOutput(&radio, 0x5F);
  2185  068B  305F               	movlw	95
  2186  068C  0020               	movlb	0	; select bank0
  2187  068D  00D1               	movwf	??_main
  2188  068E  0851               	movf	??_main,w
  2189  068F  00FC               	movwf	setPowerOutput@powerSettings
  2190  0690  30A0               	movlw	(low (main@radio| 0))& (0+255)
  2191  0691  3183  2361  3186   	fcall	_setPowerOutput
  2192  0694                     l1491:
  2193                           
  2194                           ;receiver.c: 99:     setDiodeMapping(&radio, 0x40);
  2195  0694  3040               	movlw	64
  2196  0695  0020               	movlb	0	; select bank0
  2197  0696  00D1               	movwf	??_main
  2198  0697  0851               	movf	??_main,w
  2199  0698  00FC               	movwf	setDiodeMapping@mapping
  2200  0699  30A0               	movlw	(low (main@radio| 0))& (0+255)
  2201  069A  3183  232F  3186   	fcall	_setDiodeMapping
  2202  069D                     l1493:
  2203                           
  2204                           ;receiver.c: 100:     setAutoMode(&radio, 0b01100100);
  2205  069D  3064               	movlw	100
  2206  069E  0020               	movlb	0	; select bank0
  2207  069F  00D1               	movwf	??_main
  2208  06A0  0851               	movf	??_main,w
  2209  06A1  00FC               	movwf	setAutoMode@autoModes
  2210  06A2  30A0               	movlw	(low (main@radio| 0))& (0+255)
  2211  06A3  3183  2316  3186   	fcall	_setAutoMode
  2212  06A6                     l1495:
  2213                           
  2214                           ;receiver.c: 102:     setOperatingMode(&radio, 0xB0);
  2215  06A6  30B0               	movlw	176
  2216  06A7  0020               	movlb	0	; select bank0
  2217  06A8  00D1               	movwf	??_main
  2218  06A9  0851               	movf	??_main,w
  2219  06AA  00FC               	movwf	setOperatingMode@operatingMode
  2220  06AB  30A0               	movlw	(low (main@radio| 0))& (0+255)
  2221  06AC  3183  2348  3186   	fcall	_setOperatingMode
  2222  06AF                     l1497:
  2223                           
  2224                           ;receiver.c: 105:         RSSI = getRSSI(&radio);
  2225  06AF  30A0               	movlw	(low (main@radio| 0))& (0+255)
  2226  06B0  3182  22EC  3186   	fcall	_getRSSI
  2227  06B3  0020               	movlb	0	; select bank0
  2228  06B4  00D1               	movwf	??_main
  2229  06B5  0851               	movf	??_main,w
  2230  06B6  0021               	movlb	1	; select bank1
  2231  06B7  00ED               	movwf	_RSSI^(0+128)
  2232  06B8                     l1499:
  2233                           
  2234                           ;receiver.c: 106:         fifoFlags = getFifoFlags(&radio);
  2235  06B8  30A0               	movlw	(low (main@radio| 0))& (0+255)
  2236  06B9  3182  22AD  3186   	fcall	_getFifoFlags
  2237  06BC  0020               	movlb	0	; select bank0
  2238  06BD  00D1               	movwf	??_main
  2239  06BE  0851               	movf	??_main,w
  2240  06BF  0021               	movlb	1	; select bank1
  2241  06C0  00EC               	movwf	_fifoFlags^(0+128)
  2242  06C1                     l1501:
  2243                           
  2244                           ;receiver.c: 107:         modeFlags = getModeFlags(&radio);
  2245  06C1  30A0               	movlw	(low (main@radio| 0))& (0+255)
  2246  06C2  3182  22C2  3186   	fcall	_getModeFlags
  2247  06C5  0020               	movlb	0	; select bank0
  2248  06C6  00D1               	movwf	??_main
  2249  06C7  0851               	movf	??_main,w
  2250  06C8  0021               	movlb	1	; select bank1
  2251  06C9  00EB               	movwf	_modeFlags^(0+128)
  2252  06CA                     l1503:
  2253                           
  2254                           ;receiver.c: 108:         operatingMode = getOperatingMode(&radio);
  2255  06CA  30A0               	movlw	(low (main@radio| 0))& (0+255)
  2256  06CB  3182  22D7  3186   	fcall	_getOperatingMode
  2257  06CE  0020               	movlb	0	; select bank0
  2258  06CF  00D1               	movwf	??_main
  2259  06D0  0851               	movf	??_main,w
  2260  06D1  0021               	movlb	1	; select bank1
  2261  06D2  00EE               	movwf	_operatingMode^(0+128)
  2262  06D3                     l1505:
  2263                           
  2264                           ;receiver.c: 109:         if ((((operatingMode & 0x7F) == 0))) {
  2265  06D3  086E               	movf	_operatingMode^(0+128),w
  2266  06D4  397F               	andlw	127
  2267  06D5  1D03               	btfss	3,2
  2268  06D6  2ED8               	goto	u601
  2269  06D7  2ED9               	goto	u600
  2270  06D8                     u601:
  2271  06D8  2EAF               	goto	l1497
  2272  06D9                     u600:
  2273  06D9                     l1507:
  2274                           
  2275                           ;receiver.c: 110:             fifoFlags = getFifoFlags(&radio);
  2276  06D9  30A0               	movlw	(low (main@radio| 0))& (0+255)
  2277  06DA  3182  22AD  3186   	fcall	_getFifoFlags
  2278  06DD  0020               	movlb	0	; select bank0
  2279  06DE  00D1               	movwf	??_main
  2280  06DF  0851               	movf	??_main,w
  2281  06E0  0021               	movlb	1	; select bank1
  2282  06E1  00EC               	movwf	_fifoFlags^(0+128)
  2283  06E2                     l1509:
  2284                           
  2285                           ;receiver.c: 111:             _delay((unsigned long)((30)*(16000000/4000.0)));
  2286  06E2  309C               	movlw	156
  2287  06E3  0020               	movlb	0	; select bank0
  2288  06E4  00D1               	movwf	??_main
  2289  06E5  30D7               	movlw	215
  2290  06E6                     u637:
  2291  06E6  0B89               	decfsz	9,f
  2292  06E7  2EE6               	goto	u637
  2293  06E8  0BD1               	decfsz	??_main,f
  2294  06E9  2EE6               	goto	u637
  2295  06EA                     l1511:
  2296                           
  2297                           ;receiver.c: 112:             receivePayload(&radio);
  2298  06EA  30A0               	movlw	(low (main@radio| 0))& (0+255)
  2299  06EB  3185  2562  3186   	fcall	_receivePayload
  2300  06EE                     l1513:
  2301                           
  2302                           ;receiver.c: 113:             for(int i=0; i<4;i++){
  2303  06EE  0020               	movlb	0	; select bank0
  2304  06EF  01D6               	clrf	main@i
  2305  06F0  01D7               	clrf	main@i+1
  2306  06F1                     l1519:
  2307                           
  2308                           ;receiver.c: 114:                 reversedPayload[i] = radio.payload[3-i];
  2309  06F1  0020               	movlb	0	; select bank0
  2310  06F2  0856               	movf	main@i,w
  2311  06F3  3C2F               	sublw	47
  2312  06F4  3EA0               	addlw	(low (main@radio| 0))& (0+255)
  2313  06F5  0086               	movwf	6
  2314  06F6  0187               	clrf	7
  2315  06F7  0801               	movf	1,w
  2316  06F8  00D1               	movwf	??_main
  2317  06F9  0856               	movf	main@i,w
  2318  06FA  3E52               	addlw	(low (main@reversedPayload| 0))& (0+255)
  2319  06FB  0086               	movwf	6
  2320  06FC  0187               	clrf	7
  2321  06FD  0851               	movf	??_main,w
  2322  06FE  0081               	movwf	1
  2323  06FF                     l1521:
  2324                           
  2325                           ;receiver.c: 115:             }
  2326  06FF  3001               	movlw	1
  2327  0700  07D6               	addwf	main@i,f
  2328  0701  3000               	movlw	0
  2329  0702  3DD7               	addwfc	main@i+1,f
  2330  0703                     l1523:
  2331  0703  0857               	movf	main@i+1,w
  2332  0704  3A80               	xorlw	128
  2333  0705  00D1               	movwf	??_main
  2334  0706  3080               	movlw	128
  2335  0707  0251               	subwf	??_main,w
  2336  0708  1D03               	skipz
  2337  0709  2F0C               	goto	u615
  2338  070A  3004               	movlw	4
  2339  070B  0256               	subwf	main@i,w
  2340  070C                     u615:
  2341  070C  1C03               	skipc
  2342  070D  2F0F               	goto	u611
  2343  070E  2F10               	goto	u610
  2344  070F                     u611:
  2345  070F  2EF1               	goto	l1519
  2346  0710                     u610:
  2347  0710                     l1525:
  2348                           
  2349                           ;receiver.c: 116:             thermistorTemp = bytesToFloat(reversedPayload);
  2350  0710  3052               	movlw	(low (main@reversedPayload| 0))& (0+255)
  2351  0711  3184  245F  3186   	fcall	_bytesToFloat
  2352  0714  0020               	movlb	0	; select bank0
  2353  0715  0843               	movf	?_bytesToFloat+3,w
  2354  0716  00DB               	movwf	_thermistorTemp+3
  2355  0717  0842               	movf	?_bytesToFloat+2,w
  2356  0718  00DA               	movwf	_thermistorTemp+2
  2357  0719  0841               	movf	?_bytesToFloat+1,w
  2358  071A  00D9               	movwf	_thermistorTemp+1
  2359  071B  0840               	movf	?_bytesToFloat,w
  2360  071C  00D8               	movwf	_thermistorTemp
  2361  071D  2EAF               	goto	l1497
  2362  071E  3180  2802         	ljmp	start
  2363  0720                     __end_of_main:
  2364                           
  2365                           	psect	text1
  2366  0361                     __ptext1:	
  2367 ;; *************** function _setPowerOutput *****************
  2368 ;; Defined at:
  2369 ;;		line 126 in file "RFM69HCW.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  radio           1    wreg     PTR struct RFM69HCW
  2372 ;;		 -> main@radio(75), 
  2373 ;;  powerSetting    1   12[COMMON] unsigned char 
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;  radio           1    5[BANK0 ] PTR struct RFM69HCW
  2376 ;;		 -> main@radio(75), 
  2377 ;;  msg             2    6[BANK0 ] unsigned char [2]
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  1    wreg      void 
  2380 ;; Registers used:
  2381 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2387 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2388 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2389 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2390 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2391 ;;Total ram usage:        6 bytes
  2392 ;; Hardware stack levels used: 1
  2393 ;; Hardware stack levels required when called: 2
  2394 ;; This function calls:
  2395 ;;		_sendBulk
  2396 ;; This function is called by:
  2397 ;;		_main
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           
  2402                           ;psect for function _setPowerOutput
  2403  0361                     _setPowerOutput:
  2404                           
  2405                           ;incstack = 0
  2406                           ; Regs used in _setPowerOutput: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2407                           ;setPowerOutput@radio stored from wreg
  2408  0361  0020               	movlb	0	; select bank0
  2409  0362  00C5               	movwf	setPowerOutput@radio
  2410  0363                     l1403:
  2411                           
  2412                           ;RFM69HCW.c: 127:     byte msg[] = {0x11 | 0x80, powerSettings};
  2413  0363  01C6               	clrf	setPowerOutput@msg
  2414  0364  01C7               	clrf	setPowerOutput@msg+1
  2415  0365                     l1405:
  2416  0365  3091               	movlw	145
  2417  0366  00C3               	movwf	??_setPowerOutput
  2418  0367  0843               	movf	??_setPowerOutput,w
  2419  0368  00C6               	movwf	setPowerOutput@msg
  2420  0369                     l1407:
  2421  0369  087C               	movf	setPowerOutput@powerSettings,w
  2422  036A  00C3               	movwf	??_setPowerOutput
  2423  036B  0843               	movf	??_setPowerOutput,w
  2424  036C  00C7               	movwf	setPowerOutput@msg+1
  2425  036D                     l1409:
  2426                           
  2427                           ;RFM69HCW.c: 128:     sendBulk(radio, msg, 2);
  2428  036D  3046               	movlw	(low (setPowerOutput@msg| 0))& (0+255)
  2429  036E  00C3               	movwf	??_setPowerOutput
  2430  036F  0843               	movf	??_setPowerOutput,w
  2431  0370  00F6               	movwf	sendBulk@msgs
  2432  0371  3002               	movlw	2
  2433  0372  00C4               	movwf	??_setPowerOutput+1
  2434  0373  0844               	movf	??_setPowerOutput+1,w
  2435  0374  00F7               	movwf	sendBulk@len
  2436  0375  0845               	movf	setPowerOutput@radio,w
  2437  0376  3186  2615  3183   	fcall	_sendBulk
  2438  0379                     l214:
  2439  0379  0008               	return
  2440  037A                     __end_of_setPowerOutput:
  2441                           
  2442                           	psect	text2
  2443  0348                     __ptext2:	
  2444 ;; *************** function _setOperatingMode *****************
  2445 ;; Defined at:
  2446 ;;		line 81 in file "RFM69HCW.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  radio           1    wreg     PTR struct RFM69HCW
  2449 ;;		 -> main@radio(75), 
  2450 ;;  operatingMod    1   12[COMMON] unsigned char 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;  radio           1    5[BANK0 ] PTR struct RFM69HCW
  2453 ;;		 -> main@radio(75), 
  2454 ;;  msg             2    6[BANK0 ] unsigned char [2]
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2464 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2465 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2466 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2467 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2468 ;;Total ram usage:        6 bytes
  2469 ;; Hardware stack levels used: 1
  2470 ;; Hardware stack levels required when called: 2
  2471 ;; This function calls:
  2472 ;;		_sendBulk
  2473 ;; This function is called by:
  2474 ;;		_main
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           
  2479                           ;psect for function _setOperatingMode
  2480  0348                     _setOperatingMode:
  2481                           
  2482                           ;incstack = 0
  2483                           ; Regs used in _setOperatingMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2484                           ;setOperatingMode@radio stored from wreg
  2485  0348  0020               	movlb	0	; select bank0
  2486  0349  00C5               	movwf	setOperatingMode@radio
  2487  034A                     l1431:
  2488                           
  2489                           ;RFM69HCW.c: 82:     byte msg[] = {0x01 | 0x80, operatingMode};
  2490  034A  01C6               	clrf	setOperatingMode@msg
  2491  034B  01C7               	clrf	setOperatingMode@msg+1
  2492  034C                     l1433:
  2493  034C  3081               	movlw	129
  2494  034D  00C3               	movwf	??_setOperatingMode
  2495  034E  0843               	movf	??_setOperatingMode,w
  2496  034F  00C6               	movwf	setOperatingMode@msg
  2497  0350                     l1435:
  2498  0350  087C               	movf	setOperatingMode@operatingMode,w
  2499  0351  00C3               	movwf	??_setOperatingMode
  2500  0352  0843               	movf	??_setOperatingMode,w
  2501  0353  00C7               	movwf	setOperatingMode@msg+1
  2502  0354                     l1437:
  2503                           
  2504                           ;RFM69HCW.c: 83:     sendBulk(radio, msg, 2);
  2505  0354  3046               	movlw	(low (setOperatingMode@msg| 0))& (0+255)
  2506  0355  00C3               	movwf	??_setOperatingMode
  2507  0356  0843               	movf	??_setOperatingMode,w
  2508  0357  00F6               	movwf	sendBulk@msgs
  2509  0358  3002               	movlw	2
  2510  0359  00C4               	movwf	??_setOperatingMode+1
  2511  035A  0844               	movf	??_setOperatingMode+1,w
  2512  035B  00F7               	movwf	sendBulk@len
  2513  035C  0845               	movf	setOperatingMode@radio,w
  2514  035D  3186  2615  3183   	fcall	_sendBulk
  2515  0360                     l182:
  2516  0360  0008               	return
  2517  0361                     __end_of_setOperatingMode:
  2518                           
  2519                           	psect	text3
  2520  032F                     __ptext3:	
  2521 ;; *************** function _setDiodeMapping *****************
  2522 ;; Defined at:
  2523 ;;		line 164 in file "RFM69HCW.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  radio           1    wreg     PTR struct RFM69HCW
  2526 ;;		 -> main@radio(75), 
  2527 ;;  mapping         1   12[COMMON] unsigned char 
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  radio           1    5[BANK0 ] PTR struct RFM69HCW
  2530 ;;		 -> main@radio(75), 
  2531 ;;  msg             2    6[BANK0 ] unsigned char [2]
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      void 
  2534 ;; Registers used:
  2535 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2541 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2542 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2543 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2544 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2545 ;;Total ram usage:        6 bytes
  2546 ;; Hardware stack levels used: 1
  2547 ;; Hardware stack levels required when called: 2
  2548 ;; This function calls:
  2549 ;;		_sendBulk
  2550 ;; This function is called by:
  2551 ;;		_main
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           
  2556                           ;psect for function _setDiodeMapping
  2557  032F                     _setDiodeMapping:
  2558                           
  2559                           ;incstack = 0
  2560                           ; Regs used in _setDiodeMapping: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2561                           ;setDiodeMapping@radio stored from wreg
  2562  032F  0020               	movlb	0	; select bank0
  2563  0330  00C5               	movwf	setDiodeMapping@radio
  2564  0331                     l1411:
  2565                           
  2566                           ;RFM69HCW.c: 165:     byte msg[] = {0x25, mapping};
  2567  0331  01C6               	clrf	setDiodeMapping@msg
  2568  0332  01C7               	clrf	setDiodeMapping@msg+1
  2569  0333                     l1413:
  2570  0333  3025               	movlw	37
  2571  0334  00C3               	movwf	??_setDiodeMapping
  2572  0335  0843               	movf	??_setDiodeMapping,w
  2573  0336  00C6               	movwf	setDiodeMapping@msg
  2574  0337                     l1415:
  2575  0337  087C               	movf	setDiodeMapping@mapping,w
  2576  0338  00C3               	movwf	??_setDiodeMapping
  2577  0339  0843               	movf	??_setDiodeMapping,w
  2578  033A  00C7               	movwf	setDiodeMapping@msg+1
  2579  033B                     l1417:
  2580                           
  2581                           ;RFM69HCW.c: 166:     sendBulk(radio, msg, 2);
  2582  033B  3046               	movlw	(low (setDiodeMapping@msg| 0))& (0+255)
  2583  033C  00C3               	movwf	??_setDiodeMapping
  2584  033D  0843               	movf	??_setDiodeMapping,w
  2585  033E  00F6               	movwf	sendBulk@msgs
  2586  033F  3002               	movlw	2
  2587  0340  00C4               	movwf	??_setDiodeMapping+1
  2588  0341  0844               	movf	??_setDiodeMapping+1,w
  2589  0342  00F7               	movwf	sendBulk@len
  2590  0343  0845               	movf	setDiodeMapping@radio,w
  2591  0344  3186  2615  3183   	fcall	_sendBulk
  2592  0347                     l245:
  2593  0347  0008               	return
  2594  0348                     __end_of_setDiodeMapping:
  2595                           
  2596                           	psect	text4
  2597  0316                     __ptext4:	
  2598 ;; *************** function _setAutoMode *****************
  2599 ;; Defined at:
  2600 ;;		line 200 in file "RFM69HCW.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  radio           1    wreg     PTR struct RFM69HCW
  2603 ;;		 -> main@radio(75), 
  2604 ;;  autoModes       1   12[COMMON] unsigned char 
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;  radio           1    5[BANK0 ] PTR struct RFM69HCW
  2607 ;;		 -> main@radio(75), 
  2608 ;;  msg             2    6[BANK0 ] unsigned char [2]
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2618 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2619 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2620 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2621 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2622 ;;Total ram usage:        6 bytes
  2623 ;; Hardware stack levels used: 1
  2624 ;; Hardware stack levels required when called: 2
  2625 ;; This function calls:
  2626 ;;		_sendBulk
  2627 ;; This function is called by:
  2628 ;;		_main
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           
  2633                           ;psect for function _setAutoMode
  2634  0316                     _setAutoMode:
  2635                           
  2636                           ;incstack = 0
  2637                           ; Regs used in _setAutoMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2638                           ;setAutoMode@radio stored from wreg
  2639  0316  0020               	movlb	0	; select bank0
  2640  0317  00C5               	movwf	setAutoMode@radio
  2641  0318                     l1421:
  2642                           
  2643                           ;RFM69HCW.c: 201:     byte msg[] = {0x3B | 0x80, autoModes};
  2644  0318  01C6               	clrf	setAutoMode@msg
  2645  0319  01C7               	clrf	setAutoMode@msg+1
  2646  031A                     l1423:
  2647  031A  30BB               	movlw	187
  2648  031B  00C3               	movwf	??_setAutoMode
  2649  031C  0843               	movf	??_setAutoMode,w
  2650  031D  00C6               	movwf	setAutoMode@msg
  2651  031E                     l1425:
  2652  031E  087C               	movf	setAutoMode@autoModes,w
  2653  031F  00C3               	movwf	??_setAutoMode
  2654  0320  0843               	movf	??_setAutoMode,w
  2655  0321  00C7               	movwf	setAutoMode@msg+1
  2656  0322                     l1427:
  2657                           
  2658                           ;RFM69HCW.c: 202:     sendBulk(radio, msg, 2);
  2659  0322  3046               	movlw	(low (setAutoMode@msg| 0))& (0+255)
  2660  0323  00C3               	movwf	??_setAutoMode
  2661  0324  0843               	movf	??_setAutoMode,w
  2662  0325  00F6               	movwf	sendBulk@msgs
  2663  0326  3002               	movlw	2
  2664  0327  00C4               	movwf	??_setAutoMode+1
  2665  0328  0844               	movf	??_setAutoMode+1,w
  2666  0329  00F7               	movwf	sendBulk@len
  2667  032A  0845               	movf	setAutoMode@radio,w
  2668  032B  3186  2615  3183   	fcall	_sendBulk
  2669  032E                     l275:
  2670  032E  0008               	return
  2671  032F                     __end_of_setAutoMode:
  2672                           
  2673                           	psect	text5
  2674  0562                     __ptext5:	
  2675 ;; *************** function _receivePayload *****************
  2676 ;; Defined at:
  2677 ;;		line 101 in file "RFM69HCW.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;  radio           1    wreg     PTR struct RFM69HCW
  2680 ;;		 -> main@radio(75), 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;  radio           1   10[COMMON] PTR struct RFM69HCW
  2683 ;;		 -> main@radio(75), 
  2684 ;;  i               2    8[COMMON] int 
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      void 
  2687 ;; Registers used:
  2688 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2695 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2696 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2697 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2698 ;;Total ram usage:        5 bytes
  2699 ;; Hardware stack levels used: 1
  2700 ;; Hardware stack levels required when called: 1
  2701 ;; This function calls:
  2702 ;;		_send
  2703 ;;		_setPinWithMask
  2704 ;; This function is called by:
  2705 ;;		_main
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           
  2710                           ;psect for function _receivePayload
  2711  0562                     _receivePayload:
  2712                           
  2713                           ;incstack = 0
  2714                           ; Regs used in _receivePayload: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2715                           ;receivePayload@radio stored from wreg
  2716  0562  00FA               	movwf	receivePayload@radio
  2717  0563                     l1471:
  2718                           
  2719                           ;RFM69HCW.c: 102:     setPinWithMask(radio->SSport, radio->SSbit, 0);
  2720  0563  087A               	movf	receivePayload@radio,w
  2721  0564  3E28               	addlw	40
  2722  0565  0086               	movwf	6
  2723  0566  0187               	clrf	7
  2724  0567  3F40               	moviw [0]fsr1
  2725  0568  00F0               	movwf	setPinWithMask@pPort
  2726  0569  3F41               	moviw [1]fsr1
  2727  056A  00F1               	movwf	setPinWithMask@pPort+1
  2728  056B  087A               	movf	receivePayload@radio,w
  2729  056C  3E2A               	addlw	42
  2730  056D  0086               	movwf	6
  2731  056E  0187               	clrf	7
  2732  056F  0801               	movf	1,w
  2733  0570  00F6               	movwf	??_receivePayload
  2734  0571  0876               	movf	??_receivePayload,w
  2735  0572  00F2               	movwf	setPinWithMask@iPin
  2736  0573  01F3               	clrf	setPinWithMask@value
  2737  0574  3184  240F  3185   	fcall	_setPinWithMask
  2738                           
  2739                           ;RFM69HCW.c: 103:     send(radio, 0x00);
  2740  0577  01F0               	clrf	send@msg
  2741  0578  087A               	movf	receivePayload@radio,w
  2742  0579  3185  25B9  3185   	fcall	_send
  2743  057C                     l1473:
  2744                           
  2745                           ;RFM69HCW.c: 104:     for (int i = 0; i < (*radio).packet_length; i++) {
  2746  057C  01F8               	clrf	receivePayload@i
  2747  057D  01F9               	clrf	receivePayload@i+1
  2748  057E  2D92               	goto	l1479
  2749  057F                     l1475:
  2750                           
  2751                           ;RFM69HCW.c: 105:         radio->payload[i] = send(radio, 0x00);
  2752  057F  01F0               	clrf	send@msg
  2753  0580  087A               	movf	receivePayload@radio,w
  2754  0581  3185  25B9  3185   	fcall	_send
  2755  0584  00F6               	movwf	??_receivePayload
  2756  0585  0878               	movf	receivePayload@i,w
  2757  0586  077A               	addwf	receivePayload@radio,w
  2758  0587  00F7               	movwf	??_receivePayload+1
  2759  0588  0877               	movf	??_receivePayload+1,w
  2760  0589  3E2C               	addlw	44
  2761  058A  0086               	movwf	6
  2762  058B  0187               	clrf	7
  2763  058C  0876               	movf	??_receivePayload,w
  2764  058D  0081               	movwf	1
  2765  058E                     l1477:
  2766                           
  2767                           ;RFM69HCW.c: 106:     }
  2768  058E  3001               	movlw	1
  2769  058F  07F8               	addwf	receivePayload@i,f
  2770  0590  3000               	movlw	0
  2771  0591  3DF9               	addwfc	receivePayload@i+1,f
  2772  0592                     l1479:
  2773  0592  087A               	movf	receivePayload@radio,w
  2774  0593  3E2B               	addlw	43
  2775  0594  0086               	movwf	6
  2776  0595  0187               	clrf	7
  2777  0596  0879               	movf	receivePayload@i+1,w
  2778  0597  3A80               	xorlw	128
  2779  0598  00F6               	movwf	??_receivePayload
  2780  0599  3080               	movlw	128
  2781  059A  0276               	subwf	??_receivePayload,w
  2782  059B  1D03               	skipz
  2783  059C  2D9F               	goto	u585
  2784  059D  0801               	movf	1,w
  2785  059E  0278               	subwf	receivePayload@i,w
  2786  059F                     u585:
  2787  059F  1C03               	skipc
  2788  05A0  2DA2               	goto	u581
  2789  05A1  2DA3               	goto	u580
  2790  05A2                     u581:
  2791  05A2  2D7F               	goto	l1475
  2792  05A3                     u580:
  2793  05A3                     l1481:
  2794                           
  2795                           ;RFM69HCW.c: 107:     setPinWithMask(radio->SSport, radio->SSbit, 1);
  2796  05A3  087A               	movf	receivePayload@radio,w
  2797  05A4  3E28               	addlw	40
  2798  05A5  0086               	movwf	6
  2799  05A6  0187               	clrf	7
  2800  05A7  3F40               	moviw [0]fsr1
  2801  05A8  00F0               	movwf	setPinWithMask@pPort
  2802  05A9  3F41               	moviw [1]fsr1
  2803  05AA  00F1               	movwf	setPinWithMask@pPort+1
  2804  05AB  087A               	movf	receivePayload@radio,w
  2805  05AC  3E2A               	addlw	42
  2806  05AD  0086               	movwf	6
  2807  05AE  0187               	clrf	7
  2808  05AF  0801               	movf	1,w
  2809  05B0  00F6               	movwf	??_receivePayload
  2810  05B1  0876               	movf	??_receivePayload,w
  2811  05B2  00F2               	movwf	setPinWithMask@iPin
  2812  05B3  01F3               	clrf	setPinWithMask@value
  2813  05B4  0AF3               	incf	setPinWithMask@value,f
  2814  05B5  3184  240F  3185   	fcall	_setPinWithMask
  2815  05B8                     l201:
  2816  05B8  0008               	return
  2817  05B9                     __end_of_receivePayload:
  2818                           
  2819                           	psect	text6
  2820  0435                     __ptext6:	
  2821 ;; *************** function _initRadio *****************
  2822 ;; Defined at:
  2823 ;;		line 115 in file "RFM69HCW.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  radio           1    wreg     PTR struct RFM69HCW
  2826 ;;		 -> main@radio(75), 
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;  radio           1   16[BANK0 ] PTR struct RFM69HCW
  2829 ;;		 -> main@radio(75), 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2840 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2842 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2843 ;;Total ram usage:        1 bytes
  2844 ;; Hardware stack levels used: 1
  2845 ;; Hardware stack levels required when called: 4
  2846 ;; This function calls:
  2847 ;;		_setModulationThreshold
  2848 ;;		_setNodeAddress
  2849 ;;		_setPacketFormat
  2850 ;;		_setPacketLength
  2851 ;;		_setPreambleLength
  2852 ;;		_setRSSIThreshold
  2853 ;;		_setRecommendedParams
  2854 ;;		_setSyncWords
  2855 ;; This function is called by:
  2856 ;;		_main
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           
  2861                           ;psect for function _initRadio
  2862  0435                     _initRadio:
  2863                           
  2864                           ;incstack = 0
  2865                           ; Regs used in _initRadio: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2866                           ;initRadio@radio stored from wreg
  2867  0435  0020               	movlb	0	; select bank0
  2868  0436  00D0               	movwf	initRadio@radio
  2869  0437                     l1401:
  2870                           
  2871                           ;RFM69HCW.c: 116:     setSyncWords(radio);
  2872  0437  0850               	movf	initRadio@radio,w
  2873  0438  3184  2490  3184   	fcall	_setSyncWords
  2874                           
  2875                           ;RFM69HCW.c: 117:     setPacketLength(radio);
  2876  043B  0020               	movlb	0	; select bank0
  2877  043C  0850               	movf	initRadio@radio,w
  2878  043D  3183  2397  3184   	fcall	_setPacketLength
  2879                           
  2880                           ;RFM69HCW.c: 118:     setNodeAddress(radio);
  2881  0440  0020               	movlb	0	; select bank0
  2882  0441  0850               	movf	initRadio@radio,w
  2883  0442  3183  237A  3184   	fcall	_setNodeAddress
  2884                           
  2885                           ;RFM69HCW.c: 119:     setRSSIThreshold(radio);
  2886  0445  0020               	movlb	0	; select bank0
  2887  0446  0850               	movf	initRadio@radio,w
  2888  0447  3183  23B4  3184   	fcall	_setRSSIThreshold
  2889                           
  2890                           ;RFM69HCW.c: 120:     setPacketFormat(radio);
  2891  044A  0020               	movlb	0	; select bank0
  2892  044B  0850               	movf	initRadio@radio,w
  2893  044C  3182  2287  3184   	fcall	_setPacketFormat
  2894                           
  2895                           ;RFM69HCW.c: 121:     setRecommendedParams(radio);
  2896  044F  0020               	movlb	0	; select bank0
  2897  0450  0850               	movf	initRadio@radio,w
  2898  0451  3182  2265  3184   	fcall	_setRecommendedParams
  2899                           
  2900                           ;RFM69HCW.c: 122:     setModulationThreshold(radio);
  2901  0454  0020               	movlb	0	; select bank0
  2902  0455  0850               	movf	initRadio@radio,w
  2903  0456  3183  23D1  3184   	fcall	_setModulationThreshold
  2904                           
  2905                           ;RFM69HCW.c: 123:     setPreambleLength(radio);
  2906  0459  0020               	movlb	0	; select bank0
  2907  045A  0850               	movf	initRadio@radio,w
  2908  045B  3182  229A  3184   	fcall	_setPreambleLength
  2909  045E                     l209:
  2910  045E  0008               	return
  2911  045F                     __end_of_initRadio:
  2912                           
  2913                           	psect	text7
  2914  0490                     __ptext7:	
  2915 ;; *************** function _setSyncWords *****************
  2916 ;; Defined at:
  2917 ;;		line 51 in file "RFM69HCW.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  radio           1    wreg     PTR struct RFM69HCW
  2920 ;;		 -> main@radio(75), 
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  radio           1   13[BANK0 ] PTR struct RFM69HCW
  2923 ;;		 -> main@radio(75), 
  2924 ;;  i               2   14[BANK0 ] int 
  2925 ;;  msg            10    3[BANK0 ] unsigned char [10]
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2936 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2937 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2938 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2939 ;;Total ram usage:       15 bytes
  2940 ;; Hardware stack levels used: 1
  2941 ;; Hardware stack levels required when called: 2
  2942 ;; This function calls:
  2943 ;;		_sendBulk
  2944 ;; This function is called by:
  2945 ;;		_initRadio
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           
  2950                           ;psect for function _setSyncWords
  2951  0490                     _setSyncWords:
  2952                           
  2953                           ;incstack = 0
  2954                           ; Regs used in _setSyncWords: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2955                           ;setSyncWords@radio stored from wreg
  2956  0490  0020               	movlb	0	; select bank0
  2957  0491  00CD               	movwf	setSyncWords@radio
  2958  0492                     l1293:
  2959                           
  2960                           ;RFM69HCW.c: 52:     unsigned char msg[10];;RFM69HCW.c: 53:     msg[0] = 0x2e | 0x80;
  2961  0492  30AE               	movlw	174
  2962  0493  00FC               	movwf	??_setSyncWords
  2963  0494  087C               	movf	??_setSyncWords,w
  2964  0495  00C3               	movwf	setSyncWords@msg
  2965                           
  2966                           ;RFM69HCW.c: 54:     msg[1] = 0b10011000;
  2967  0496  3098               	movlw	152
  2968  0497  00FC               	movwf	??_setSyncWords
  2969  0498  087C               	movf	??_setSyncWords,w
  2970  0499  00C4               	movwf	setSyncWords@msg+1
  2971                           
  2972                           ;RFM69HCW.c: 55:     for (int i = 2; i < 10; i++) {
  2973  049A  3002               	movlw	2
  2974  049B  00CE               	movwf	setSyncWords@i
  2975  049C  3000               	movlw	0
  2976  049D  00CF               	movwf	setSyncWords@i+1
  2977  049E                     l1297:
  2978                           
  2979                           ;RFM69HCW.c: 56:         msg[i] = (radio->sync_words[i]);
  2980  049E  0020               	movlb	0	; select bank0
  2981  049F  084E               	movf	setSyncWords@i,w
  2982  04A0  074D               	addwf	setSyncWords@radio,w
  2983  04A1  00FC               	movwf	??_setSyncWords
  2984  04A2  087C               	movf	??_setSyncWords,w
  2985  04A3  3E42               	addlw	66
  2986  04A4  0086               	movwf	6
  2987  04A5  0187               	clrf	7
  2988  04A6  0801               	movf	1,w
  2989  04A7  00FD               	movwf	??_setSyncWords+1
  2990  04A8  084E               	movf	setSyncWords@i,w
  2991  04A9  3E43               	addlw	(low (setSyncWords@msg| 0))& (0+255)
  2992  04AA  0086               	movwf	6
  2993  04AB  0187               	clrf	7
  2994  04AC  087D               	movf	??_setSyncWords+1,w
  2995  04AD  0081               	movwf	1
  2996  04AE                     l1299:
  2997                           
  2998                           ;RFM69HCW.c: 57:     }
  2999  04AE  3001               	movlw	1
  3000  04AF  07CE               	addwf	setSyncWords@i,f
  3001  04B0  3000               	movlw	0
  3002  04B1  3DCF               	addwfc	setSyncWords@i+1,f
  3003  04B2                     l1301:
  3004  04B2  084F               	movf	setSyncWords@i+1,w
  3005  04B3  3A80               	xorlw	128
  3006  04B4  00FC               	movwf	??_setSyncWords
  3007  04B5  3080               	movlw	128
  3008  04B6  027C               	subwf	??_setSyncWords,w
  3009  04B7  1D03               	skipz
  3010  04B8  2CBB               	goto	u435
  3011  04B9  300A               	movlw	10
  3012  04BA  024E               	subwf	setSyncWords@i,w
  3013  04BB                     u435:
  3014  04BB  1C03               	skipc
  3015  04BC  2CBE               	goto	u431
  3016  04BD  2CBF               	goto	u430
  3017  04BE                     u431:
  3018  04BE  2C9E               	goto	l1297
  3019  04BF                     u430:
  3020  04BF                     l1303:
  3021                           
  3022                           ;RFM69HCW.c: 58:     sendBulk(radio, msg, 10);
  3023  04BF  3043               	movlw	(low (setSyncWords@msg| 0))& (0+255)
  3024  04C0  00FC               	movwf	??_setSyncWords
  3025  04C1  087C               	movf	??_setSyncWords,w
  3026  04C2  00F6               	movwf	sendBulk@msgs
  3027  04C3  300A               	movlw	10
  3028  04C4  00FD               	movwf	??_setSyncWords+1
  3029  04C5  087D               	movf	??_setSyncWords+1,w
  3030  04C6  00F7               	movwf	sendBulk@len
  3031  04C7  0020               	movlb	0	; select bank0
  3032  04C8  084D               	movf	setSyncWords@radio,w
  3033  04C9  3186  2615  3184   	fcall	_sendBulk
  3034  04CC                     l157:
  3035  04CC  0008               	return
  3036  04CD                     __end_of_setSyncWords:
  3037                           
  3038                           	psect	text8
  3039  0265                     __ptext8:	
  3040 ;; *************** function _setRecommendedParams *****************
  3041 ;; Defined at:
  3042 ;;		line 86 in file "RFM69HCW.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;  radio           1    wreg     PTR struct RFM69HCW
  3045 ;;		 -> main@radio(75), 
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;  radio           1   12[BANK0 ] PTR struct RFM69HCW
  3048 ;;		 -> main@radio(75), 
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  1    wreg      void 
  3051 ;; Registers used:
  3052 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3059 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3060 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3061 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3062 ;;Total ram usage:        2 bytes
  3063 ;; Hardware stack levels used: 1
  3064 ;; Hardware stack levels required when called: 3
  3065 ;; This function calls:
  3066 ;;		_sendPairs
  3067 ;; This function is called by:
  3068 ;;		_initRadio
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           
  3073                           ;psect for function _setRecommendedParams
  3074  0265                     _setRecommendedParams:
  3075                           
  3076                           ;incstack = 0
  3077                           ; Regs used in _setRecommendedParams: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3078                           ;setRecommendedParams@radio stored from wreg
  3079  0265  0020               	movlb	0	; select bank0
  3080  0266  00CC               	movwf	setRecommendedParams@radio
  3081  0267                     l1333:
  3082                           
  3083                           ;RFM69HCW.c: 87:     sendPairs(radio, recommended_params, 8);
  3084  0267  3020               	movlw	(low (_recommended_params| (0+256)))& (0+255)
  3085  0268  00CB               	movwf	??_setRecommendedParams
  3086  0269  084B               	movf	??_setRecommendedParams,w
  3087  026A  00C3               	movwf	sendPairs@msgs
  3088  026B  3008               	movlw	8
  3089  026C  00C4               	movwf	sendPairs@len
  3090  026D  3000               	movlw	0
  3091  026E  00C5               	movwf	sendPairs@len+1
  3092  026F  084C               	movf	setRecommendedParams@radio,w
  3093  0270  3184  24CD  3182   	fcall	_sendPairs
  3094  0273                     l185:
  3095  0273  0008               	return
  3096  0274                     __end_of_setRecommendedParams:
  3097                           
  3098                           	psect	text9
  3099  04CD                     __ptext9:	
  3100 ;; *************** function _sendPairs *****************
  3101 ;; Defined at:
  3102 ;;		line 5 in file "RFM69HCW.c"
  3103 ;; Parameters:    Size  Location     Type
  3104 ;;  radio           1    wreg     PTR struct RFM69HCW
  3105 ;;		 -> main@radio(75), 
  3106 ;;  msgs            1    3[BANK0 ] PTR unsigned char 
  3107 ;;		 -> recommended_params(10), 
  3108 ;;  len             2    4[BANK0 ] const int 
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;  radio           1    6[BANK0 ] PTR struct RFM69HCW
  3111 ;;		 -> main@radio(75), 
  3112 ;;  i               2    9[BANK0 ] int 
  3113 ;;  msg             2    7[BANK0 ] unsigned char [2]
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      void 
  3116 ;; Registers used:
  3117 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3123 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3124 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3125 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3126 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3127 ;;Total ram usage:       10 bytes
  3128 ;; Hardware stack levels used: 1
  3129 ;; Hardware stack levels required when called: 2
  3130 ;; This function calls:
  3131 ;;		_sendBulk
  3132 ;; This function is called by:
  3133 ;;		_setRecommendedParams
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           
  3138                           ;psect for function _sendPairs
  3139  04CD                     _sendPairs:
  3140                           
  3141                           ;incstack = 0
  3142                           ; Regs used in _sendPairs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3143                           ;sendPairs@radio stored from wreg
  3144  04CD  0020               	movlb	0	; select bank0
  3145  04CE  00C6               	movwf	sendPairs@radio
  3146  04CF                     l1255:
  3147                           
  3148                           ;RFM69HCW.c: 6:     byte msg[2] = {0};
  3149  04CF  01C7               	clrf	sendPairs@msg
  3150  04D0  01C8               	clrf	sendPairs@msg+1
  3151                           
  3152                           ;RFM69HCW.c: 7:     for (int i = 0; i < len; i += 2) {
  3153  04D1  01C9               	clrf	sendPairs@i
  3154  04D2  01CA               	clrf	sendPairs@i+1
  3155  04D3                     l1257:
  3156  04D3  0845               	movf	sendPairs@len+1,w
  3157  04D4  3A80               	xorlw	128
  3158  04D5  00FC               	movwf	??_sendPairs
  3159  04D6  3080               	movlw	128
  3160  04D7  027C               	subwf	??_sendPairs,w
  3161  04D8  1D03               	skipz
  3162  04D9  2CDC               	goto	u415
  3163  04DA  3001               	movlw	1
  3164  04DB  0244               	subwf	sendPairs@len,w
  3165  04DC                     u415:
  3166  04DC  1803               	skipnc
  3167  04DD  2CDF               	goto	u411
  3168  04DE  2CE0               	goto	u410
  3169  04DF                     u411:
  3170  04DF  2CE1               	goto	l1261
  3171  04E0                     u410:
  3172  04E0  2D16               	goto	l130
  3173  04E1                     l1261:
  3174                           
  3175                           ;RFM69HCW.c: 8:         msg[0] = msgs[i];
  3176  04E1  0020               	movlb	0	; select bank0
  3177  04E2  0849               	movf	sendPairs@i,w
  3178  04E3  0743               	addwf	sendPairs@msgs,w
  3179  04E4  00FC               	movwf	??_sendPairs
  3180  04E5  087C               	movf	??_sendPairs,w
  3181  04E6  0086               	movwf	6
  3182  04E7  3001               	movlw	1	; select bank2/3
  3183  04E8  0087               	movwf	7
  3184  04E9  0801               	movf	1,w
  3185  04EA  00FD               	movwf	??_sendPairs+1
  3186  04EB  087D               	movf	??_sendPairs+1,w
  3187  04EC  00C7               	movwf	sendPairs@msg
  3188                           
  3189                           ;RFM69HCW.c: 9:         msg[1] = msgs[i + 1];
  3190  04ED  0849               	movf	sendPairs@i,w
  3191  04EE  0743               	addwf	sendPairs@msgs,w
  3192  04EF  00FC               	movwf	??_sendPairs
  3193  04F0  087C               	movf	??_sendPairs,w
  3194  04F1  0086               	movwf	6
  3195  04F2  3001               	movlw	1	; select bank2/3
  3196  04F3  0087               	movwf	7
  3197  04F4  3001               	movlw	1	; select bank2/3
  3198  04F5  3F41               	moviw [1]fsr1
  3199  04F6  00C8               	movwf	sendPairs@msg+1
  3200  04F7                     l1263:
  3201                           
  3202                           ;RFM69HCW.c: 10:         sendBulk(radio, msg, 2);
  3203  04F7  3047               	movlw	(low (sendPairs@msg| 0))& (0+255)
  3204  04F8  00FC               	movwf	??_sendPairs
  3205  04F9  087C               	movf	??_sendPairs,w
  3206  04FA  00F6               	movwf	sendBulk@msgs
  3207  04FB  3002               	movlw	2
  3208  04FC  00FD               	movwf	??_sendPairs+1
  3209  04FD  087D               	movf	??_sendPairs+1,w
  3210  04FE  00F7               	movwf	sendBulk@len
  3211  04FF  0846               	movf	sendPairs@radio,w
  3212  0500  3186  2615  3184   	fcall	_sendBulk
  3213  0503                     l1265:
  3214                           
  3215                           ;RFM69HCW.c: 11:     }
  3216  0503  3002               	movlw	2
  3217  0504  0020               	movlb	0	; select bank0
  3218  0505  07C9               	addwf	sendPairs@i,f
  3219  0506  3000               	movlw	0
  3220  0507  3DCA               	addwfc	sendPairs@i+1,f
  3221  0508                     l1267:
  3222  0508  084A               	movf	sendPairs@i+1,w
  3223  0509  3A80               	xorlw	128
  3224  050A  00FC               	movwf	??_sendPairs
  3225  050B  0845               	movf	sendPairs@len+1,w
  3226  050C  3A80               	xorlw	128
  3227  050D  027C               	subwf	??_sendPairs,w
  3228  050E  1D03               	skipz
  3229  050F  2D12               	goto	u425
  3230  0510  0844               	movf	sendPairs@len,w
  3231  0511  0249               	subwf	sendPairs@i,w
  3232  0512                     u425:
  3233  0512  1C03               	skipc
  3234  0513  2D15               	goto	u421
  3235  0514  2D16               	goto	u420
  3236  0515                     u421:
  3237  0515  2CE1               	goto	l1261
  3238  0516                     u420:
  3239  0516                     l130:
  3240  0516  0008               	return
  3241  0517                     __end_of_sendPairs:
  3242                           
  3243                           	psect	text10
  3244  03B4                     __ptext10:	
  3245 ;; *************** function _setRSSIThreshold *****************
  3246 ;; Defined at:
  3247 ;;		line 71 in file "RFM69HCW.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  radio           1    wreg     PTR struct RFM69HCW
  3250 ;;		 -> main@radio(75), 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;  radio           1    5[BANK0 ] PTR struct RFM69HCW
  3253 ;;		 -> main@radio(75), 
  3254 ;;  msg             2    3[BANK0 ] unsigned char [2]
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  1    wreg      void 
  3257 ;; Registers used:
  3258 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3265 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3266 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3267 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3268 ;;Total ram usage:        5 bytes
  3269 ;; Hardware stack levels used: 1
  3270 ;; Hardware stack levels required when called: 2
  3271 ;; This function calls:
  3272 ;;		_sendBulk
  3273 ;; This function is called by:
  3274 ;;		_initRadio
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           
  3279                           ;psect for function _setRSSIThreshold
  3280  03B4                     _setRSSIThreshold:
  3281                           
  3282                           ;incstack = 0
  3283                           ; Regs used in _setRSSIThreshold: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3284                           ;setRSSIThreshold@radio stored from wreg
  3285  03B4  0020               	movlb	0	; select bank0
  3286  03B5  00C5               	movwf	setRSSIThreshold@radio
  3287  03B6                     l1321:
  3288                           
  3289                           ;RFM69HCW.c: 72:     byte msg[] = {0x29 | 0x80, radio->RSSI_threshold};
  3290  03B6  01C3               	clrf	setRSSIThreshold@msg
  3291  03B7  01C4               	clrf	setRSSIThreshold@msg+1
  3292  03B8                     l1323:
  3293  03B8  30A9               	movlw	169
  3294  03B9  00FC               	movwf	??_setRSSIThreshold
  3295  03BA  087C               	movf	??_setRSSIThreshold,w
  3296  03BB  00C3               	movwf	setRSSIThreshold@msg
  3297  03BC                     l1325:
  3298  03BC  0845               	movf	setRSSIThreshold@radio,w
  3299  03BD  3E41               	addlw	65
  3300  03BE  0086               	movwf	6
  3301  03BF  0187               	clrf	7
  3302  03C0  0801               	movf	1,w
  3303  03C1  00FC               	movwf	??_setRSSIThreshold
  3304  03C2  087C               	movf	??_setRSSIThreshold,w
  3305  03C3  00C4               	movwf	setRSSIThreshold@msg+1
  3306  03C4                     l1327:
  3307                           
  3308                           ;RFM69HCW.c: 73:     sendBulk(radio, msg, 2);
  3309  03C4  3043               	movlw	(low (setRSSIThreshold@msg| 0))& (0+255)
  3310  03C5  00FC               	movwf	??_setRSSIThreshold
  3311  03C6  087C               	movf	??_setRSSIThreshold,w
  3312  03C7  00F6               	movwf	sendBulk@msgs
  3313  03C8  3002               	movlw	2
  3314  03C9  00FD               	movwf	??_setRSSIThreshold+1
  3315  03CA  087D               	movf	??_setRSSIThreshold+1,w
  3316  03CB  00F7               	movwf	sendBulk@len
  3317  03CC  0845               	movf	setRSSIThreshold@radio,w
  3318  03CD  3186  2615  3183   	fcall	_sendBulk
  3319  03D0                     l172:
  3320  03D0  0008               	return
  3321  03D1                     __end_of_setRSSIThreshold:
  3322                           
  3323                           	psect	text11
  3324  029A                     __ptext11:	
  3325 ;; *************** function _setPreambleLength *****************
  3326 ;; Defined at:
  3327 ;;		line 110 in file "RFM69HCW.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  radio           1    wreg     PTR struct RFM69HCW
  3330 ;;		 -> main@radio(75), 
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  radio           1    5[BANK0 ] PTR struct RFM69HCW
  3333 ;;		 -> main@radio(75), 
  3334 ;;  msg             2    3[BANK0 ] unsigned char [2]
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      void 
  3337 ;; Registers used:
  3338 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3345 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3346 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3347 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3348 ;;Total ram usage:        5 bytes
  3349 ;; Hardware stack levels used: 1
  3350 ;; Hardware stack levels required when called: 2
  3351 ;; This function calls:
  3352 ;;		_sendBulk
  3353 ;; This function is called by:
  3354 ;;		_initRadio
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           
  3359                           ;psect for function _setPreambleLength
  3360  029A                     _setPreambleLength:
  3361                           
  3362                           ;incstack = 0
  3363                           ; Regs used in _setPreambleLength: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3364                           ;setPreambleLength@radio stored from wreg
  3365  029A  0020               	movlb	0	; select bank0
  3366  029B  00C5               	movwf	setPreambleLength@radio
  3367  029C                     l1343:
  3368                           
  3369                           ;RFM69HCW.c: 111:     byte msg[] = {0x2d | 0x80, 0x03};
  3370  029C  083B               	movf	setPreambleLength@F9462+1,w
  3371  029D  00C4               	movwf	setPreambleLength@msg+1
  3372  029E  083A               	movf	setPreambleLength@F9462,w
  3373  029F  00C3               	movwf	setPreambleLength@msg
  3374  02A0                     l1345:
  3375                           
  3376                           ;RFM69HCW.c: 112:     sendBulk(radio, msg, 2);
  3377  02A0  3043               	movlw	(low (setPreambleLength@msg| 0))& (0+255)
  3378  02A1  00FC               	movwf	??_setPreambleLength
  3379  02A2  087C               	movf	??_setPreambleLength,w
  3380  02A3  00F6               	movwf	sendBulk@msgs
  3381  02A4  3002               	movlw	2
  3382  02A5  00FD               	movwf	??_setPreambleLength+1
  3383  02A6  087D               	movf	??_setPreambleLength+1,w
  3384  02A7  00F7               	movwf	sendBulk@len
  3385  02A8  0845               	movf	setPreambleLength@radio,w
  3386  02A9  3186  2615  3182   	fcall	_sendBulk
  3387  02AC                     l206:
  3388  02AC  0008               	return
  3389  02AD                     __end_of_setPreambleLength:
  3390                           
  3391                           	psect	text12
  3392  0397                     __ptext12:	
  3393 ;; *************** function _setPacketLength *****************
  3394 ;; Defined at:
  3395 ;;		line 61 in file "RFM69HCW.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;  radio           1    wreg     PTR struct RFM69HCW
  3398 ;;		 -> main@radio(75), 
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;  radio           1    5[BANK0 ] PTR struct RFM69HCW
  3401 ;;		 -> main@radio(75), 
  3402 ;;  msg             2    3[BANK0 ] unsigned char [2]
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  1    wreg      void 
  3405 ;; Registers used:
  3406 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3413 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3414 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3415 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3416 ;;Total ram usage:        5 bytes
  3417 ;; Hardware stack levels used: 1
  3418 ;; Hardware stack levels required when called: 2
  3419 ;; This function calls:
  3420 ;;		_sendBulk
  3421 ;; This function is called by:
  3422 ;;		_initRadio
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           
  3427                           ;psect for function _setPacketLength
  3428  0397                     _setPacketLength:
  3429                           
  3430                           ;incstack = 0
  3431                           ; Regs used in _setPacketLength: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3432                           ;setPacketLength@radio stored from wreg
  3433  0397  0020               	movlb	0	; select bank0
  3434  0398  00C5               	movwf	setPacketLength@radio
  3435  0399                     l1305:
  3436                           
  3437                           ;RFM69HCW.c: 62:     byte msg[] = {0x38 | 0x80, radio->packet_length};
  3438  0399  01C3               	clrf	setPacketLength@msg
  3439  039A  01C4               	clrf	setPacketLength@msg+1
  3440  039B                     l1307:
  3441  039B  30B8               	movlw	184
  3442  039C  00FC               	movwf	??_setPacketLength
  3443  039D  087C               	movf	??_setPacketLength,w
  3444  039E  00C3               	movwf	setPacketLength@msg
  3445  039F                     l1309:
  3446  039F  0845               	movf	setPacketLength@radio,w
  3447  03A0  3E2B               	addlw	43
  3448  03A1  0086               	movwf	6
  3449  03A2  0187               	clrf	7
  3450  03A3  0801               	movf	1,w
  3451  03A4  00FC               	movwf	??_setPacketLength
  3452  03A5  087C               	movf	??_setPacketLength,w
  3453  03A6  00C4               	movwf	setPacketLength@msg+1
  3454  03A7                     l1311:
  3455                           
  3456                           ;RFM69HCW.c: 63:     sendBulk(radio, msg, 2);
  3457  03A7  3043               	movlw	(low (setPacketLength@msg| 0))& (0+255)
  3458  03A8  00FC               	movwf	??_setPacketLength
  3459  03A9  087C               	movf	??_setPacketLength,w
  3460  03AA  00F6               	movwf	sendBulk@msgs
  3461  03AB  3002               	movlw	2
  3462  03AC  00FD               	movwf	??_setPacketLength+1
  3463  03AD  087D               	movf	??_setPacketLength+1,w
  3464  03AE  00F7               	movwf	sendBulk@len
  3465  03AF  0845               	movf	setPacketLength@radio,w
  3466  03B0  3186  2615  3183   	fcall	_sendBulk
  3467  03B3                     l162:
  3468  03B3  0008               	return
  3469  03B4                     __end_of_setPacketLength:
  3470                           
  3471                           	psect	text13
  3472  0287                     __ptext13:	
  3473 ;; *************** function _setPacketFormat *****************
  3474 ;; Defined at:
  3475 ;;		line 76 in file "RFM69HCW.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;  radio           1    wreg     PTR struct RFM69HCW
  3478 ;;		 -> main@radio(75), 
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;  radio           1    5[BANK0 ] PTR struct RFM69HCW
  3481 ;;		 -> main@radio(75), 
  3482 ;;  msg             2    3[BANK0 ] unsigned char [2]
  3483 ;; Return value:  Size  Location     Type
  3484 ;;                  1    wreg      void 
  3485 ;; Registers used:
  3486 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3487 ;; Tracked objects:
  3488 ;;		On entry : 0/0
  3489 ;;		On exit  : 0/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3493 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3494 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3495 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3496 ;;Total ram usage:        5 bytes
  3497 ;; Hardware stack levels used: 1
  3498 ;; Hardware stack levels required when called: 2
  3499 ;; This function calls:
  3500 ;;		_sendBulk
  3501 ;; This function is called by:
  3502 ;;		_initRadio
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           
  3507                           ;psect for function _setPacketFormat
  3508  0287                     _setPacketFormat:
  3509                           
  3510                           ;incstack = 0
  3511                           ; Regs used in _setPacketFormat: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3512                           ;setPacketFormat@radio stored from wreg
  3513  0287  0020               	movlb	0	; select bank0
  3514  0288  00C5               	movwf	setPacketFormat@radio
  3515  0289                     l1329:
  3516                           
  3517                           ;RFM69HCW.c: 77:     byte msg[] = {0x37 | 0x80, 0b00010000};
  3518  0289  083F               	movf	setPacketFormat@F9440+1,w
  3519  028A  00C4               	movwf	setPacketFormat@msg+1
  3520  028B  083E               	movf	setPacketFormat@F9440,w
  3521  028C  00C3               	movwf	setPacketFormat@msg
  3522  028D                     l1331:
  3523                           
  3524                           ;RFM69HCW.c: 78:     sendBulk(radio, msg, 2);
  3525  028D  3043               	movlw	(low (setPacketFormat@msg| 0))& (0+255)
  3526  028E  00FC               	movwf	??_setPacketFormat
  3527  028F  087C               	movf	??_setPacketFormat,w
  3528  0290  00F6               	movwf	sendBulk@msgs
  3529  0291  3002               	movlw	2
  3530  0292  00FD               	movwf	??_setPacketFormat+1
  3531  0293  087D               	movf	??_setPacketFormat+1,w
  3532  0294  00F7               	movwf	sendBulk@len
  3533  0295  0845               	movf	setPacketFormat@radio,w
  3534  0296  3186  2615  3182   	fcall	_sendBulk
  3535  0299                     l177:
  3536  0299  0008               	return
  3537  029A                     __end_of_setPacketFormat:
  3538                           
  3539                           	psect	text14
  3540  037A                     __ptext14:	
  3541 ;; *************** function _setNodeAddress *****************
  3542 ;; Defined at:
  3543 ;;		line 66 in file "RFM69HCW.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  radio           1    wreg     PTR struct RFM69HCW
  3546 ;;		 -> main@radio(75), 
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;  radio           1    5[BANK0 ] PTR struct RFM69HCW
  3549 ;;		 -> main@radio(75), 
  3550 ;;  msg             2    3[BANK0 ] unsigned char [2]
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      void 
  3553 ;; Registers used:
  3554 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3561 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3562 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3563 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3564 ;;Total ram usage:        5 bytes
  3565 ;; Hardware stack levels used: 1
  3566 ;; Hardware stack levels required when called: 2
  3567 ;; This function calls:
  3568 ;;		_sendBulk
  3569 ;; This function is called by:
  3570 ;;		_initRadio
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574                           
  3575                           ;psect for function _setNodeAddress
  3576  037A                     _setNodeAddress:
  3577                           
  3578                           ;incstack = 0
  3579                           ; Regs used in _setNodeAddress: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3580                           ;setNodeAddress@radio stored from wreg
  3581  037A  0020               	movlb	0	; select bank0
  3582  037B  00C5               	movwf	setNodeAddress@radio
  3583  037C                     l1313:
  3584                           
  3585                           ;RFM69HCW.c: 67:     byte msg[] = {0x39 | 0x80, radio->node_address};
  3586  037C  01C3               	clrf	setNodeAddress@msg
  3587  037D  01C4               	clrf	setNodeAddress@msg+1
  3588  037E                     l1315:
  3589  037E  30B9               	movlw	185
  3590  037F  00FC               	movwf	??_setNodeAddress
  3591  0380  087C               	movf	??_setNodeAddress,w
  3592  0381  00C3               	movwf	setNodeAddress@msg
  3593  0382                     l1317:
  3594  0382  0845               	movf	setNodeAddress@radio,w
  3595  0383  3E40               	addlw	64
  3596  0384  0086               	movwf	6
  3597  0385  0187               	clrf	7
  3598  0386  0801               	movf	1,w
  3599  0387  00FC               	movwf	??_setNodeAddress
  3600  0388  087C               	movf	??_setNodeAddress,w
  3601  0389  00C4               	movwf	setNodeAddress@msg+1
  3602  038A                     l1319:
  3603                           
  3604                           ;RFM69HCW.c: 68:     sendBulk(radio, msg, 2);
  3605  038A  3043               	movlw	(low (setNodeAddress@msg| 0))& (0+255)
  3606  038B  00FC               	movwf	??_setNodeAddress
  3607  038C  087C               	movf	??_setNodeAddress,w
  3608  038D  00F6               	movwf	sendBulk@msgs
  3609  038E  3002               	movlw	2
  3610  038F  00FD               	movwf	??_setNodeAddress+1
  3611  0390  087D               	movf	??_setNodeAddress+1,w
  3612  0391  00F7               	movwf	sendBulk@len
  3613  0392  0845               	movf	setNodeAddress@radio,w
  3614  0393  3186  2615  3183   	fcall	_sendBulk
  3615  0396                     l167:
  3616  0396  0008               	return
  3617  0397                     __end_of_setNodeAddress:
  3618                           
  3619                           	psect	text15
  3620  03D1                     __ptext15:	
  3621 ;; *************** function _setModulationThreshold *****************
  3622 ;; Defined at:
  3623 ;;		line 90 in file "RFM69HCW.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;  radio           1    wreg     PTR struct RFM69HCW
  3626 ;;		 -> main@radio(75), 
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;  radio           1    5[BANK0 ] PTR struct RFM69HCW
  3629 ;;		 -> main@radio(75), 
  3630 ;;  msg             2    3[BANK0 ] unsigned char [2]
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      void 
  3633 ;; Registers used:
  3634 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3641 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3642 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3643 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3644 ;;Total ram usage:        5 bytes
  3645 ;; Hardware stack levels used: 1
  3646 ;; Hardware stack levels required when called: 2
  3647 ;; This function calls:
  3648 ;;		_sendBulk
  3649 ;; This function is called by:
  3650 ;;		_initRadio
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           
  3655                           ;psect for function _setModulationThreshold
  3656  03D1                     _setModulationThreshold:
  3657                           
  3658                           ;incstack = 0
  3659                           ; Regs used in _setModulationThreshold: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  3660                           ;setModulationThreshold@radio stored from wreg
  3661  03D1  0020               	movlb	0	; select bank0
  3662  03D2  00C5               	movwf	setModulationThreshold@radio
  3663  03D3                     l1335:
  3664                           
  3665                           ;RFM69HCW.c: 91:     byte msg[] = {0x3C | 0x80, radio->packet_length -1};
  3666  03D3  01C3               	clrf	setModulationThreshold@msg
  3667  03D4  01C4               	clrf	setModulationThreshold@msg+1
  3668  03D5                     l1337:
  3669  03D5  30BC               	movlw	188
  3670  03D6  00FC               	movwf	??_setModulationThreshold
  3671  03D7  087C               	movf	??_setModulationThreshold,w
  3672  03D8  00C3               	movwf	setModulationThreshold@msg
  3673  03D9                     l1339:
  3674  03D9  0845               	movf	setModulationThreshold@radio,w
  3675  03DA  3E2B               	addlw	43
  3676  03DB  0086               	movwf	6
  3677  03DC  0187               	clrf	7
  3678  03DD  0801               	movf	1,w
  3679  03DE  3EFF               	addlw	255
  3680  03DF  00FC               	movwf	??_setModulationThreshold
  3681  03E0  087C               	movf	??_setModulationThreshold,w
  3682  03E1  00C4               	movwf	setModulationThreshold@msg+1
  3683  03E2                     l1341:
  3684                           
  3685                           ;RFM69HCW.c: 92:     sendBulk(radio, msg, 2);
  3686  03E2  3043               	movlw	(low (setModulationThreshold@msg| 0))& (0+255)
  3687  03E3  00FC               	movwf	??_setModulationThreshold
  3688  03E4  087C               	movf	??_setModulationThreshold,w
  3689  03E5  00F6               	movwf	sendBulk@msgs
  3690  03E6  3002               	movlw	2
  3691  03E7  00FD               	movwf	??_setModulationThreshold+1
  3692  03E8  087D               	movf	??_setModulationThreshold+1,w
  3693  03E9  00F7               	movwf	sendBulk@len
  3694  03EA  0845               	movf	setModulationThreshold@radio,w
  3695  03EB  3186  2615  3183   	fcall	_sendBulk
  3696  03EE                     l190:
  3697  03EE  0008               	return
  3698  03EF                     __end_of_setModulationThreshold:
  3699                           
  3700                           	psect	text16
  3701  023E                     __ptext16:	
  3702 ;; *************** function _init *****************
  3703 ;; Defined at:
  3704 ;;		line 74 in file "receiver.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;		None
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;		None
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  2   84[None  ] int 
  3711 ;; Registers used:
  3712 ;;		wreg, status,2, status,0, pclath, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3722 ;;Total ram usage:        0 bytes
  3723 ;; Hardware stack levels used: 1
  3724 ;; Hardware stack levels required when called: 2
  3725 ;; This function calls:
  3726 ;;		_TRIS_ANS_Setup
  3727 ;;		_rfmSetup
  3728 ;; This function is called by:
  3729 ;;		_main
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           
  3734                           ;psect for function _init
  3735  023E                     _init:
  3736  023E                     l1391:	
  3737                           ;incstack = 0
  3738                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  3739                           
  3740                           
  3741                           ;receiver.c: 75:     TRIS_ANS_Setup();
  3742  023E  3182  2259  3182   	fcall	_TRIS_ANS_Setup
  3743  0241                     l1393:
  3744                           
  3745                           ;receiver.c: 76:     rfmSetup();
  3746  0241  3182  2245  3182   	fcall	_rfmSetup
  3747  0244                     l85:
  3748  0244  0008               	return
  3749  0245                     __end_of_init:
  3750                           
  3751                           	psect	text17
  3752  0245                     __ptext17:	
  3753 ;; *************** function _rfmSetup *****************
  3754 ;; Defined at:
  3755 ;;		line 80 in file "receiver.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;		None
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;		None
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  1    wreg      void 
  3762 ;; Registers used:
  3763 ;;		wreg, status,2, status,0, pclath, cstack
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3773 ;;Total ram usage:        0 bytes
  3774 ;; Hardware stack levels used: 1
  3775 ;; Hardware stack levels required when called: 1
  3776 ;; This function calls:
  3777 ;;		_resetRadio
  3778 ;;		_spi_init_master
  3779 ;; This function is called by:
  3780 ;;		_init
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           
  3785                           ;psect for function _rfmSetup
  3786  0245                     _rfmSetup:
  3787  0245                     l1285:	
  3788                           ;incstack = 0
  3789                           ; Regs used in _rfmSetup: [wreg+status,2+status,0+pclath+cstack]
  3790                           
  3791                           
  3792                           ;receiver.c: 81:     SSP1BUF;
  3793  0245  0024               	movlb	4	; select bank4
  3794  0246  0811               	movf	17,w	;volatile
  3795  0247                     l1287:
  3796                           
  3797                           ;receiver.c: 82:     SSP1STATbits.BF = 0;
  3798  0247  1014               	bcf	20,0	;volatile
  3799  0248                     l1289:
  3800                           
  3801                           ;receiver.c: 83:     spi_init_master();
  3802  0248  3182  2274  3182   	fcall	_spi_init_master
  3803  024B                     l1291:
  3804                           
  3805                           ;receiver.c: 84:     resetRadio();
  3806  024B  3183  2301  3182   	fcall	_resetRadio
  3807  024E                     l88:
  3808  024E  0008               	return
  3809  024F                     __end_of_rfmSetup:
  3810                           
  3811                           	psect	text18
  3812  0274                     __ptext18:	
  3813 ;; *************** function _spi_init_master *****************
  3814 ;; Defined at:
  3815 ;;		line 122 in file "receiver.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;		None
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;		None
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      void 
  3822 ;; Registers used:
  3823 ;;		wreg, status,2, status,0
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3833 ;;Total ram usage:        0 bytes
  3834 ;; Hardware stack levels used: 1
  3835 ;; This function calls:
  3836 ;;		Nothing
  3837 ;; This function is called by:
  3838 ;;		_rfmSetup
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           
  3843                           ;psect for function _spi_init_master
  3844  0274                     _spi_init_master:
  3845  0274                     l1239:	
  3846                           ;incstack = 0
  3847                           ; Regs used in _spi_init_master: [wreg+status,2+status,0]
  3848                           
  3849                           
  3850                           ;receiver.c: 123:     SSP1CON1bits.SSPM = 0b0001;
  3851  0274  0024               	movlb	4	; select bank4
  3852  0275  0815               	movf	21,w	;volatile
  3853  0276  39F0               	andlw	-16
  3854  0277  3801               	iorlw	1
  3855  0278  0095               	movwf	21	;volatile
  3856  0279                     l1241:
  3857                           
  3858                           ;receiver.c: 124:     SSP1CONbits.SSPEN = 1;
  3859  0279  1695               	bsf	21,5	;volatile
  3860  027A                     l1243:
  3861                           
  3862                           ;receiver.c: 125:     SSP1CONbits.CKP = 0;
  3863  027A  1215               	bcf	21,4	;volatile
  3864  027B                     l1245:
  3865                           
  3866                           ;receiver.c: 126:     SSP1STATbits.CKE = 1;
  3867  027B  1714               	bsf	20,6	;volatile
  3868  027C                     l1247:
  3869                           
  3870                           ;receiver.c: 127:     SSP1STATbits.SMP = 0;
  3871  027C  1394               	bcf	20,7	;volatile
  3872  027D                     l1249:
  3873                           
  3874                           ;receiver.c: 129:     RC0PPS = 0b10000;
  3875  027D  3010               	movlw	16
  3876  027E  003D               	movlb	29	; select bank29
  3877  027F  00A0               	movwf	32	;volatile
  3878  0280                     l1251:
  3879                           
  3880                           ;receiver.c: 132:     SSPDATPPS = 0b10001;
  3881  0280  3011               	movlw	17
  3882  0281  003C               	movlb	28	; select bank28
  3883  0282  00A1               	movwf	33	;volatile
  3884  0283                     l1253:
  3885                           
  3886                           ;receiver.c: 135:     RC3PPS = 0b10001;
  3887  0283  3011               	movlw	17
  3888  0284  003D               	movlb	29	; select bank29
  3889  0285  00A3               	movwf	35	;volatile
  3890  0286                     l107:
  3891  0286  0008               	return
  3892  0287                     __end_of_spi_init_master:
  3893                           
  3894                           	psect	text19
  3895  0301                     __ptext19:	
  3896 ;; *************** function _resetRadio *****************
  3897 ;; Defined at:
  3898 ;;		line 67 in file "receiver.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;		None
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;		None
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		wreg
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3914 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3915 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3916 ;;Total ram usage:        1 bytes
  3917 ;; Hardware stack levels used: 1
  3918 ;; This function calls:
  3919 ;;		Nothing
  3920 ;; This function is called by:
  3921 ;;		_rfmSetup
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           
  3926                           ;psect for function _resetRadio
  3927  0301                     _resetRadio:
  3928  0301                     l1233:	
  3929                           ;incstack = 0
  3930                           ; Regs used in _resetRadio: [wreg]
  3931                           
  3932                           
  3933                           ;receiver.c: 68:     PORTCbits.RC2 = 1;
  3934  0301  0020               	movlb	0	; select bank0
  3935  0302  150E               	bsf	14,2	;volatile
  3936  0303                     l1235:
  3937                           
  3938                           ;receiver.c: 69:     _delay((unsigned long)((1)*(16000000/4000.0)));
  3939  0303  3006               	movlw	6
  3940  0304  00F0               	movwf	??_resetRadio
  3941  0305  3030               	movlw	48
  3942  0306                     u647:
  3943  0306  0B89               	decfsz	9,f
  3944  0307  2B06               	goto	u647
  3945  0308  0BF0               	decfsz	??_resetRadio,f
  3946  0309  2B06               	goto	u647
  3947  030A  3200               	nop2
  3948  030B                     l1237:
  3949                           
  3950                           ;receiver.c: 70:     PORTCbits.RC2 = 0;
  3951  030B  0020               	movlb	0	; select bank0
  3952  030C  110E               	bcf	14,2	;volatile
  3953                           
  3954                           ;receiver.c: 71:     _delay((unsigned long)((20)*(16000000/4000.0)));
  3955  030D  3068               	movlw	104
  3956  030E  00F0               	movwf	??_resetRadio
  3957  030F  30E4               	movlw	228
  3958  0310                     u657:
  3959  0310  0B89               	decfsz	9,f
  3960  0311  2B10               	goto	u657
  3961  0312  0BF0               	decfsz	??_resetRadio,f
  3962  0313  2B10               	goto	u657
  3963  0314  3200               	nop2
  3964  0315                     l82:
  3965  0315  0008               	return
  3966  0316                     __end_of_resetRadio:
  3967                           
  3968                           	psect	text20
  3969  0259                     __ptext20:	
  3970 ;; *************** function _TRIS_ANS_Setup *****************
  3971 ;; Defined at:
  3972 ;;		line 55 in file "receiver.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;		None
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;		None
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      void 
  3979 ;; Registers used:
  3980 ;;		status,2
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3990 ;;Total ram usage:        0 bytes
  3991 ;; Hardware stack levels used: 1
  3992 ;; This function calls:
  3993 ;;		Nothing
  3994 ;; This function is called by:
  3995 ;;		_init
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           
  4000                           ;psect for function _TRIS_ANS_Setup
  4001  0259                     _TRIS_ANS_Setup:
  4002  0259                     l1269:	
  4003                           ;incstack = 0
  4004                           ; Regs used in _TRIS_ANS_Setup: [status,2]
  4005                           
  4006                           
  4007                           ;receiver.c: 56:     ANSELA = 0;
  4008  0259  0023               	movlb	3	; select bank3
  4009  025A  018C               	clrf	12	;volatile
  4010                           
  4011                           ;receiver.c: 57:     ANSELC = 0;
  4012  025B  018E               	clrf	14	;volatile
  4013  025C                     l1271:
  4014                           
  4015                           ;receiver.c: 58:     TRISC0 = 0;
  4016  025C  0021               	movlb	1	; select bank1
  4017  025D  100E               	bcf	14,0	;volatile
  4018  025E                     l1273:
  4019                           
  4020                           ;receiver.c: 59:     TRISC1 = 1;
  4021  025E  148E               	bsf	14,1	;volatile
  4022  025F                     l1275:
  4023                           
  4024                           ;receiver.c: 60:     TRISC2 = 0;
  4025  025F  110E               	bcf	14,2	;volatile
  4026  0260                     l1277:
  4027                           
  4028                           ;receiver.c: 61:     TRISC3 = 0;
  4029  0260  118E               	bcf	14,3	;volatile
  4030  0261                     l1279:
  4031                           
  4032                           ;receiver.c: 62:     TRISC5 = 1;
  4033  0261  168E               	bsf	14,5	;volatile
  4034  0262                     l1281:
  4035                           
  4036                           ;receiver.c: 63:     TRISA2 = 0;
  4037  0262  110C               	bcf	12,2	;volatile
  4038  0263                     l1283:
  4039                           
  4040                           ;receiver.c: 64:     TRISA5 = 1;
  4041  0263  168C               	bsf	12,5	;volatile
  4042  0264                     l79:
  4043  0264  0008               	return
  4044  0265                     __end_of_TRIS_ANS_Setup:
  4045                           
  4046                           	psect	text21
  4047  02EC                     __ptext21:	
  4048 ;; *************** function _getRSSI *****************
  4049 ;; Defined at:
  4050 ;;		line 140 in file "RFM69HCW.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;  radio           1    wreg     PTR struct RFM69HCW
  4053 ;;		 -> main@radio(75), 
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;  radio           1    3[BANK0 ] PTR struct RFM69HCW
  4056 ;;		 -> main@radio(75), 
  4057 ;;  msg             2    4[BANK0 ] unsigned char [2]
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  1    wreg      unsigned char 
  4060 ;; Registers used:
  4061 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4068 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4069 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4070 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4071 ;;Total ram usage:        5 bytes
  4072 ;; Hardware stack levels used: 1
  4073 ;; Hardware stack levels required when called: 2
  4074 ;; This function calls:
  4075 ;;		_sendBulk
  4076 ;; This function is called by:
  4077 ;;		_main
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           
  4082                           ;psect for function _getRSSI
  4083  02EC                     _getRSSI:
  4084                           
  4085                           ;incstack = 0
  4086                           ; Regs used in _getRSSI: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4087                           ;getRSSI@radio stored from wreg
  4088  02EC  0020               	movlb	0	; select bank0
  4089  02ED  00C3               	movwf	getRSSI@radio
  4090  02EE                     l1439:
  4091                           
  4092                           ;RFM69HCW.c: 141:     byte msg[] = {0x24, 0x0};
  4093  02EE  0839               	movf	getRSSI@F9477+1,w
  4094  02EF  00C5               	movwf	getRSSI@msg+1
  4095  02F0  0838               	movf	getRSSI@F9477,w
  4096  02F1  00C4               	movwf	getRSSI@msg
  4097  02F2                     l1441:
  4098                           
  4099                           ;RFM69HCW.c: 142:     sendBulk(radio, msg, 2);
  4100  02F2  3044               	movlw	(low (getRSSI@msg| 0))& (0+255)
  4101  02F3  00FC               	movwf	??_getRSSI
  4102  02F4  087C               	movf	??_getRSSI,w
  4103  02F5  00F6               	movwf	sendBulk@msgs
  4104  02F6  3002               	movlw	2
  4105  02F7  00FD               	movwf	??_getRSSI+1
  4106  02F8  087D               	movf	??_getRSSI+1,w
  4107  02F9  00F7               	movwf	sendBulk@len
  4108  02FA  0843               	movf	getRSSI@radio,w
  4109  02FB  3186  2615  3182   	fcall	_sendBulk
  4110  02FE                     l1443:
  4111                           
  4112                           ;RFM69HCW.c: 143:     return msg[1];
  4113  02FE  0020               	movlb	0	; select bank0
  4114  02FF  0845               	movf	getRSSI@msg+1,w
  4115  0300                     l225:
  4116  0300  0008               	return
  4117  0301                     __end_of_getRSSI:
  4118                           
  4119                           	psect	text22
  4120  02D7                     __ptext22:	
  4121 ;; *************** function _getOperatingMode *****************
  4122 ;; Defined at:
  4123 ;;		line 158 in file "RFM69HCW.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;  radio           1    wreg     PTR struct RFM69HCW
  4126 ;;		 -> main@radio(75), 
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;  radio           1    3[BANK0 ] PTR struct RFM69HCW
  4129 ;;		 -> main@radio(75), 
  4130 ;;  msg             2    4[BANK0 ] unsigned char [2]
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      unsigned char 
  4133 ;; Registers used:
  4134 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4141 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4142 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4143 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4144 ;;Total ram usage:        5 bytes
  4145 ;; Hardware stack levels used: 1
  4146 ;; Hardware stack levels required when called: 2
  4147 ;; This function calls:
  4148 ;;		_sendBulk
  4149 ;; This function is called by:
  4150 ;;		_main
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           
  4155                           ;psect for function _getOperatingMode
  4156  02D7                     _getOperatingMode:
  4157                           
  4158                           ;incstack = 0
  4159                           ; Regs used in _getOperatingMode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4160                           ;getOperatingMode@radio stored from wreg
  4161  02D7  0020               	movlb	0	; select bank0
  4162  02D8  00C3               	movwf	getOperatingMode@radio
  4163  02D9                     l1463:
  4164                           
  4165                           ;RFM69HCW.c: 159:     byte msg[] = {0x01, 0x0};
  4166  02D9  0833               	movf	getOperatingMode@F9489+1,w
  4167  02DA  00C5               	movwf	getOperatingMode@msg+1
  4168  02DB  0832               	movf	getOperatingMode@F9489,w
  4169  02DC  00C4               	movwf	getOperatingMode@msg
  4170  02DD                     l1465:
  4171                           
  4172                           ;RFM69HCW.c: 160:     sendBulk(radio, msg, 2);
  4173  02DD  3044               	movlw	(low (getOperatingMode@msg| 0))& (0+255)
  4174  02DE  00FC               	movwf	??_getOperatingMode
  4175  02DF  087C               	movf	??_getOperatingMode,w
  4176  02E0  00F6               	movwf	sendBulk@msgs
  4177  02E1  3002               	movlw	2
  4178  02E2  00FD               	movwf	??_getOperatingMode+1
  4179  02E3  087D               	movf	??_getOperatingMode+1,w
  4180  02E4  00F7               	movwf	sendBulk@len
  4181  02E5  0843               	movf	getOperatingMode@radio,w
  4182  02E6  3186  2615  3182   	fcall	_sendBulk
  4183  02E9                     l1467:
  4184                           
  4185                           ;RFM69HCW.c: 161:     return msg[1];
  4186  02E9  0020               	movlb	0	; select bank0
  4187  02EA  0845               	movf	getOperatingMode@msg+1,w
  4188  02EB                     l240:
  4189  02EB  0008               	return
  4190  02EC                     __end_of_getOperatingMode:
  4191                           
  4192                           	psect	text23
  4193  02C2                     __ptext23:	
  4194 ;; *************** function _getModeFlags *****************
  4195 ;; Defined at:
  4196 ;;		line 170 in file "RFM69HCW.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;  radio           1    wreg     PTR struct RFM69HCW
  4199 ;;		 -> main@radio(75), 
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;  radio           1    3[BANK0 ] PTR struct RFM69HCW
  4202 ;;		 -> main@radio(75), 
  4203 ;;  msg             2    4[BANK0 ] unsigned char [2]
  4204 ;; Return value:  Size  Location     Type
  4205 ;;                  1    wreg      unsigned char 
  4206 ;; Registers used:
  4207 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4208 ;; Tracked objects:
  4209 ;;		On entry : 0/0
  4210 ;;		On exit  : 0/0
  4211 ;;		Unchanged: 0/0
  4212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4214 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4215 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4216 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4217 ;;Total ram usage:        5 bytes
  4218 ;; Hardware stack levels used: 1
  4219 ;; Hardware stack levels required when called: 2
  4220 ;; This function calls:
  4221 ;;		_sendBulk
  4222 ;; This function is called by:
  4223 ;;		_main
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227                           
  4228                           ;psect for function _getModeFlags
  4229  02C2                     _getModeFlags:
  4230                           
  4231                           ;incstack = 0
  4232                           ; Regs used in _getModeFlags: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4233                           ;getModeFlags@radio stored from wreg
  4234  02C2  0020               	movlb	0	; select bank0
  4235  02C3  00C3               	movwf	getModeFlags@radio
  4236  02C4                     l1455:
  4237                           
  4238                           ;RFM69HCW.c: 171:     byte msg[] = {0x27, 0x0};
  4239  02C4  0831               	movf	getModeFlags@F9498+1,w
  4240  02C5  00C5               	movwf	getModeFlags@msg+1
  4241  02C6  0830               	movf	getModeFlags@F9498,w
  4242  02C7  00C4               	movwf	getModeFlags@msg
  4243  02C8                     l1457:
  4244                           
  4245                           ;RFM69HCW.c: 172:     sendBulk(radio, msg, 2);
  4246  02C8  3044               	movlw	(low (getModeFlags@msg| 0))& (0+255)
  4247  02C9  00FC               	movwf	??_getModeFlags
  4248  02CA  087C               	movf	??_getModeFlags,w
  4249  02CB  00F6               	movwf	sendBulk@msgs
  4250  02CC  3002               	movlw	2
  4251  02CD  00FD               	movwf	??_getModeFlags+1
  4252  02CE  087D               	movf	??_getModeFlags+1,w
  4253  02CF  00F7               	movwf	sendBulk@len
  4254  02D0  0843               	movf	getModeFlags@radio,w
  4255  02D1  3186  2615  3182   	fcall	_sendBulk
  4256  02D4                     l1459:
  4257                           
  4258                           ;RFM69HCW.c: 173:     return msg[1];
  4259  02D4  0020               	movlb	0	; select bank0
  4260  02D5  0845               	movf	getModeFlags@msg+1,w
  4261  02D6                     l250:
  4262  02D6  0008               	return
  4263  02D7                     __end_of_getModeFlags:
  4264                           
  4265                           	psect	text24
  4266  02AD                     __ptext24:	
  4267 ;; *************** function _getFifoFlags *****************
  4268 ;; Defined at:
  4269 ;;		line 146 in file "RFM69HCW.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  radio           1    wreg     PTR struct RFM69HCW
  4272 ;;		 -> main@radio(75), 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  radio           1    5[BANK0 ] PTR struct RFM69HCW
  4275 ;;		 -> main@radio(75), 
  4276 ;;  msg             2    3[BANK0 ] unsigned char [2]
  4277 ;; Return value:  Size  Location     Type
  4278 ;;                  1    wreg      unsigned char 
  4279 ;; Registers used:
  4280 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4287 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4288 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4289 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4290 ;;Total ram usage:        5 bytes
  4291 ;; Hardware stack levels used: 1
  4292 ;; Hardware stack levels required when called: 2
  4293 ;; This function calls:
  4294 ;;		_sendBulk
  4295 ;; This function is called by:
  4296 ;;		_main
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           
  4301                           ;psect for function _getFifoFlags
  4302  02AD                     _getFifoFlags:
  4303                           
  4304                           ;incstack = 0
  4305                           ; Regs used in _getFifoFlags: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4306                           ;getFifoFlags@radio stored from wreg
  4307  02AD  0020               	movlb	0	; select bank0
  4308  02AE  00C5               	movwf	getFifoFlags@radio
  4309  02AF                     l1447:
  4310                           
  4311                           ;RFM69HCW.c: 147:     byte msg[] = {0x28, 0x0};
  4312  02AF  0837               	movf	getFifoFlags@F9481+1,w
  4313  02B0  00C4               	movwf	getFifoFlags@msg+1
  4314  02B1  0836               	movf	getFifoFlags@F9481,w
  4315  02B2  00C3               	movwf	getFifoFlags@msg
  4316  02B3                     l1449:
  4317                           
  4318                           ;RFM69HCW.c: 148:     sendBulk(radio, msg, 2);
  4319  02B3  3043               	movlw	(low (getFifoFlags@msg| 0))& (0+255)
  4320  02B4  00FC               	movwf	??_getFifoFlags
  4321  02B5  087C               	movf	??_getFifoFlags,w
  4322  02B6  00F6               	movwf	sendBulk@msgs
  4323  02B7  3002               	movlw	2
  4324  02B8  00FD               	movwf	??_getFifoFlags+1
  4325  02B9  087D               	movf	??_getFifoFlags+1,w
  4326  02BA  00F7               	movwf	sendBulk@len
  4327  02BB  0845               	movf	getFifoFlags@radio,w
  4328  02BC  3186  2615  3182   	fcall	_sendBulk
  4329  02BF                     l1451:
  4330                           
  4331                           ;RFM69HCW.c: 149:     return msg[1];
  4332  02BF  0020               	movlb	0	; select bank0
  4333  02C0  0844               	movf	getFifoFlags@msg+1,w
  4334  02C1                     l230:
  4335  02C1  0008               	return
  4336  02C2                     __end_of_getFifoFlags:
  4337                           
  4338                           	psect	text25
  4339  0615                     __ptext25:	
  4340 ;; *************** function _sendBulk *****************
  4341 ;; Defined at:
  4342 ;;		line 14 in file "RFM69HCW.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;  radio           1    wreg     PTR struct RFM69HCW
  4345 ;;		 -> main@radio(75), 
  4346 ;;  msgs            1    6[COMMON] PTR unsigned char 
  4347 ;;		 -> setAutoMode@msg(2), getPowerSettings@msg(2), restartRx@msg(2), startRSSISampling@msg(2), 
  4348 ;;		 -> checkRSSISampling@msg(2), getModeFlags@msg(2), setDiodeMapping@msg(2), getOperatingMode@msg(2), 
  4349 ;;		 -> getRSSIThreshold@msg(2), getFifoFlags@msg(2), getRSSI@msg(2), setPowerOutput@msg(2), 
  4350 ;;		 -> setPreambleLength@msg(2), checkForPayload@flags(2), setModulationThreshold@msg(2), setOperatingMode@msg(2), 
  4351 ;;		 -> setPacketFormat@msg(2), setRSSIThreshold@msg(2), setNodeAddress@msg(2), setPacketLength@msg(2), 
  4352 ;;		 -> setSyncWords@msg(10), sendPairs@msg(2), 
  4353 ;;  len             1    7[COMMON] const unsigned char 
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;  radio           1    2[BANK0 ] PTR struct RFM69HCW
  4356 ;;		 -> main@radio(75), 
  4357 ;;  i               2    0[BANK0 ] int 
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1    wreg      void 
  4360 ;; Registers used:
  4361 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4368 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4369 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4370 ;;      Totals:         6       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4371 ;;Total ram usage:        9 bytes
  4372 ;; Hardware stack levels used: 1
  4373 ;; Hardware stack levels required when called: 1
  4374 ;; This function calls:
  4375 ;;		_send
  4376 ;;		_setPinWithMask
  4377 ;; This function is called by:
  4378 ;;		_sendPairs
  4379 ;;		_setSyncWords
  4380 ;;		_setPacketLength
  4381 ;;		_setNodeAddress
  4382 ;;		_setRSSIThreshold
  4383 ;;		_setPacketFormat
  4384 ;;		_setOperatingMode
  4385 ;;		_setModulationThreshold
  4386 ;;		_setPreambleLength
  4387 ;;		_setPowerOutput
  4388 ;;		_getRSSI
  4389 ;;		_getFifoFlags
  4390 ;;		_getOperatingMode
  4391 ;;		_setDiodeMapping
  4392 ;;		_getModeFlags
  4393 ;;		_setAutoMode
  4394 ;;		_checkForPayload
  4395 ;;		_getRSSIThreshold
  4396 ;;		_checkRSSISampling
  4397 ;;		_startRSSISampling
  4398 ;;		_restartRx
  4399 ;;		_getPowerSettings
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           
  4404                           ;psect for function _sendBulk
  4405  0615                     _sendBulk:
  4406                           
  4407                           ;incstack = 0
  4408                           ; Regs used in _sendBulk: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4409                           ;sendBulk@radio stored from wreg
  4410  0615  0020               	movlb	0	; select bank0
  4411  0616  00C2               	movwf	sendBulk@radio
  4412  0617                     l1217:
  4413                           
  4414                           ;RFM69HCW.c: 15:     setPinWithMask(radio->SSport, radio->SSbit, 0);
  4415  0617  0842               	movf	sendBulk@radio,w
  4416  0618  3E28               	addlw	40
  4417  0619  0086               	movwf	6
  4418  061A  0187               	clrf	7
  4419  061B  3F40               	moviw [0]fsr1
  4420  061C  00F0               	movwf	setPinWithMask@pPort
  4421  061D  3F41               	moviw [1]fsr1
  4422  061E  00F1               	movwf	setPinWithMask@pPort+1
  4423  061F  0842               	movf	sendBulk@radio,w
  4424  0620  3E2A               	addlw	42
  4425  0621  0086               	movwf	6
  4426  0622  0187               	clrf	7
  4427  0623  0801               	movf	1,w
  4428  0624  00F8               	movwf	??_sendBulk
  4429  0625  0878               	movf	??_sendBulk,w
  4430  0626  00F2               	movwf	setPinWithMask@iPin
  4431  0627  01F3               	clrf	setPinWithMask@value
  4432  0628  3184  240F  3186   	fcall	_setPinWithMask
  4433  062B                     l1219:
  4434                           
  4435                           ;RFM69HCW.c: 16:     for (int i = 0; i < len; i++) {
  4436  062B  0020               	movlb	0	; select bank0
  4437  062C  01C0               	clrf	sendBulk@i
  4438  062D  01C1               	clrf	sendBulk@i+1
  4439  062E                     l1221:
  4440  062E  0877               	movf	sendBulk@len,w
  4441  062F  1D03               	btfss	3,2
  4442  0630  2E32               	goto	u391
  4443  0631  2E33               	goto	u390
  4444  0632                     u391:
  4445  0632  2E34               	goto	l1225
  4446  0633                     u390:
  4447  0633  2E5E               	goto	l1231
  4448  0634                     l1225:
  4449                           
  4450                           ;RFM69HCW.c: 17:         msgs[i] = send(radio, msgs[i]);
  4451  0634  0020               	movlb	0	; select bank0
  4452  0635  0840               	movf	sendBulk@i,w
  4453  0636  0776               	addwf	sendBulk@msgs,w
  4454  0637  00F8               	movwf	??_sendBulk
  4455  0638  0878               	movf	??_sendBulk,w
  4456  0639  0086               	movwf	6
  4457  063A  0187               	clrf	7
  4458  063B  0801               	movf	1,w
  4459  063C  00F9               	movwf	??_sendBulk+1
  4460  063D  0879               	movf	??_sendBulk+1,w
  4461  063E  00F0               	movwf	send@msg
  4462  063F  0842               	movf	sendBulk@radio,w
  4463  0640  3185  25B9  3186   	fcall	_send
  4464  0643  00FA               	movwf	??_sendBulk+2
  4465  0644  0020               	movlb	0	; select bank0
  4466  0645  0840               	movf	sendBulk@i,w
  4467  0646  0776               	addwf	sendBulk@msgs,w
  4468  0647  00FB               	movwf	??_sendBulk+3
  4469  0648  087B               	movf	??_sendBulk+3,w
  4470  0649  0086               	movwf	6
  4471  064A  0187               	clrf	7
  4472  064B  087A               	movf	??_sendBulk+2,w
  4473  064C  0081               	movwf	1
  4474  064D                     l1227:
  4475                           
  4476                           ;RFM69HCW.c: 18:     }
  4477  064D  3001               	movlw	1
  4478  064E  07C0               	addwf	sendBulk@i,f
  4479  064F  3000               	movlw	0
  4480  0650  3DC1               	addwfc	sendBulk@i+1,f
  4481  0651                     l1229:
  4482  0651  0841               	movf	sendBulk@i+1,w
  4483  0652  3A80               	xorlw	128
  4484  0653  00F8               	movwf	??_sendBulk
  4485  0654  3080               	movlw	128
  4486  0655  0278               	subwf	??_sendBulk,w
  4487  0656  1D03               	skipz
  4488  0657  2E5A               	goto	u405
  4489  0658  0877               	movf	sendBulk@len,w
  4490  0659  0240               	subwf	sendBulk@i,w
  4491  065A                     u405:
  4492  065A  1C03               	skipc
  4493  065B  2E5D               	goto	u401
  4494  065C  2E5E               	goto	u400
  4495  065D                     u401:
  4496  065D  2E34               	goto	l1225
  4497  065E                     u400:
  4498  065E                     l1231:
  4499                           
  4500                           ;RFM69HCW.c: 19:     setPinWithMask(radio->SSport, radio->SSbit, 1);
  4501  065E  0020               	movlb	0	; select bank0
  4502  065F  0842               	movf	sendBulk@radio,w
  4503  0660  3E28               	addlw	40
  4504  0661  0086               	movwf	6
  4505  0662  0187               	clrf	7
  4506  0663  3F40               	moviw [0]fsr1
  4507  0664  00F0               	movwf	setPinWithMask@pPort
  4508  0665  3F41               	moviw [1]fsr1
  4509  0666  00F1               	movwf	setPinWithMask@pPort+1
  4510  0667  0842               	movf	sendBulk@radio,w
  4511  0668  3E2A               	addlw	42
  4512  0669  0086               	movwf	6
  4513  066A  0187               	clrf	7
  4514  066B  0801               	movf	1,w
  4515  066C  00F8               	movwf	??_sendBulk
  4516  066D  0878               	movf	??_sendBulk,w
  4517  066E  00F2               	movwf	setPinWithMask@iPin
  4518  066F  01F3               	clrf	setPinWithMask@value
  4519  0670  0AF3               	incf	setPinWithMask@value,f
  4520  0671  3184  240F  3186   	fcall	_setPinWithMask
  4521  0674                     l135:
  4522  0674  0008               	return
  4523  0675                     __end_of_sendBulk:
  4524                           
  4525                           	psect	text26
  4526  040F                     __ptext26:	
  4527 ;; *************** function _setPinWithMask *****************
  4528 ;; Defined at:
  4529 ;;		line 43 in file "RFM69HCW.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;  pPort           2    0[COMMON] PTR unsigned char 
  4532 ;;		 -> PORTA(1), 
  4533 ;;  iPin            1    2[COMMON] unsigned char 
  4534 ;;  value           1    3[COMMON] unsigned char 
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;		None
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  1    wreg      void 
  4539 ;; Registers used:
  4540 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4546 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4549 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4550 ;;Total ram usage:        6 bytes
  4551 ;; Hardware stack levels used: 1
  4552 ;; This function calls:
  4553 ;;		Nothing
  4554 ;; This function is called by:
  4555 ;;		_sendBulk
  4556 ;;		_receivePayload
  4557 ;;		_sendPayload
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           
  4562                           ;psect for function _setPinWithMask
  4563  040F                     _setPinWithMask:
  4564  040F                     l1189:	
  4565                           ;incstack = 0
  4566                           ; Regs used in _setPinWithMask: [wreg+fsr1l+fsr1h+status,2+status,0]
  4567                           
  4568                           
  4569                           ;RFM69HCW.c: 44:     if (value == 0) {
  4570  040F  0873               	movf	setPinWithMask@value,w
  4571  0410  1D03               	btfss	3,2
  4572  0411  2C13               	goto	u321
  4573  0412  2C14               	goto	u320
  4574  0413                     u321:
  4575  0413  2C25               	goto	l1193
  4576  0414                     u320:
  4577  0414                     l1191:
  4578                           
  4579                           ;RFM69HCW.c: 45:         *pPort &= ~(1 << iPin);
  4580  0414  3001               	movlw	1
  4581  0415  00F4               	movwf	??_setPinWithMask
  4582  0416  0A72               	incf	setPinWithMask@iPin,w
  4583  0417  2C19               	goto	u334
  4584  0418                     u335:
  4585  0418  35F4               	lslf	??_setPinWithMask,f
  4586  0419                     u334:
  4587  0419  0B89               	decfsz	9,f
  4588  041A  2C18               	goto	u335
  4589  041B  0874               	movf	??_setPinWithMask,w
  4590  041C  3AFF               	xorlw	255
  4591  041D  00F5               	movwf	??_setPinWithMask+1
  4592  041E  0870               	movf	setPinWithMask@pPort,w
  4593  041F  0086               	movwf	6
  4594  0420  0871               	movf	setPinWithMask@pPort+1,w
  4595  0421  0087               	movwf	7
  4596  0422  0875               	movf	??_setPinWithMask+1,w
  4597  0423  0581               	andwf	1,f
  4598                           
  4599                           ;RFM69HCW.c: 46:     } else {
  4600  0424  2C34               	goto	l152
  4601  0425                     l1193:
  4602                           
  4603                           ;RFM69HCW.c: 47:         *pPort |= 1 << iPin;
  4604  0425  3001               	movlw	1
  4605  0426  00F4               	movwf	??_setPinWithMask
  4606  0427  0A72               	incf	setPinWithMask@iPin,w
  4607  0428  2C2A               	goto	u344
  4608  0429                     u345:
  4609  0429  35F4               	lslf	??_setPinWithMask,f
  4610  042A                     u344:
  4611  042A  0B89               	decfsz	9,f
  4612  042B  2C29               	goto	u345
  4613  042C  0874               	movf	??_setPinWithMask,w
  4614  042D  00F5               	movwf	??_setPinWithMask+1
  4615  042E  0870               	movf	setPinWithMask@pPort,w
  4616  042F  0086               	movwf	6
  4617  0430  0871               	movf	setPinWithMask@pPort+1,w
  4618  0431  0087               	movwf	7
  4619  0432  0875               	movf	??_setPinWithMask+1,w
  4620  0433  0481               	iorwf	1,f
  4621  0434                     l152:
  4622  0434  0008               	return
  4623  0435                     __end_of_setPinWithMask:
  4624                           
  4625                           	psect	text27
  4626  05B9                     __ptext27:	
  4627 ;; *************** function _send *****************
  4628 ;; Defined at:
  4629 ;;		line 22 in file "RFM69HCW.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;  radio           1    wreg     PTR struct RFM69HCW
  4632 ;;		 -> main@radio(75), 
  4633 ;;  msg             1    0[COMMON] unsigned char 
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;  radio           1    4[COMMON] PTR struct RFM69HCW
  4636 ;;		 -> main@radio(75), 
  4637 ;;  temp            1    3[COMMON] unsigned char 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  1    wreg      unsigned char 
  4640 ;; Registers used:
  4641 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4647 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4648 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4649 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4650 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4651 ;;Total ram usage:        5 bytes
  4652 ;; Hardware stack levels used: 1
  4653 ;; This function calls:
  4654 ;;		Nothing
  4655 ;; This function is called by:
  4656 ;;		_sendBulk
  4657 ;;		_receivePayload
  4658 ;;		_sendPayload
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           
  4663                           ;psect for function _send
  4664  05B9                     _send:
  4665                           
  4666                           ;incstack = 0
  4667                           ; Regs used in _send: [wreg+fsr1l+fsr1h+status,2+status,0]
  4668                           ;send@radio stored from wreg
  4669  05B9  00F4               	movwf	send@radio
  4670  05BA                     l1195:
  4671                           
  4672                           ;RFM69HCW.c: 23:     SSP1BUF = msg;
  4673  05BA  0870               	movf	send@msg,w
  4674  05BB  0024               	movlb	4	; select bank4
  4675  05BC  0091               	movwf	17	;volatile
  4676                           
  4677                           ;RFM69HCW.c: 24:     while (SSP1CONbits.WCOL) {
  4678  05BD  2DC0               	goto	l1199
  4679  05BE                     l139:
  4680                           
  4681                           ;RFM69HCW.c: 25:         SSP1CONbits.WCOL = 0;
  4682  05BE  1395               	bcf	21,7	;volatile
  4683  05BF  2DBA               	goto	l1195
  4684  05C0                     l1199:
  4685                           
  4686                           ;RFM69HCW.c: 24:     while (SSP1CONbits.WCOL) {
  4687  05C0  1B95               	btfsc	21,7	;volatile
  4688  05C1  2DC3               	goto	u351
  4689  05C2  2DC4               	goto	u350
  4690  05C3                     u351:
  4691  05C3  2DBE               	goto	l139
  4692  05C4                     u350:
  4693  05C4                     l141:
  4694  05C4  1C14               	btfss	20,0	;volatile
  4695  05C5  2DC7               	goto	u361
  4696  05C6  2DC8               	goto	u360
  4697  05C7                     u361:
  4698  05C7  2DC4               	goto	l141
  4699  05C8                     u360:
  4700  05C8                     l1201:
  4701                           
  4702                           ;RFM69HCW.c: 29:     radio->sendIndex++;
  4703  05C8  3001               	movlw	1
  4704  05C9  00F1               	movwf	??_send
  4705  05CA  0874               	movf	send@radio,w
  4706  05CB  3E4A               	addlw	74
  4707  05CC  0086               	movwf	6
  4708  05CD  0187               	clrf	7
  4709  05CE  0871               	movf	??_send,w
  4710  05CF  0781               	addwf	1,f
  4711                           
  4712                           ;RFM69HCW.c: 30:     if (radio->sendIndex == 20) {
  4713  05D0  0874               	movf	send@radio,w
  4714  05D1  3E4A               	addlw	74
  4715  05D2  0086               	movwf	6
  4716  05D3  0187               	clrf	7
  4717  05D4  3014               	movlw	20
  4718  05D5  0601               	xorwf	1,w
  4719  05D6  1D03               	btfss	3,2
  4720  05D7  2DD9               	goto	u371
  4721  05D8  2DDA               	goto	u370
  4722  05D9                     u371:
  4723  05D9  2DDF               	goto	l1205
  4724  05DA                     u370:
  4725  05DA                     l1203:
  4726                           
  4727                           ;RFM69HCW.c: 31:         radio->sendIndex = 0;
  4728  05DA  0874               	movf	send@radio,w
  4729  05DB  3E4A               	addlw	74
  4730  05DC  0086               	movwf	6
  4731  05DD  0187               	clrf	7
  4732  05DE  0181               	clrf	1
  4733  05DF                     l1205:
  4734                           
  4735                           ;RFM69HCW.c: 33:     byte temp = SSP1BUF;
  4736  05DF  0811               	movf	17,w	;volatile
  4737  05E0  00F1               	movwf	??_send
  4738  05E1  0871               	movf	??_send,w
  4739  05E2  00F3               	movwf	send@temp
  4740  05E3                     l1207:
  4741                           
  4742                           ;RFM69HCW.c: 34:     if (radio->sendIndex == 0) {
  4743  05E3  0874               	movf	send@radio,w
  4744  05E4  3E4A               	addlw	74
  4745  05E5  0086               	movwf	6
  4746  05E6  0187               	clrf	7
  4747  05E7  0801               	movf	1,w
  4748  05E8  1D03               	btfss	3,2
  4749  05E9  2DEB               	goto	u381
  4750  05EA  2DEC               	goto	u380
  4751  05EB                     u381:
  4752  05EB  2DF5               	goto	l1211
  4753  05EC                     u380:
  4754  05EC                     l1209:
  4755                           
  4756                           ;RFM69HCW.c: 35:         radio->received[20 - 1] = temp;
  4757  05EC  0873               	movf	send@temp,w
  4758  05ED  00F1               	movwf	??_send
  4759  05EE  0874               	movf	send@radio,w
  4760  05EF  3E13               	addlw	19
  4761  05F0  0086               	movwf	6
  4762  05F1  0187               	clrf	7
  4763  05F2  0871               	movf	??_send,w
  4764  05F3  0081               	movwf	1
  4765                           
  4766                           ;RFM69HCW.c: 36:     } else {
  4767  05F4  2E04               	goto	l146
  4768  05F5                     l1211:
  4769                           
  4770                           ;RFM69HCW.c: 37:         radio->received[radio->sendIndex - 1] = temp;
  4771  05F5  0873               	movf	send@temp,w
  4772  05F6  00F1               	movwf	??_send
  4773  05F7  0874               	movf	send@radio,w
  4774  05F8  3E4A               	addlw	74
  4775  05F9  0086               	movwf	6
  4776  05FA  0187               	clrf	7
  4777  05FB  0801               	movf	1,w
  4778  05FC  0774               	addwf	send@radio,w
  4779  05FD  00F2               	movwf	??_send+1
  4780  05FE  0872               	movf	??_send+1,w
  4781  05FF  3EFF               	addlw	255
  4782  0600  0086               	movwf	6
  4783  0601  0187               	clrf	7
  4784  0602  0871               	movf	??_send,w
  4785  0603  0081               	movwf	1
  4786  0604                     l146:	
  4787                           ;RFM69HCW.c: 38:     }
  4788                           
  4789                           
  4790                           ;RFM69HCW.c: 39:     radio->sent[radio->sendIndex] = msg;
  4791  0604  0870               	movf	send@msg,w
  4792  0605  00F1               	movwf	??_send
  4793  0606  0874               	movf	send@radio,w
  4794  0607  3E4A               	addlw	74
  4795  0608  0086               	movwf	6
  4796  0609  0187               	clrf	7
  4797  060A  0801               	movf	1,w
  4798  060B  0774               	addwf	send@radio,w
  4799  060C  00F2               	movwf	??_send+1
  4800  060D  0872               	movf	??_send+1,w
  4801  060E  3E14               	addlw	20
  4802  060F  0086               	movwf	6
  4803  0610  0187               	clrf	7
  4804  0611  0871               	movf	??_send,w
  4805  0612  0081               	movwf	1
  4806  0613                     l1213:
  4807                           
  4808                           ;RFM69HCW.c: 40:     return temp;
  4809  0613  0873               	movf	send@temp,w
  4810  0614                     l147:
  4811  0614  0008               	return
  4812  0615                     __end_of_send:
  4813                           
  4814                           	psect	text28
  4815  045F                     __ptext28:	
  4816 ;; *************** function _bytesToFloat *****************
  4817 ;; Defined at:
  4818 ;;		line 87 in file "receiver.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  bytes           1    wreg     PTR unsigned char 
  4821 ;;		 -> main@reversedPayload(4), 
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;  bytes           1    8[BANK0 ] PTR unsigned char 
  4824 ;;		 -> main@reversedPayload(4), 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  4    0[BANK0 ] float 
  4827 ;; Registers used:
  4828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4834 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4835 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4836 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4837 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4838 ;;Total ram usage:        9 bytes
  4839 ;; Hardware stack levels used: 1
  4840 ;; Hardware stack levels required when called: 1
  4841 ;; This function calls:
  4842 ;;		___xxtofl
  4843 ;; This function is called by:
  4844 ;;		_main
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           
  4849                           ;psect for function _bytesToFloat
  4850  045F                     _bytesToFloat:
  4851                           
  4852                           ;incstack = 0
  4853                           ; Regs used in _bytesToFloat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4854                           ;bytesToFloat@bytes stored from wreg
  4855  045F  0020               	movlb	0	; select bank0
  4856  0460  00C8               	movwf	bytesToFloat@bytes
  4857  0461                     l1397:
  4858                           
  4859                           ;receiver.c: 88:     return (float)(bytes[0] << 24 | bytes[1] << 16 | bytes[2] <<8 | byt
      +                          es[3]);
  4860  0461  0848               	movf	bytesToFloat@bytes,w
  4861  0462  3E03               	addlw	3
  4862  0463  0086               	movwf	6
  4863  0464  0187               	clrf	7
  4864  0465  0801               	movf	1,w
  4865  0466  00C4               	movwf	??_bytesToFloat
  4866  0467  01C5               	clrf	??_bytesToFloat+1
  4867  0468  0848               	movf	bytesToFloat@bytes,w
  4868  0469  3E02               	addlw	2
  4869  046A  0086               	movwf	6
  4870  046B  0187               	clrf	7
  4871  046C  0A48               	incf	bytesToFloat@bytes,w
  4872  046D  0084               	movwf	4
  4873  046E  0185               	clrf	5
  4874  046F  0800               	movf	0,w
  4875  0470  00C6               	movwf	??_bytesToFloat+2
  4876  0471  0848               	movf	bytesToFloat@bytes,w
  4877  0472  0084               	movwf	4
  4878  0473  0185               	clrf	5
  4879  0474  0800               	movf	0,w
  4880  0475  0446               	iorwf	??_bytesToFloat+2,w
  4881  0476  00C7               	movwf	??_bytesToFloat+3
  4882  0477  0844               	movf	??_bytesToFloat,w
  4883  0478  0447               	iorwf	??_bytesToFloat+3,w
  4884  0479  00F0               	movwf	___xxtofl@val
  4885  047A  0845               	movf	??_bytesToFloat+1,w
  4886  047B  0401               	iorwf	1,w
  4887  047C  00F1               	movwf	___xxtofl@val+1
  4888  047D  01F2               	clrf	___xxtofl@val+2
  4889  047E  1BF1               	btfsc	___xxtofl@val+1,7
  4890  047F  03F2               	decf	___xxtofl@val+2,f
  4891  0480  0872               	movf	___xxtofl@val+2,w
  4892  0481  00F3               	movwf	___xxtofl@val+3
  4893  0482  3001               	movlw	1
  4894  0483  3187  2720  3184   	fcall	___xxtofl
  4895  0486  0873               	movf	?___xxtofl+3,w
  4896  0487  0020               	movlb	0	; select bank0
  4897  0488  00C3               	movwf	?_bytesToFloat+3
  4898  0489  0872               	movf	?___xxtofl+2,w
  4899  048A  00C2               	movwf	?_bytesToFloat+2
  4900  048B  0871               	movf	?___xxtofl+1,w
  4901  048C  00C1               	movwf	?_bytesToFloat+1
  4902  048D  0870               	movf	?___xxtofl,w
  4903  048E  00C0               	movwf	?_bytesToFloat
  4904  048F                     l91:
  4905  048F  0008               	return
  4906  0490                     __end_of_bytesToFloat:
  4907                           
  4908                           	psect	text29
  4909  0720                     __ptext29:	
  4910 ;; *************** function ___xxtofl *****************
  4911 ;; Defined at:
  4912 ;;		line 10 in file "C:\Program Files (x86)\MPLAB X\Compilers\XC8\pic\sources\c99\common\xxtofl.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;  sign            1    wreg     unsigned char 
  4915 ;;  val             4    0[COMMON] long 
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  sign            1    8[COMMON] unsigned char 
  4918 ;;  arg             4   10[COMMON] unsigned long 
  4919 ;;  exp             1    9[COMMON] unsigned char 
  4920 ;; Return value:  Size  Location     Type
  4921 ;;                  4    0[COMMON] unsigned char 
  4922 ;; Registers used:
  4923 ;;		wreg, status,2, status,0
  4924 ;; Tracked objects:
  4925 ;;		On entry : 0/0
  4926 ;;		On exit  : 0/0
  4927 ;;		Unchanged: 0/0
  4928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4929 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4930 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4931 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4932 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4933 ;;Total ram usage:       14 bytes
  4934 ;; Hardware stack levels used: 1
  4935 ;; This function calls:
  4936 ;;		Nothing
  4937 ;; This function is called by:
  4938 ;;		_bytesToFloat
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           
  4943                           ;psect for function ___xxtofl
  4944  0720                     ___xxtofl:
  4945                           
  4946                           ;incstack = 0
  4947                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4948                           ;___xxtofl@sign stored from wreg
  4949  0720  00F8               	movwf	___xxtofl@sign
  4950  0721                     l1347:
  4951  0721  0878               	movf	___xxtofl@sign,w
  4952  0722  1903               	btfsc	3,2
  4953  0723  2F25               	goto	u441
  4954  0724  2F26               	goto	u440
  4955  0725                     u441:
  4956  0725  2F3A               	goto	l1353
  4957  0726                     u440:
  4958  0726                     l1349:
  4959  0726  1FF3               	btfss	___xxtofl@val+3,7
  4960  0727  2F29               	goto	u451
  4961  0728  2F2A               	goto	u450
  4962  0729                     u451:
  4963  0729  2F3A               	goto	l1353
  4964  072A                     u450:
  4965  072A                     l1351:
  4966  072A  0970               	comf	___xxtofl@val,w
  4967  072B  00FA               	movwf	___xxtofl@arg
  4968  072C  0971               	comf	___xxtofl@val+1,w
  4969  072D  00FB               	movwf	___xxtofl@arg+1
  4970  072E  0972               	comf	___xxtofl@val+2,w
  4971  072F  00FC               	movwf	___xxtofl@arg+2
  4972  0730  0973               	comf	___xxtofl@val+3,w
  4973  0731  00FD               	movwf	___xxtofl@arg+3
  4974  0732  0AFA               	incf	___xxtofl@arg,f
  4975  0733  1903               	skipnz
  4976  0734  0AFB               	incf	___xxtofl@arg+1,f
  4977  0735  1903               	skipnz
  4978  0736  0AFC               	incf	___xxtofl@arg+2,f
  4979  0737  1903               	skipnz
  4980  0738  0AFD               	incf	___xxtofl@arg+3,f
  4981  0739  2F42               	goto	l786
  4982  073A                     l1353:
  4983  073A  0873               	movf	___xxtofl@val+3,w
  4984  073B  00FD               	movwf	___xxtofl@arg+3
  4985  073C  0872               	movf	___xxtofl@val+2,w
  4986  073D  00FC               	movwf	___xxtofl@arg+2
  4987  073E  0871               	movf	___xxtofl@val+1,w
  4988  073F  00FB               	movwf	___xxtofl@arg+1
  4989  0740  0870               	movf	___xxtofl@val,w
  4990  0741  00FA               	movwf	___xxtofl@arg
  4991  0742                     l786:
  4992  0742  0873               	movf	___xxtofl@val+3,w
  4993  0743  0472               	iorwf	___xxtofl@val+2,w
  4994  0744  0471               	iorwf	___xxtofl@val+1,w
  4995  0745  0470               	iorwf	___xxtofl@val,w
  4996  0746  1D03               	skipz
  4997  0747  2F49               	goto	u461
  4998  0748  2F4A               	goto	u460
  4999  0749                     u461:
  5000  0749  2F53               	goto	l1359
  5001  074A                     u460:
  5002  074A                     l1355:
  5003  074A  3000               	movlw	0
  5004  074B  00F3               	movwf	?___xxtofl+3
  5005  074C  3000               	movlw	0
  5006  074D  00F2               	movwf	?___xxtofl+2
  5007  074E  3000               	movlw	0
  5008  074F  00F1               	movwf	?___xxtofl+1
  5009  0750  3000               	movlw	0
  5010  0751  00F0               	movwf	?___xxtofl
  5011  0752  2FCB               	goto	l788
  5012  0753                     l1359:
  5013  0753  3096               	movlw	150
  5014  0754  00F4               	movwf	??___xxtofl
  5015  0755  0874               	movf	??___xxtofl,w
  5016  0756  00F9               	movwf	___xxtofl@exp
  5017  0757  2F63               	goto	l1363
  5018  0758                     l1361:
  5019  0758  3001               	movlw	1
  5020  0759  00F4               	movwf	??___xxtofl
  5021  075A  0874               	movf	??___xxtofl,w
  5022  075B  07F9               	addwf	___xxtofl@exp,f
  5023  075C  3001               	movlw	1
  5024  075D                     u475:
  5025  075D  36FD               	lsrf	___xxtofl@arg+3,f
  5026  075E  0CFC               	rrf	___xxtofl@arg+2,f
  5027  075F  0CFB               	rrf	___xxtofl@arg+1,f
  5028  0760  0CFA               	rrf	___xxtofl@arg,f
  5029  0761  0B89               	decfsz	9,f
  5030  0762  2F5D               	goto	u475
  5031  0763                     l1363:
  5032  0763  30FE               	movlw	254
  5033  0764  057D               	andwf	___xxtofl@arg+3,w
  5034  0765  1D03               	btfss	3,2
  5035  0766  2F68               	goto	u481
  5036  0767  2F69               	goto	u480
  5037  0768                     u481:
  5038  0768  2F58               	goto	l1361
  5039  0769                     u480:
  5040  0769  2F7D               	goto	l792
  5041  076A                     l1365:
  5042  076A  3001               	movlw	1
  5043  076B  00F4               	movwf	??___xxtofl
  5044  076C  0874               	movf	??___xxtofl,w
  5045  076D  07F9               	addwf	___xxtofl@exp,f
  5046  076E                     l1367:
  5047  076E  3001               	movlw	1
  5048  076F  07FA               	addwf	___xxtofl@arg,f
  5049  0770  3000               	movlw	0
  5050  0771  3DFB               	addwfc	___xxtofl@arg+1,f
  5051  0772  3000               	movlw	0
  5052  0773  3DFC               	addwfc	___xxtofl@arg+2,f
  5053  0774  3000               	movlw	0
  5054  0775  3DFD               	addwfc	___xxtofl@arg+3,f
  5055  0776                     l1369:
  5056  0776  3001               	movlw	1
  5057  0777                     u495:
  5058  0777  36FD               	lsrf	___xxtofl@arg+3,f
  5059  0778  0CFC               	rrf	___xxtofl@arg+2,f
  5060  0779  0CFB               	rrf	___xxtofl@arg+1,f
  5061  077A  0CFA               	rrf	___xxtofl@arg,f
  5062  077B  0B89               	decfsz	9,f
  5063  077C  2F77               	goto	u495
  5064  077D                     l792:
  5065  077D  30FF               	movlw	255
  5066  077E  057D               	andwf	___xxtofl@arg+3,w
  5067  077F  1D03               	btfss	3,2
  5068  0780  2F82               	goto	u501
  5069  0781  2F83               	goto	u500
  5070  0782                     u501:
  5071  0782  2F6A               	goto	l1365
  5072  0783                     u500:
  5073  0783  2F8D               	goto	l1373
  5074  0784                     l1371:
  5075  0784  3001               	movlw	1
  5076  0785  02F9               	subwf	___xxtofl@exp,f
  5077  0786  3001               	movlw	1
  5078  0787                     u515:
  5079  0787  35FA               	lslf	___xxtofl@arg,f
  5080  0788  0DFB               	rlf	___xxtofl@arg+1,f
  5081  0789  0DFC               	rlf	___xxtofl@arg+2,f
  5082  078A  0DFD               	rlf	___xxtofl@arg+3,f
  5083  078B  0B89               	decfsz	9,f
  5084  078C  2F87               	goto	u515
  5085  078D                     l1373:
  5086  078D  1BFC               	btfsc	___xxtofl@arg+2,7
  5087  078E  2F90               	goto	u521
  5088  078F  2F91               	goto	u520
  5089  0790                     u521:
  5090  0790  2F97               	goto	l799
  5091  0791                     u520:
  5092  0791                     l1375:
  5093  0791  3002               	movlw	2
  5094  0792  0279               	subwf	___xxtofl@exp,w
  5095  0793  1803               	skipnc
  5096  0794  2F96               	goto	u531
  5097  0795  2F97               	goto	u530
  5098  0796                     u531:
  5099  0796  2F84               	goto	l1371
  5100  0797                     u530:
  5101  0797                     l799:
  5102  0797  1879               	btfsc	___xxtofl@exp,0
  5103  0798  2F9A               	goto	u541
  5104  0799  2F9B               	goto	u540
  5105  079A                     u541:
  5106  079A  2FA3               	goto	l800
  5107  079B                     u540:
  5108  079B                     l1377:
  5109  079B  30FF               	movlw	255
  5110  079C  05FA               	andwf	___xxtofl@arg,f
  5111  079D  30FF               	movlw	255
  5112  079E  05FB               	andwf	___xxtofl@arg+1,f
  5113  079F  307F               	movlw	127
  5114  07A0  05FC               	andwf	___xxtofl@arg+2,f
  5115  07A1  30FF               	movlw	255
  5116  07A2  05FD               	andwf	___xxtofl@arg+3,f
  5117  07A3                     l800:
  5118  07A3  1003               	clrc
  5119  07A4  0CF9               	rrf	___xxtofl@exp,f
  5120  07A5                     l1379:
  5121  07A5  0879               	movf	___xxtofl@exp,w
  5122  07A6  00F4               	movwf	??___xxtofl
  5123  07A7  01F5               	clrf	??___xxtofl+1
  5124  07A8  01F6               	clrf	??___xxtofl+2
  5125  07A9  01F7               	clrf	??___xxtofl+3
  5126  07AA  3018               	movlw	24
  5127  07AB                     u555:
  5128  07AB  35F4               	lslf	??___xxtofl,f
  5129  07AC  0DF5               	rlf	??___xxtofl+1,f
  5130  07AD  0DF6               	rlf	??___xxtofl+2,f
  5131  07AE  0DF7               	rlf	??___xxtofl+3,f
  5132  07AF                     u550:
  5133  07AF  0B89               	decfsz	9,f
  5134  07B0  2FAB               	goto	u555
  5135  07B1  0874               	movf	??___xxtofl,w
  5136  07B2  04FA               	iorwf	___xxtofl@arg,f
  5137  07B3  0875               	movf	??___xxtofl+1,w
  5138  07B4  04FB               	iorwf	___xxtofl@arg+1,f
  5139  07B5  0876               	movf	??___xxtofl+2,w
  5140  07B6  04FC               	iorwf	___xxtofl@arg+2,f
  5141  07B7  0877               	movf	??___xxtofl+3,w
  5142  07B8  04FD               	iorwf	___xxtofl@arg+3,f
  5143  07B9                     l1381:
  5144  07B9  0878               	movf	___xxtofl@sign,w
  5145  07BA  1903               	btfsc	3,2
  5146  07BB  2FBD               	goto	u561
  5147  07BC  2FBE               	goto	u560
  5148  07BD                     u561:
  5149  07BD  2FC3               	goto	l1387
  5150  07BE                     u560:
  5151  07BE                     l1383:
  5152  07BE  1FF3               	btfss	___xxtofl@val+3,7
  5153  07BF  2FC1               	goto	u571
  5154  07C0  2FC2               	goto	u570
  5155  07C1                     u571:
  5156  07C1  2FC3               	goto	l1387
  5157  07C2                     u570:
  5158  07C2                     l1385:
  5159  07C2  17FD               	bsf	___xxtofl@arg+3,7
  5160  07C3                     l1387:
  5161  07C3  087D               	movf	___xxtofl@arg+3,w
  5162  07C4  00F3               	movwf	?___xxtofl+3
  5163  07C5  087C               	movf	___xxtofl@arg+2,w
  5164  07C6  00F2               	movwf	?___xxtofl+2
  5165  07C7  087B               	movf	___xxtofl@arg+1,w
  5166  07C8  00F1               	movwf	?___xxtofl+1
  5167  07C9  087A               	movf	___xxtofl@arg,w
  5168  07CA  00F0               	movwf	?___xxtofl
  5169  07CB                     l788:
  5170  07CB  0008               	return
  5171  07CC                     __end_of___xxtofl:
  5172  007E                     btemp	set	126	;btemp
  5173  007E                     wtemp0	set	126
  5174                           
  5175                           	psect	config
  5176                           
  5177                           ;Config register CONFIG1 @ 0x8007
  5178                           ;	Oscillator Selection Bits
  5179                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5180                           ;	Power-up Timer Enable
  5181                           ;	PWRTE = OFF, PWRT disabled
  5182                           ;	MCLR Pin Function Select
  5183                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5184                           ;	Flash Program Memory Code Protection
  5185                           ;	CP = OFF, Program memory code protection is disabled
  5186                           ;	Brown-out Reset Enable
  5187                           ;	BOREN = ON, Brown-out Reset enabled
  5188                           ;	Clock Out Enable
  5189                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5190                           ;	Internal/External Switch Over
  5191                           ;	IESO = ON, Internal External Switch Over mode is enabled
  5192                           ;	Fail-Safe Clock Monitor Enable
  5193                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5194  8007                     	org	32775
  5195  8007  3FFC               	dw	16380
  5196                           
  5197                           ;Config register CONFIG2 @ 0x8008
  5198                           ;	Flash Memory Self-Write Protection
  5199                           ;	WRT = OFF, Write protection off
  5200                           ;	Peripheral Pin Select one-way control
  5201                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  5202                           ;	Zero Cross Detect Disable Bit
  5203                           ;	ZCD = OFF, ZCD disable.  ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  5204                           ;	PLL Enable Bit
  5205                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  5206                           ;	Stack Overflow/Underflow Reset Enable
  5207                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5208                           ;	Brown-out Reset Voltage Selection
  5209                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5210                           ;	Low-Power Brown Out Reset
  5211                           ;	LPBOR = OFF, Low-Power BOR is disabled
  5212                           ;	Low-Voltage Programming Enable
  5213                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5214  8008                     	org	32776
  5215  8008  1EFF               	dw	7935
  5216                           
  5217                           ;Config register CONFIG3 @ 0x8009
  5218                           ;	WDT Period Select
  5219                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
  5220                           ;	Watchdog Timer Enable
  5221                           ;	WDTE = OFF, WDT disabled
  5222                           ;	WDT Window Select
  5223                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
  5224                           ;	WDT Input Clock Selector
  5225                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
  5226  8009                     	org	32777
  5227  8009  3F9F               	dw	16287

Data Sizes:
    Strings     0
    Constant    0
    Data        117
    BSS         27
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     24      79
    BANK1            80     75      79
    BANK2            80      0      10
    BANK3            80      0      75
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    getPowerSettings@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    restartRx@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    startRSSISampling@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    checkRSSISampling@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    getRSSIThreshold@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    checkForPayload@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    getOperatingMode@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    getModeFlags@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    getFifoFlags@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    getRSSI@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setOperatingMode@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setAutoMode@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setDiodeMapping@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setPowerOutput@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    initRadio@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setPreambleLength@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setRecommendedParams@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setPacketFormat@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    sendPairs@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setAutoMode@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    getModeFlags@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    setDiodeMapping@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    getOperatingMode@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    getFifoFlags@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    getRSSI@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    sendPayload@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setPowerOutput@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    initRadio@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    setPreambleLength@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    receivePayload@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    receivePayload@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    setModulationThreshold@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setModulationThreshold@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    setRecommendedParams@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    setOperatingMode@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    setPacketFormat@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    setRSSIThreshold@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setRSSIThreshold@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    setNodeAddress@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setNodeAddress@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    setPacketLength@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setPacketLength@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    setSyncWords@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    setSyncWords@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    setPinWithMask@pPort	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    send@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    send@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    sendBulk@msgs	PTR unsigned char  size(1) Largest target is 10
		 -> setAutoMode@msg(BANK0[2]), getPowerSettings@msg(COMMON[2]), restartRx@msg(COMMON[2]), startRSSISampling@msg(COMMON[2]), 
		 -> checkRSSISampling@msg(COMMON[2]), getModeFlags@msg(BANK0[2]), setDiodeMapping@msg(BANK0[2]), getOperatingMode@msg(BANK0[2]), 
		 -> getRSSIThreshold@msg(COMMON[2]), getFifoFlags@msg(BANK0[2]), getRSSI@msg(BANK0[2]), setPowerOutput@msg(BANK0[2]), 
		 -> setPreambleLength@msg(BANK0[2]), checkForPayload@flags(COMMON[2]), setModulationThreshold@msg(BANK0[2]), setOperatingMode@msg(BANK0[2]), 
		 -> setPacketFormat@msg(BANK0[2]), setRSSIThreshold@msg(BANK0[2]), setNodeAddress@msg(BANK0[2]), setPacketLength@msg(BANK0[2]), 
		 -> setSyncWords@msg(BANK0[10]), sendPairs@msg(BANK0[2]), 

    sendBulk@radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    sendBulk@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    sendPairs@radio	PTR struct RFM69HCW size(1) Largest target is 75
		 -> main@radio(BANK1[75]), 

    sendPairs@msgs	PTR unsigned char  size(1) Largest target is 10
		 -> recommended_params(BANK2[10]), 

    radio.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    S84RFM69HCW$SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    F9417.SSport	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    bytesToFloat@bytes	PTR unsigned char  size(1) Largest target is 4
		 -> main@reversedPayload(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_getFifoFlags
    _main->_getModeFlags
    _main->_getOperatingMode
    _main->_getRSSI
    _setPowerOutput->_sendBulk
    _setOperatingMode->_sendBulk
    _setDiodeMapping->_sendBulk
    _setAutoMode->_sendBulk
    _receivePayload->_setPinWithMask
    _initRadio->_setModulationThreshold
    _initRadio->_setNodeAddress
    _initRadio->_setPacketFormat
    _initRadio->_setPacketLength
    _initRadio->_setPreambleLength
    _initRadio->_setRSSIThreshold
    _initRadio->_setSyncWords
    _setSyncWords->_sendBulk
    _setRecommendedParams->_sendPairs
    _sendPairs->_sendBulk
    _setRSSIThreshold->_sendBulk
    _setPreambleLength->_sendBulk
    _setPacketLength->_sendBulk
    _setPacketFormat->_sendBulk
    _setNodeAddress->_sendBulk
    _setModulationThreshold->_sendBulk
    _rfmSetup->_resetRadio
    _getRSSI->_sendBulk
    _getOperatingMode->_sendBulk
    _getModeFlags->_sendBulk
    _getFifoFlags->_sendBulk
    _sendBulk->_setPinWithMask
    _bytesToFloat->___xxtofl

Critical Paths under _main in BANK0

    _main->_initRadio
    _setPowerOutput->_sendBulk
    _setOperatingMode->_sendBulk
    _setDiodeMapping->_sendBulk
    _setAutoMode->_sendBulk
    _initRadio->_setSyncWords
    _setSyncWords->_sendBulk
    _setRecommendedParams->_sendPairs
    _sendPairs->_sendBulk
    _setRSSIThreshold->_sendBulk
    _setPreambleLength->_sendBulk
    _setPacketLength->_sendBulk
    _setPacketFormat->_sendBulk
    _setNodeAddress->_sendBulk
    _setModulationThreshold->_sendBulk
    _getRSSI->_sendBulk
    _getOperatingMode->_sendBulk
    _getModeFlags->_sendBulk
    _getFifoFlags->_sendBulk

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                82    82      0  113840
                                             17 BANK0      7     7      0
                                              0 BANK1     75    75      0
                       _bytesToFloat
                       _getFifoFlags
                       _getModeFlags
                   _getOperatingMode
                            _getRSSI
                               _init
                          _initRadio
                     _receivePayload
                        _setAutoMode
                    _setDiodeMapping
                   _setOperatingMode
                     _setPowerOutput
 ---------------------------------------------------------------------------------
 (1) _setPowerOutput                                       6     5      1    6916
                                             12 COMMON     1     0      1
                                              3 BANK0      5     5      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (1) _setOperatingMode                                     6     5      1    6916
                                             12 COMMON     1     0      1
                                              3 BANK0      5     5      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (1) _setDiodeMapping                                      6     5      1    6916
                                             12 COMMON     1     0      1
                                              3 BANK0      5     5      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (1) _setAutoMode                                          6     5      1    6916
                                             12 COMMON     1     0      1
                                              3 BANK0      5     5      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (1) _receivePayload                                       5     5      0    2609
                                              6 COMMON     5     5      0
                               _send
                     _setPinWithMask
 ---------------------------------------------------------------------------------
 (1) _initRadio                                            1     1      0   55311
                                             16 BANK0      1     1      0
             _setModulationThreshold
                     _setNodeAddress
                    _setPacketFormat
                    _setPacketLength
                  _setPreambleLength
                   _setRSSIThreshold
               _setRecommendedParams
                       _setSyncWords
 ---------------------------------------------------------------------------------
 (2) _setSyncWords                                        15    15      0    6953
                                             12 COMMON     2     2      0
                                              3 BANK0     13    13      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _setRecommendedParams                                 2     2      0    7203
                                             11 BANK0      2     2      0
                          _sendPairs
 ---------------------------------------------------------------------------------
 (3) _sendPairs                                           10     7      3    7148
                                             12 COMMON     2     2      0
                                              3 BANK0      8     5      3
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _setRSSIThreshold                                     5     5      0    6840
                                             12 COMMON     2     2      0
                                              3 BANK0      3     3      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _setPreambleLength                                    5     5      0    6793
                                             12 COMMON     2     2      0
                                              3 BANK0      3     3      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _setPacketLength                                      5     5      0    6840
                                             12 COMMON     2     2      0
                                              3 BANK0      3     3      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _setPacketFormat                                      5     5      0    6793
                                             12 COMMON     2     2      0
                                              3 BANK0      3     3      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _setNodeAddress                                       5     5      0    6840
                                             12 COMMON     2     2      0
                                              3 BANK0      3     3      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _setModulationThreshold                               5     5      0    6840
                                             12 COMMON     2     2      0
                                              3 BANK0      3     3      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                     _TRIS_ANS_Setup
                           _rfmSetup
 ---------------------------------------------------------------------------------
 (2) _rfmSetup                                             0     0      0       0
                         _resetRadio
                    _spi_init_master
 ---------------------------------------------------------------------------------
 (3) _spi_init_master                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _resetRadio                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TRIS_ANS_Setup                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getRSSI                                              5     5      0    6817
                                             12 COMMON     2     2      0
                                              3 BANK0      3     3      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (1) _getOperatingMode                                     5     5      0    6817
                                             12 COMMON     2     2      0
                                              3 BANK0      3     3      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (1) _getModeFlags                                         5     5      0    6817
                                             12 COMMON     2     2      0
                                              3 BANK0      3     3      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (1) _getFifoFlags                                         5     5      0    6850
                                             12 COMMON     2     2      0
                                              3 BANK0      3     3      0
                           _sendBulk
 ---------------------------------------------------------------------------------
 (2) _sendBulk                                             9     7      2    6712
                                              6 COMMON     6     4      2
                                              0 BANK0      3     3      0
                               _send
                     _setPinWithMask
 ---------------------------------------------------------------------------------
 (3) _setPinWithMask                                       6     2      4    1478
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _send                                                 5     4      1     876
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _bytesToFloat                                         9     5      4     519
                                              0 BANK0      9     5      4
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _bytesToFloat
     ___xxtofl
   _getFifoFlags
     _sendBulk
       _send
       _setPinWithMask
   _getModeFlags
     _sendBulk
   _getOperatingMode
     _sendBulk
   _getRSSI
     _sendBulk
   _init
     _TRIS_ANS_Setup
     _rfmSetup
       _resetRadio
       _spi_init_master
   _initRadio
     _setModulationThreshold
       _sendBulk
     _setNodeAddress
       _sendBulk
     _setPacketFormat
       _sendBulk
     _setPacketLength
       _sendBulk
     _setPreambleLength
       _sendBulk
     _setRSSIThreshold
       _sendBulk
     _setRecommendedParams
       _sendPairs
         _sendBulk
     _setSyncWords
       _sendBulk
   _receivePayload
     _send
     _setPinWithMask
   _setAutoMode
     _sendBulk
   _setDiodeMapping
     _sendBulk
   _setOperatingMode
     _sendBulk
   _setPowerOutput
     _sendBulk

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4B      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       A       9       12.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4B      11       93.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     101      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     101      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Sep 15 01:05:32 2021

                             l82 0315                               l91 048F                               l85 0244  
                             l79 0264                               l88 024E                       _SYNC_WORDS 0020  
                   _RSSISampling 006E                              l201 05B8                              l130 0516  
                            l107 0286                              l141 05C4                              l230 02C1  
                            l206 02AC                              l214 0379                              l135 0674  
                            l152 0434                              l240 02EB                              l225 0300  
                            l209 045E                              l146 0604                              l250 02D6  
                            l162 03B3                              l147 0614                              l139 05BE  
                            l172 03D0                              l157 04CC                              l245 0347  
                            l190 03EE                              l182 0360                              l167 0396  
                            l177 0299                              l185 0273                              l275 032E  
                            l800 07A3                              l792 077D                              l786 0742  
                            l788 07CB               setPacketFormat@msg 0043                              l799 0797  
             setPacketLength@msg 0043                              u320 0414                              u400 065E  
                            u321 0413                              u401 065D                              u410 04E0  
                            u411 04DF                              u500 0783                              u420 0516  
                            u501 0782                              u405 065A                              u421 0515  
                            u350 05C4                              u334 0419                              u430 04BF  
                            u351 05C3                              u335 0418                              u415 04DC  
                            u431 04BE                              u520 0791                              u440 0726  
                            u360 05C8                              u344 042A                              u600 06D9  
                            u521 0790                              u441 0725                              u361 05C7  
                            u345 0429                              u425 0512                              u601 06D8  
                            u530 0797                              u450 072A                              u370 05DA  
                            u610 0710                              u531 0796                              u515 0787  
                            u451 0729                              u371 05D9                              u435 04BB  
                            u611 070F                              u540 079B                              u460 074A  
                            u380 05EC                              u541 079A                              u461 0749  
                            u381 05EB                              u550 07AF                              u390 0633  
                            u391 0632                              u615 070C                              u560 07BE  
                            u480 0769                              u561 07BD                              u481 0768  
                            u570 07C2                              u571 07C1                              u555 07AB  
                            u475 075D                              u580 05A3                              u581 05A2  
                            u637 06E6                              u590 0683                              u495 0777  
                            u647 0306                              u657 0310                              u585 059F  
         __end_of_TRIS_ANS_Setup 0265                              wreg 0009           _setModulationThreshold 03D1  
                           l1201 05C8                             l1211 05F5                             l1203 05DA  
                           l1213 0613                             l1205 05DF                             l1221 062E  
                           l1301 04B2                             l1207 05E3                             l1231 065E  
                           l1311 03A7                             l1303 04BF                             l1209 05EC  
                           l1225 0634                             l1217 0617                             l1233 0301  
                           l1241 0279                             l1313 037C                             l1305 0399  
                           l1321 03B6                             l1401 0437                             l1227 064D  
                           l1219 062B                             l1235 0303                             l1251 0280  
                           l1243 027A                             l1315 037E                             l1331 028D  
                           l1307 039B                             l1323 03B8                             l1411 0331  
                           l1403 0363                             l1229 0651                             l1237 030B  
                           l1253 0283                             l1245 027B                             l1341 03E2  
                           l1317 0382                             l1309 039F                             l1325 03BC  
                           l1261 04E1                             l1333 0267                             l1421 0318  
                           l1413 0333                             l1405 0365                             l1501 06C1  
                           l1351 072A                             l1191 0414                             l1271 025C  
                           l1247 027C                             l1239 0274                             l1335 03D3  
                           l1319 038A                             l1343 029C                             l1327 03C4  
                           l1263 04F7                             l1255 04CF                             l1423 031A  
                           l1415 0337                             l1431 034A                             l1407 0369  
                           l1511 06EA                             l1503 06CA                             l1361 0758  
                           l1353 073A                             l1193 0425                             l1441 02F2  
                           l1281 0262                             l1273 025E                             l1249 027D  
                           l1337 03D5                             l1329 0289                             l1345 02A0  
                           l1265 0503                             l1257 04D3                             l1425 031E  
                           l1417 033B                             l1433 034C                             l1409 036D  
                           l1521 06FF                             l1513 06EE                             l1505 06D3  
                           l1371 0784                             l1363 0763                             l1355 074A  
                           l1347 0721                             l1195 05BA                             l1451 02BF  
                           l1443 02FE                             l1283 0263                             l1275 025F  
                           l1291 024B                             l1339 03D9                             l1267 0508  
                           l1427 0322                             l1435 0350                             l1523 0703  
                           l1507 06D9                             l1381 07B9                             l1373 078D  
                           l1365 076A                             l1349 0726                             l1189 040F  
                           l1277 0260                             l1269 0259                             l1285 0245  
                           l1293 0492                             l1437 0354                             l1525 0710  
                           l1509 06E2                             l1383 07BE                             l1375 0791  
                           l1367 076E                             l1359 0753                             l1199 05C0  
                           l1447 02AF                             l1455 02C4                             l1463 02D9  
                           l1439 02EE                             l1279 0261                             l1287 0247  
                           l1391 023E                             l1471 0563                             l1519 06F1  
                           l1385 07C2                             l1377 079B                             l1369 0776  
                           l1449 02B3                             l1457 02C8                             l1465 02DD  
                           l1289 0248                             l1393 0241                             l1297 049E  
                           l1481 05A3                             l1473 057C                             l1387 07C3  
                           l1379 07A5                             l1459 02D4                             l1467 02E9  
                           l1299 04AE                             l1475 057F                             l1491 0694  
                           l1483 0675                             l1397 0461                             l1477 058E  
                           l1493 069D                             l1485 0678                             l1479 0592  
                           l1495 06A6                             l1487 0687                             l1497 06AF  
                           l1489 068B                             l1499 06B8                             _RSSI 00ED  
                           _main 0675                             _init 023E                             _send 05B9  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                             start 0002             setPacketFormat@F9440 003E  
           setPacketLength@F9428 006A              main@reversedPayload 0052                            ?_main 0070  
                          ?_init 0070                            ?_send 0070             setPacketFormat@radio 0045  
           setPacketLength@radio 0045                  ?_TRIS_ANS_Setup 0070                            _PORTA 000C  
                __end_of_getRSSI 0301          __end_of_setDiodeMapping 0348            getOperatingMode@F9489 0032  
        __size_of_setPowerOutput 0019             __end_of_getFifoFlags 02C2                            main@i 0056  
                getModeFlags@msg 0044            setOperatingMode@F9445 0064                            status 0003  
                          wtemp0 007E       __size_of_setPreambleLength 0013            getOperatingMode@radio 0043  
                __initialization 07CC                     __end_of_main 0720                     __end_of_init 0245  
                   __end_of_send 0615            setOperatingMode@radio 0045              setPinWithMask@pPort 0070  
           __end_of_getModeFlags 02D7                   _setNodeAddress 037A              setPinWithMask@value 0073  
         setPreambleLength@F9462 003A                     ?_setAutoMode 007C                           ??_main 0051  
                         ??_init 0071                           ??_send 0071           setPreambleLength@radio 0045  
          getRSSIThreshold@F9485 0034                           _ANSELA 018C                           _ANSELC 018E  
                  ?_bytesToFloat 0040                setPowerOutput@msg 0046                           _RC0PPS 0EA0  
                         _RC3PPS 0EA3            setRSSIThreshold@F9436 0066                   _setPinWithMask 040F  
                         _TRISA2 0462                           _TRISC0 0470                           _TRISC1 0471  
                         _TRISA5 0465                           _TRISC2 0472                           _TRISC3 0473  
                         _TRISC5 0475                getFifoFlags@F9481 0036                 __end_of___xxtofl 07CC  
   __end_of_setRecommendedParams 0274           __end_of_setNodeAddress 0397            setRSSIThreshold@radio 0045  
       __end_of_setOperatingMode 0361                getFifoFlags@radio 0045                  _setPacketFormat 0287  
                _setPacketLength 0397                        ??_getRSSI 007C                 __end_of_rfmSetup 024F  
               __end_of_sendBulk 0675                 ?_setDiodeMapping 007C                   ??_bytesToFloat 0044  
               ??_receivePayload 0076           __end_of_setPinWithMask 0435                     ___xxtofl@arg 007A  
                   ___xxtofl@exp 0079                     ___xxtofl@val 0070          __end_of__initialization 07FD  
                 __pcstackCOMMON 0070                  ?_setNodeAddress 0070        __size_of_getOperatingMode 0015  
      __size_of_setRSSIThreshold 001D                     __pidataBANK0 03EF                     __pidataBANK2 024F  
                   __pidataBANK3 0517            getPowerSettings@F9514 0028          ?_setModulationThreshold 0070  
          __size_of_getFifoFlags 0015    setOperatingMode@operatingMode 007C                   _setPowerOutput 0361  
                ?_setPinWithMask 0070                       __pbssBANK0 0058                       __pbssBANK1 00EB  
                  sendBulk@radio 0042         __size_of_spi_init_master 0013               __size_of_initRadio 002A  
          __size_of_getModeFlags 0015                      sendBulk@len 0077          __end_of_setPacketFormat 029A  
        __end_of_setPacketLength 03B4                       __pmaintext 0675               __size_of_sendPairs 004A  
                   _getFifoFlags 02AD                 ??_TRIS_ANS_Setup 0070   __end_of_setModulationThreshold 03EF  
           __size_of_setAutoMode 0019                        ?___xxtofl 0070           __end_of_setPowerOutput 037A  
                  sendPairs@msgs 0043                          _SSP1BUF 0211             _setRecommendedParams 0265  
                  ?_setSyncWords 0070                     _getModeFlags 02C2        setModulationThreshold@msg 0043  
           setAutoMode@autoModes 007C                        ?_rfmSetup 0070                        ?_sendBulk 0076  
             setDiodeMapping@msg 0046             __end_of_bytesToFloat 0490              setNodeAddress@F9432 0068  
              setSyncWords@radio 004D                          _getRSSI 02EC                          __ptext1 0361  
                        __ptext2 0348                          __ptext3 032F                          __ptext4 0316  
                        __ptext5 0562                          __ptext6 0435                          __ptext7 0490  
                        __ptext8 0265                          __ptext9 04CD                getModeFlags@F9498 0030  
              __end_of_initRadio 045F                       ??___xxtofl 0074                  ?_setPowerOutput 007C  
                 initRadio@radio 0050              setNodeAddress@radio 0045            ?_setRecommendedParams 0070  
                     getRSSI@msg 0044                   ??_setSyncWords 007C                          clrloop0 0233  
              __end_of_sendPairs 0517             end_of_initialization 07FD                getModeFlags@radio 0043  
           checkForPayload@F9455 003C                          init_ram 0238                          initloop 0239  
                        send@msg 0070                       ??_rfmSetup 0071                       ??_sendBulk 0078  
                     _resetRadio 0301                 ?_setPacketFormat 0070                 ?_setPacketLength 0070  
              ??_spi_init_master 0070                 _getOperatingMode 02D7                 _setRSSIThreshold 03B4  
              ?_setOperatingMode 007C               ??_setOperatingMode 0043                        _PORTCbits 000E  
                      _SSPDATPPS 0E21                    ___xxtofl@sign 0078           setDiodeMapping@mapping 007C  
               ??_setNodeAddress 007C             setPreambleLength@msg 0043                  receivePayload@i 0078  
         checkRSSISampling@F9502 002E                  getFifoFlags@msg 0043              start_initialization 07CC  
               ??_setPinWithMask 0074           ??_setRecommendedParams 004B               setPinWithMask@iPin 0072  
       __size_of_setDiodeMapping 0019                      ?_resetRadio 0070           startRSSISampling@F9506 002C  
          __size_of_bytesToFloat 0031                  setSyncWords@msg 0043             setDiodeMapping@F9494 005E  
              setNodeAddress@msg 0043             __end_of_setSyncWords 04CD                      __pdataBANK0 0020  
                    __pdataBANK2 0120                      __pdataBANK3 01A0                bytesToFloat@bytes 0048  
           setDiodeMapping@radio 0045                        ___latbits 0002                    __pcstackBANK0 0040  
                  __pcstackBANK1 00A0                __size_of___xxtofl 00AC                     _bytesToFloat 045F  
                  setSyncWords@i 004E        setRecommendedParams@radio 004C                     sendBulk@msgs 0076  
        __size_of_receivePayload 0057                __size_of_rfmSetup 000A      setModulationThreshold@F9451 0062  
              __size_of_sendBulk 0060                       sendPairs@i 0049                        _fifoFlags 00EC  
                 _thermistorTemp 0058                 ??_setPowerOutput 0043                    ??_setAutoMode 0043  
            receivePayload@radio 007A                     sendPairs@len 0044                         ?_getRSSI 0070  
                   sendPairs@msg 0047              setPowerOutput@F9469 0060      setModulationThreshold@radio 0045  
                 setAutoMode@msg 0046              __size_of_resetRadio 0015                        _initRadio 0435  
       __end_of_getOperatingMode 02EC         __end_of_setRSSIThreshold 03D1                        _modeFlags 00EB  
                 sendPairs@F9406 006C              setPowerOutput@radio 0045                  _spi_init_master 0274  
                      _sendPairs 04CD                     getRSSI@F9477 0038                    _operatingMode 00EE  
                      clear_ram0 0232                   sendPairs@radio 0046                   restartRx@F9510 002A  
                      main@F9417 01A0                ??_setDiodeMapping 0043                     getRSSI@radio 0043  
               setAutoMode@F9519 005C                        main@radio 00A0              __end_of_setAutoMode 032F  
                     ?_initRadio 0070          __size_of_TRIS_ANS_Setup 000C        __size_of_setOperatingMode 0019  
               setAutoMode@radio 0045              getOperatingMode@msg 0044              setOperatingMode@msg 0046  
                     ?_sendPairs 0043            __size_of_setSyncWords 003D         ??_setModulationThreshold 007C  
            setRSSIThreshold@msg 0043         __size_of_setPacketFormat 0013         __size_of_setPacketLength 001D  
               __size_of_getRSSI 0015                         ___xxtofl 0720          __end_of_spi_init_master 0287  
                      send@radio 0074                        sendBulk@i 0040                         __ptext10 03B4  
                       __ptext11 029A                         __ptext20 0259                         __ptext12 0397  
                       __ptext21 02EC                         __ptext13 0287                         __ptext22 02D7  
                       __ptext14 037A                         __ptext23 02C2                         __ptext15 03D1  
                       __ptext24 02AD                         __ptext16 023E                         __ptext25 0615  
                       __ptext17 0245                         __ptext26 040F                         __ptext18 0274  
                       __ptext27 05B9                         __ptext19 0301                         __ptext28 045F  
                       __ptext29 0720                     _SSP1CON1bits 0215                     _setSyncWords 0490  
                  __size_of_main 00AB                    __size_of_init 0007                    __size_of_send 005C  
                   ??_resetRadio 0070                         _rfmSetup 0245                         _sendBulk 0615  
                 _receivePayload 0562                    ?_getFifoFlags 0070                     _SSP1STATbits 0214  
                    _setAutoMode 0316                      ??_initRadio 007E               __end_of_resetRadio 0316  
  __size_of_setRecommendedParams 000F                    ?_getModeFlags 0070                         send@temp 0073  
             _recommended_params 0120                      ??_sendPairs 007C           __end_of_receivePayload 05B9  
                    _SSP1CONbits 0215      setPowerOutput@powerSettings 007C                _setPreambleLength 029A  
__size_of_setModulationThreshold 001E                   ??_getFifoFlags 007C               ?_setPreambleLength 0070  
        __size_of_setNodeAddress 001D              ??_setPreambleLength 007C                 ?_spi_init_master 0070  
                 _TRIS_ANS_Setup 0259                ??_setPacketFormat 007C                ??_setPacketLength 007C  
               _setOperatingMode 0348                   ??_getModeFlags 007C                ?_getOperatingMode 0070  
              ?_setRSSIThreshold 0070               ??_getOperatingMode 007C               ??_setRSSIThreshold 007C  
                _setDiodeMapping 032F          __size_of_setPinWithMask 0026                  ?_receivePayload 0070  
      __end_of_setPreambleLength 02AD  
